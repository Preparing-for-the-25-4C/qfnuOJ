# src.py

import re
import logging

logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(levelname)s - %(message)s',
    datefmt='%Y-%m-%d %H:%M:%S'
)

filenames = ['1', '1000', '1002', '1003', '1004', '1005', '1007', '1008', '101', '1011', '1012', '1014', '1016',
'1017', '1018', '1019', '1020', '1023', '1024', '1026', '1027', '1028', '1029', '1031', '1032', '1033',
'1034', '1035', '1036', '1037', '1038', '1039', '104', '1040', '1041', '1042', '1043', '1044', '1045',
'1046', '119', '123', '127', '128', '135', '136', '138', '139', '140', '141', '149', '150', '151',
'152', '153', '154', '159', '165', '166', '168', '169', '174', '175', '177', '178', '179', '180',
'181', '182', '183', '184', '185', '186', '188', '189', '190', '191', '192', '193', '194', '195',
'196', '197', '198', '199', '200', '201', '202', '203', '204', '205', '206', '207', '208', '209',
'210', '211', '212', '213', '214', '215', '216', '217', '218', '219', '220', '221', '222', '223',
'224', '225', '226', '227', '228', '229', '230', '231', '232', '233', '234', '235', '236', '237',
'238', '239', '240', '241', '242', '243', '244', '245', '246', '247', '248', '249', '250', '251',
'252', '253', '254', '255', '256', '257', '258', '259', '260', '261', '262', '263', '264', '265',
'266', '267', '268', '269', '270', '271', '272', '273', '274', '275', '276', '277', '278', '279',
'280', '281', '282', '283', '284', '285', '286', '287', '288', '289', '290', '291', '293', '297',
'298', '299', '301', '302', '303', '305', '306', '308', '310', '311', '312', '314', '315', '316',
'318', '319', '320', '376', '377', '378', '379', '380', '383', '384', '385', '386', '389', '390',
'391', '393', '400', '402', '403', '404', '405', '406', '407', '408', '410', '412', '413', '414',
'415', '416', '417', '418', '419', '420', '421', '422', '433', '434', '435', '439', '440', '441',
'442', '443', '444', '445', '446', '447', '448', '449', '45', '450', '451', '452', '453', '454', '455',
'456', '457', '458', '459', '460', '461', '462', '463', '465', '467', '468', '469', '47', '470', '471',
'472', '473', '474', '475', '476', '477', '483', '487', '494', '51', '519', '52', '523', '524', '526',
'529', '53', '531', '532', '533', '534', '536', '538', '539', '542', '543', '544', '547', '55', '550',
'551', '552', '553', '554', '555', '557', '558', '559', '56', '560', '561', '564', '565', '570', '578',
'579', '58', '581', '583', '585', '586', '587', '588', '589', '590', '591', '592', '593', '594', '595',
'596', '617', '618', '619', '620', '621', '622', '623', '624', '625', '626', '627', '628', '629', '63',
'631', '632', '633', '65', '67', '677', '678', '679', '680', '681', '682', '683', '69', '70', '700',
'702', '71', '72', '726', '727', '728', '729', '73', '730', '731', '732', '733', '734', '735', '736',
'737', '738', '739', '740', '741', '743', '744', '745', '746', '747', '748', '749', '750', '751',
'752', '753', '76', '777', '778', '779', '780', '784', '787', '788', '79', '790', '791', '793', '794',
'80', '802', '804', '805', '806', '807', '808', '809', '81', '810', '811', '812', '813', '814', '815',
'817', '822', '826', '827', '828', '829', '83', '830', '831', '834', '835', '836', '837', '838', '839',
'84', '840', '841', '842', '843', '844', '845', '846', '847', '848', '849', '85', '850', '851', '852',
'853', '854', '855', '857', '858', '859', '86', '860', '861', '862', '863', '864', '865', '866', '867',
'87', '871', '872', '873', '874', '875', '876', '88', '888', '89', '896', '898', '899', '90', '900',
'901', '902', '903', '904', '905', '907', '91', '914', '917', '918', '919', '92', '920', '922', '923',
'925', '926', '929', '930', '931', '932', '935', '938', '941', '942', '943', '945', '948', '949',
'951', '952', '954', '956', '958', '959', '96', '961', '965', '967', '968', '969', '970', '971', '973',
'975', '976', '978', '979', '98', '980', '982', '983', '985', '986', '987', '988', '989', '990', '991',
'992', '993', '995', '996', '997', '998', '999']


def extract_text_between_tags(text):
    """新增标签提取日志"""
    pattern = r'<回答>(.*?)</回答>'
    matches = re.findall(pattern, text, re.DOTALL)

    if not text:
        logging.warning("提取标签时输入文本为空")
        return None

    if not matches:
        logging.warning("未在文本中找到<回答>标签内容")
        return None

    logging.info(f"成功提取到{len(matches)}个匹配的<回答>标签内容")
    return matches[0].strip() if matches[0] else None


def getTopicSurface(index):
    try:
        file_id = filenames[index]
        path = f'JSON_FD/{file_id}/problem.json'
        logging.info(f"正在读取题面文件: {path}")

        with open(path, 'r', encoding='utf-8') as f:
            content = f.read()
            logging.debug(f"题面文件读取完成，内容长度: {len(content)} 字符")
            return content

    except IndexError:
        logging.error(f"索引 {index} 超出filenames列表范围（总文件数: {len(filenames)}）")
        raise
    except UnicodeDecodeError:
        logging.error("文件编码解析失败，请确认文件使用UTF-8编码")
        raise
    except Exception as e:
        logging.error(f"读取题面文件时发生未知错误: {str(e)}", exc_info=True)
        raise


def saveKeywords(index, content):
    try:
        file_id = filenames[index]
        path = f"./keyword/{file_id}.txt"
        logging.info(f"正在保存关键词到: {path}")

        with open(path, 'w', encoding="utf8") as f:
            f.write(content)
            logging.debug(f"文件保存完成，写入内容长度: {len(content)} 字符")

        logging.info(f"关键词已成功保存至: {path}")
    except IOError:
        logging.error("文件写入失败，请检查目录权限或磁盘空间")
        raise
    except Exception as e:
        logging.error(f"保存关键词时发生未知错误: {str(e)}", exc_info=True)
        raise