{
    "说明": "【问题描述】\n李教授将于今天下午作一次非常重要的演讲。不信的事他不是一个非常爱整洁的人，他\n把自己演讲要用的幻灯片随便堆在了一起。因此，演讲之前他不得不去整理这些幻灯片。作\n为一个讲求效率的学者，他希望尽可能简单地完成它。教授这次演讲一共要用 n 张幻灯片\n（n<=26），这 n 张幻灯片按照演讲要使用的顺序已经用数字 1~n 编了号。因为幻灯片是透\n明的，所以我们不能一下子看清每一个数字所对应的幻灯片。\n现在我们用大写字母 ABC……再次把幻灯片依次编号。你的任务是编写一个程序，把\n幻灯片的数字编号和字母编号对应起来，显然这种对应应该是唯一的；若出现多种对应的情\n况或是某些数字编号和字母编号对应不起来，我们称对应是无法实现的。",
    "输入格式": "【输入格式】 文件的第一行只有一个整数 n，表示有 n 张幻灯片，接下来的 n 行每行包括 4 个整数 xminxmaxyminymax（整数之间用空格分开）为幻灯片的坐标，这 n 张幻灯片按其在文件 中出现的顺序从前到后依次编号为 ABC……，再接下来的 n 行依次为 n 个数字编号的坐标 xy，显然在幻灯片之外是不会有数字的。",
    "输出格式": "【输出格式】 若是对应可以实现，输出文件应该包括 n 行，每一行为一个字母和一个数字，中间以一 个空格隔开，并且每行以字母的升序排列，注意输出的字母要大写并且定格；反之，若是对\n应无法实现，在文件的第一行顶格输出 None 即可。首行末无多余的空格。",
    "样例": {
        "输入": "4\n6 22 10 20\n4 18 6 16\n8 20 2 18\n10 24 4 8\n9 15\n19 17\n11 7\n21 11",
        "输出": "A 4\nB 1\nC 2\nD 3"
    }
}