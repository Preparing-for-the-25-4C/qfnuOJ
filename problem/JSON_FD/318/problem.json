{
    "说明": "春春幼儿园举办了一年一度的“积木大赛”。今年比赛的内容是搭建一座宽度为n的大厦，大厦可以看成由n块宽度为1的积木组成，第i块积木的最终高度需要是h\ni\n。\n在搭建开始之前，没有任何积木（可以看成n块高度为0的积木）。接下来每次操作，小朋友们可以选择一段连续区间[L, R]，然后将第L块到第R块之间（含第L块和第R块）所有积木的高度分别增加1。\n小M是个聪明的小朋友，她很快想出了建造大厦的最佳策略，使得建造所需的操作次数最少。但她不是一个勤于动手的孩子，所以想请你帮忙实现这个策略，并求出最少的操作次数。",
    "输入格式": "每组输入数据包含两行，第一行包含一个整数n，表示大厦的宽度。\n第二行包含n个整数，第i个整数为h\ni\n。\n数据规模：\n其中一种可行的最佳方案，依次选择 [1, 5] [1, 3] [2, 3] [3, 3] [5, 5]\n对于30%的数据，有1≤n≤10；\n对于70%的数据，有1≤n≤1000；\n对于100%的数据，有1≤n≤100000，0≤h\ni\n≤10000。",
    "输出格式": "每组输出仅一行，即建造所需的最少操作数。\n下面是对样例数据的解释：\n其中一种可行的最佳方案，依次选择\n[1, 5]  [1, 3]  [2, 3]  [3, 3]  [5, 5]",
    "样例": {
        "输入": "5\n2 3 4 1 2",
        "输出": "5"
    }
}