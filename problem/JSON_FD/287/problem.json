{
    "说明": "对于1位二进制变量定义两种运算：\n运算的优先级是：\n1. 先计算括号内的，再计算括号外的。\n2. “×”运算优先于“⊕”运算，即计算表达式时，先计算×运算，再计算⊕运算。\n例如：计算表达式A⊕B×C时，先计算B×C，其结果再与A做⊕运算。\n现给定一个未完成的表达式，例如_+(_*_)，请你在横线处填入数字0或者1，请问有多少种填法可以使得表达式的值为0。",
    "输入格式": "每组输入数据的第1行为一个整数L，表示给定的表达式中除去横线外的运算符和括号的个数。\n第2行为一个字符串包含L个字符，其中只包含‘（’、‘）’、‘+’、‘*’这4种字符，其中‘（’、‘）’是左右括号，‘+’、‘*’分别表示前面定义的运算符“⊕”和“×”。这行字符按顺序给出了给定表达式中除去变量外的运算符和括号。\n数据规模：\n对于20%的数据有0≤L≤10；\n对于50%的数据有0≤L≤1,000；\n对于70%的数据有0≤L≤10,000；\n对于100%的数据有0≤L≤100,000；\n对于50%的数据输入表达式中不含括号。",
    "输出格式": "每组输出共1行。包含一个整数，即所有的方案数。注意：这个数可能会很大，请输出方案数对10007取模后的结果。\n下面是对样例数据的解释：\n给定的表达式包括横线字符之后为：_+(_*_)\n在横线位置填入(0、0、0)、(0、1、0)、(0、0、1) 时，表达式的值均为0 ，所以共有3种填法。",
    "样例": {
        "输入": "4\n+(*)",
        "输出": "3"
    }
}