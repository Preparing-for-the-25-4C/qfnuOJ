################################################################################
#Judge0配置文件
################################################################################
#Judge0是一个高度可配置的工具，允许您在许多情况下使用它
#不同的用例。请在部署Judge0之前先看看这个
#配置文件，分为几个逻辑部分，这将有助于
#你知道你能用Judge0做什么。
#
#此默认配置文件旨在为您开箱即用
#您可以在服务器上部署Judge0时从它开始。
#
#如果您有任何问题，请不要发电子邮件或打开
#项目GitHub页面上的问题。


################################################################################
#Judge0服务器配置
################################################################################
#启用或禁用Judge0遥测。
#在此处阅读更多信息：https://github.com/judge0/judge0/blob/master/TELEMETRY.md
#默认值：true
判断0_电话可用=

#如果启动失败，自动重新启动Judge0服务器。
#默认值：10
RESTART_MAX_TRIES=

#维护模式是客户端无法
#在启用维护时创建或删除提交。
#默认值：false
维护模式=

#设置将返回给客户端的自定义维护消息
#他们试图创建或删除提交。
#默认值：Judge0当前正在维护中。
维护消息=

#如果启用，用户可以请求同步等待
#提交创建时的提交结果。
#默认值：true，即用户可以请求等待结果
ENABLE_WAIT_RESULT=

#如果启用，则允许用户设置自定义编译器选项。
#默认值：true
ENABLE_copiler_OPTIONS=

#列出允许设置编译器选项的语言名称，用空格分隔。
#请注意，ENABLE_COMPILER_OPTIONS具有更高的优先级，因此此选项将
#如果使用ENABLE_compiler_options禁用设置编译器选项，则忽略。
#例如，ALLOWED_LANGUAGES_For-COMPILER_OPTIONS=“C C++Java”只会
#允许设置C、C++和Java语言的编译器选项。
#默认值：空-允许为每种编译语言设置编译器选项。
ALLOWED_LANGUAGES_FOR_COMPILER_OPTIONS=

#如果启用，则允许用户设置自定义命令行参数。
#默认值：true
ENABLE_comman_LINE_参数=

#如果启用了自动授权，用户可以删除提交。
#默认值：false
启用_提交_删除=

#如果启用，用户可以GET和POST批提交。
#默认值：true
ENABLE_BATCHED_SUBMISSIONS=

#可以创建或批量获取的最大提交数。
#默认值：20
MAX_SUBMISSION_BATCH_SIZE=

#如果启用，用户可以使用回调。
#默认值：true
ENABLE_callback=

#放弃前的最大回调尝试次数。
#默认值：3
callback_MAX_TRIES=

#在这几秒钟后超时回拨。
#默认值：5
callback_超时=

#如果启用，用户可以在沙盒中预设其他文件。
#默认值：true
启用_附加_文件=

#提交缓存的持续时间（秒）。允许使用十进制数字。
#设置为0可启用提交缓存。请注意，这不适用于
#批量提交。
#默认值：1
提交_成功_持续时间=

#如果为真，文档页面将用作主页，否则
#主页将为空。您始终可以通过/docs访问文档页面。
#默认值：false
使用DOCS_AS_主页=


################################################################################
#判断0工人配置
################################################################################
#指定轮询频率（秒）。允许使用十进制数字。
#默认值：0.1
间隔时间=

#指定要运行的并行工作线程数。
#默认值：2*nproc(https://linux.die.net/man/1/nproc)
计数=

#指定最大队列大小。表示提交的最大数量
#可以立即在队列中等待。如果收到新的提交请求
#如果队列已满，则提交将被拒绝。
#默认值：100
MAX_QUEUE_SIZE=


################################################################################
#Judge0服务器访问配置
################################################################################
#只允许指定的来源。
#如果留空，则允许所有原点（用“*”表示）。
#示例：
#ALLOW_ORIGIN=“www.judge0.com judge0.comwww.example.com blog.example.com”
允许原点=

#只允许指定的来源。
#如果留空，则不允许使用任何原点。
#示例：
#DISALLOW_ORIGIN=“www.judge0.com judge0.comwww.example.com blog.example.com”
禁止原创=

#只允许指定的IP地址。
#如果留空，则允许使用所有IP地址。
#示例：
#ALLOW_IP=“192.168.10.10 96.239.226.228 208.23.207.242”
允许IP=

#只允许指定的IP地址。
#如果留空，则不允许使用任何IP地址。
#示例：
#DISALLOW_IP=“192.168.10.10 96.239.226.228 208.23.207.242”
DISALLOW_IP=


################################################################################
#Judge0身份验证配置
################################################################################
#您可以使用（AUTHN_HEADER，AUTHN_TOKEN）对保护API。
#然后，每个请求都需要在头部或
#查询参数。例如，让AUTHN_HEADER=X-Judge0-Token
#AUTHN_TOKEN=mySecretToken。然后，用户应通过发送以下内容进行身份验证
#在每个请求的头部或查询参数中，例如：
# https://api.judge0.com/system_info?X-Judge0令牌=mySecretToken

#指定身份验证标头名称。
#默认值：X-Auth-Token
AUTHN_HEADER=

#指定有效的身份验证令牌。
#默认值：空-身份验证已禁用
AUTHN_TOKEN=


################################################################################
#Judge0授权配置
################################################################################
#受保护的API调用可以使用（AUTHZ_HEADER，AUTHZ_TOKEN）对发出。
#查看哪些API调用受授权令牌保护
#请阅读以下文档https://api.judge0.com.
#API授权确保只有指定的用户调用受保护的API调用。
#例如，让AUTHZ_HEADER=X-Judge0-User，AUTHZ_TOKEN=mySecretToken。
#然后，用户应授权在标头或查询参数中发送此消息
#每个请求，例如：https://api.judge0.com/system_info?X-Judge0用户=mySecretToken
#请注意，如果启用了身份验证，则用户还应发送有效的
#身份验证令牌。

#指定授权标头名称。
#默认值：X-Auth-User
AUTHZ_HEADER=

#指定有效的授权令牌。
#默认值：空-禁用授权，无法发出受保护的API调用
AUTHZ_TOKEN=


################################################################################
#Redis配置
################################################################################
#指定Redis主机
#默认值：localhost
REDIS_HOST=REDIS

#指定Redis端口。
#默认值：6379
REDIS_PORT=

#指定Redis密码。不能为空。
#默认值：无默认值！必须设置！
REDIS_PASSWORD=H6t3fmZZKrc3ZcDHSAuv2ETx5WRFAgN5


################################################################################
#PostgreSQL配置
################################################################################
#指定Postgres主机。
#默认值：localhost
POSTGRES_HOST=db

#指定Postgres端口。
#默认值：5432
POSTGRES_PORT=

#要使用的数据库的名称。仅用于生产。
#默认值：postgres
POSTGRES_DB=judge0

#可以访问此数据库的用户。仅用于生产。
#默认值：postgres
POSTGRES_USER=judge0

#用户的密码。不能为空。仅用于生产。
#默认值：无默认值，您必须设置密码
POSTGRES_PASSWORD=VR3kUvjfpSRUVRJ5FC5XzWPbnpNPq6u


################################################################################
#提交配置
################################################################################
#Judge0使用隔离作为沙盒环境。
#您在此处看到的几乎所有选项都可以映射到其中一个选项
#这种隔离提供了。有关这些选项的更多信息，请
#在此处查看隔离文档：
# https://raw.githubusercontent.com/ioi/isolate/master/isolate.1.txt

#每个程序的默认运行时间限制（秒）。允许使用十进制数字。
#不计算操作系统将处理器分配给不同任务的时间。
#默认值：5
CPU_TIME_LIMIT=

#最大自定义CPU_TIME_LIMIT。
#默认值：15
MAX_CPU_TIME_LIMIT=

#当超过时间限制时，请等待额外的时间（以秒为单位），然后
#杀死程序。这具有实时执行时间短的优点
#尽管它略微超过了限制。
#默认值：1
CPU_EXTRA_时间=

#最大自定义CPU_EXTRA_TIME。
#默认值：5
MAX_CPU_EXTRA_TIME=

#限制挂钟时间（秒）。允许使用十进制数字。
#该时钟测量从程序开始到退出的时间，
#因此，当程序失去CPU或等待时，它不会停止
#对于外部事件。我们建议使用CPU_TIME_LIMIT作为主要限制，
#但将WALL_TIME_LIMIT设置为更高的值，作为预防措施
#睡眠程序。
#默认值：10
墙时间限制=

#最大自定义WALL_TIME_LIMIT。
#默认值：20
MAX_WALL_TIME_LIMIT=

#限制程序的地址空间（以千字节为单位）。
#默认值：128000
内存限制=

#最大自定义内存限制。
#默认值：512000
MAX_MEMORY_LIMIT=

#以千字节为单位限制进程堆栈。
#默认值：64000
堆栈限制=

#最大自定义STACK_LIMIT。
#默认值：128000
MAX_STACK_LIMIT=

#程序可以创建的最大进程数和/或线程数。
#默认值：60
最大进程数和线程数=

#最大自定义MAX_PROCESES_AND_OR_THREADS。
#默认值：120
最大最大进程数和线程数=

#如果为true，则将按进程和线程使用CPU_TIME_LIMIT。
#默认值：false，即CPU_TIME_LIMIT设置为所有进程和线程的总限制。
ENABLE_PER_PROCESS_AND_THREAD_TIME_LIMIT=

#如果为false，则用户将无法设置ENABLE_PER_PROCES_AND_THREAD_TIME_LIMIT。
#默认值：true
ALLOW_ENABLE_PER_PROCESS_AND_THREAD_TIME_LIMIT=

#如果为true，则将按进程和线程使用MEMORY_LIMIT。
#默认值：false，即MEMORY_LIMIT设置为所有进程和线程的总限制。
启用_进程_线程_内存_限制=

#如果为false，则用户将无法设置ENABLE_PER_PROCES_AND_THREAD_MEMORY_LIMIT。
#默认值：true
允许启用进程和线程内存限制=

#限制程序创建（或修改）的文件大小（以千字节为单位）。
#默认值：1024
MAX_FILE_SIZE=

#最大自定义MAX_FILE_SIZE。
#默认值：4096
MAX_MAX_FILE_SIZE=

#运行每个程序这么多次，平均占用时间和内存。
#默认值：1
跑步次数=

#最大自定义数_OF_RUNS。
#默认值：20
MAX_NUMBER_OF_RUNS=

#将stderr重定向到stdout。
#默认值：false
REDIRECT_sderr_TO_sdout=

#从其他文件存档中提取的文件的最大总大小（以千字节为单位）。
#默认值：10240，即最多可提取10MB。
最大提取大小=

#如果为false，则用户将无法设置ENABLE_NETWORK。
#默认值：true，即允许用户允许或拒绝提交的网络呼叫。
允许启用网络=

#如果提交正确，默认情况下可以进行网络调用。
#默认值：false，即程序不能进行网络调用。
启用网络=


################################################################################
#Rails配置
################################################################################
#指定Rails环境：生产或开发
#默认值：生产
RAILS_ENV=

#指定并发Rails线程的最大数量。
#默认值：nproc(https://linux.die.net/man/1/nproc)
RAILS_MAX_THREADS=

#指定将创建多少进程来处理请求。每个过程
#将额外创建RAILS_MAX_THREADS线程。
#默认值：2
RAILS_SERVER_进程=

#用于生产的密钥库，如果不设置，将随机生成
#默认值：随机生成
秘密密钥库=