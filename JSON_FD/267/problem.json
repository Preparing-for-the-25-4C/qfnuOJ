{
    "说明": "Tom最近在研究一个有趣的排序问题。如图所示，通过2个栈S1和S2，Tom希望借助以下4种操作实现将输入序列升序排序。\n操作a\n如果输入序列不为空，将第一个元素压入栈S1\n操作b\n如果栈S1不为空，将S1栈顶元素弹出至输出序列\n操作c\n如果输入序列不为空，将第一个元素压入栈S2\n操作d\n如果栈S2不为空，将S2栈顶元素弹出至输出序列\n如果一个1~n的排列P可以通过一系列操作使得输出序列为1，2，...，(n-1)，n，Tom就称P是一个“可双栈排序排列”。例如(1, 3, 2, 4)就是一个“可双栈排序序列”，而(2, 3, 4, 1)不是。下图描述了一个将(1, 3, 2, 4)排序的操作序列：<a, c, c, b, a, d, d, b>\n当然，这样的操作序列有可能有几个，对于上例(1, 3, 2, 4)，<a, c, c, b, a, d, d, b>是另外一个可行的操作序列。Tom希望知道其中字典序最小的操作序列是什么。",
    "输入格式": "每组输入数据的第一行是一个整数n。\n第二行有n个用空格隔开的正整数，构成一个1~n的排列。\n数据规模：\n30%的数据满足：n<=10；\n50%的数据满足：n<=50；\n100%的数据满足：n<=1000。",
    "输出格式": "每组输出共一行，如果输入的排列不是“可双栈排序排列”，输出数字0；否则输出字典序最小的操作序列，每两个操作之间用空格隔开，行尾没有空格。",
    "样例": {
        "输入": "4\n1 3 2 4\n\n4\n2 3 4 1\n\n3\n2 3 1",
        "输出": "a b a a b b a b\n\n0\n\na c a b b d"
    }
}