{
    "说明": "小B最近迷上了华容道，可是他总是要花很长的时间才能完成一次。于是，他想到用编程来完成华容道：给定一种局面，华容道是否根本就无法完成，如果能完成，最少需要多少时间。\n小B玩的华容道与经典的华容道游戏略有不同，游戏规则是这样的：\n1. 在一个n*m棋盘上有n*m个格子，其中有且只有一个格子是空白的，其余n*m-1个格子上每个格子上有一个棋子，每个棋子的大小都是1*1的；\n2. 有些棋子是固定的，有些棋子则是可以移动的；\n3. 任何与空白的格子相邻（有公共的边）的格子上的棋子都可以移动到空白格子上。\n游戏的目的是把某个指定位置可以活动的棋子移动到目标位置。\n给定一个棋盘，游戏可以玩q次，当然，每次棋盘上固定的格子是不会变的，但是棋盘上空白的格子的初始位置、指定的可移动的棋子的初始位置和目标位置却可能不同。第i次玩的时候，空白的格子在第EX\ni\n行第EY\ni\n列，指定的可移动棋子的初始位置为第SX\ni\n行第SY\ni\n列，目标位置为第TX\ni\n行第TY\ni\n列。\n假设小B每秒钟能进行一次移动棋子的操作，而其他操作的时间都可以忽略不计。请你告诉小B每一次游戏所需要的最少时间，或者告诉他不可能完成游戏。",
    "输入格式": "每组输入数据的第一行有3个整数，每两个整数之间用一个空格隔开，依次表示n、m和q；\n接下来的n行描述一个n*m的棋盘，每行有m个整数，每两个整数之间用一个空格隔开，每个整数描述棋盘上一个格子的状态，0表示该格子上的棋子是固定的，1表示该格子上的棋子可以移动或者该格子是空白的。\n接下来的q行，每行包含6个整数依次是EX\ni\n、EY\ni\n、SX\ni\n、SY\ni\n、TX\ni\n、TY\ni\n，每两个整数之间用一个空格隔开，表示每次游戏空白格子的位置，指定棋子的初始位置和目标位置。\n数据规模：\n对于30%的数据，1≤n, m≤10，q=1；\n对于60%的数据，1≤n, m≤30，q≤10；\n对于100%的数据，1≤n, m≤30，q≤500。",
    "输出格式": "每组输出有q行，每行包含1个整数，表示每次游戏所需要的最少时间，如果某次游戏无法完成目标则输出−1。\n下面是对样例数据的解释：\n棋盘上划叉的格子是固定的，红色格子是目标位置，圆圈表示棋子，其中绿色圆圈表示目标棋子。\n1. 第一次游戏，空白格子的初始位置是(3, 2)（图中空白所示），游戏的目标是将初始位置在(1, 2)上的棋子（图中绿色圆圈所代表的棋子）移动到目标位置(2, 2)（图中红色的格子）上。\n移动过程如下：\n2. 第二次游戏，空白格子的初始位置是(1, 2)（图中空白所示），游戏的目标是将初始位置在(2, 2)上的棋子（图中绿色圆圈所示）移动到目标位置(3, 2)上。\n要将指定块移入目标位置，必须先将空白块移入目标位置，空白块要移动到目标位置，必然是从位置(2, 2)上与当前图中目标位置上的棋子交换位置，之后能与空白块交换位置的只有当前图中目标位置上的那个棋子，因此目标棋子永远无法走到它的目标位置，游戏无法完成。",
    "样例": {
        "输入": "3 4 2\n0 1 1 1\n0 1 1 0\n0 1 0 0\n3 2 1 2 2 2\n1 2 2 2 3 2",
        "输出": "2\n-1"
    }
}