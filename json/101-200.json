{
    "item": [
        {
            "id": "00000101",
            "title": {
                "text": "C\u8bed\u8a00\u7a0b\u5e8f\u8bbe\u8ba1\u6559\u7a0b\uff08\u7b2c\u4e09\u7248\uff09\u8bfe\u540e\u4e60\u98988.1"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "128",
                "@unit": "mb"
            },
            "description": {
                "text": "\u5199\u4e24\u4e2a\u51fd\u6570hcf\u548clcd\uff0c\u5206\u522b\u6c42\u4e24\u4e2a\u6574\u6570\u7684\u6700\u5927\u516c\u7ea6\u6570\u548c\u6700\u5c0f\u516c\u500d\u6570\uff0c\u7528\u4e3b\u51fd\u6570\u8c03\u7528\u8fd9\u4e24\u4e2a\u51fd\u6570\uff0c\u5e76\u8f93\u51fa\u7ed3\u679c\u4e24\u4e2a\u6574\u6570\u7531\u952e\u76d8\u8f93\u5165\u3002"
            },
            "input": {
                "text": "\u4e24\u4e2a\u6570"
            },
            "output": {
                "text": "\u6700\u5927\u516c\u7ea6\u6570 \u6700\u5c0f\u516c\u500d\u6570"
            },
            "sample_input": {
                "text": "6 15"
            },
            "sample_output": {
                "text": "3 30"
            },
            "hint": {},
            "source": {
                "text": "\u6559\u5b66\u9898-C\u8bed\u8a00\u4e60\u9898"
            },
            "solution": [
                {
                    "text": "#include\n#include\nint yueshu(int a,int b)\n{\n\tint t;\n\twhile(b)\n\t{\n\t\tt=a%b;\n\t\ta=b;\n\t\tb=t;\n\t}\n\treturn a;\n}\nint beishu(int a,int b)\n{\n\tint t=yueshu(a,b);\n\treturn a*b/t;\n}\nint main()\n{\n\tint i,j,a,b;\n\tscanf(\"%d%d\",&a,&b);\n\tprintf(\"%d %d\",yueshu(a,b),beishu(a,b));\n}",
                    "@language": "C"
                },
                {
                    "text": "#include\nusing namespace std;\nint gcd(int m,int n)\n{\n\tint r=m%n;\n\twhile (r)\n\t{\n\t\tm=n;\n\t\tn=r;\n\t\tr=m%n;\n\t}\n\treturn n;\n}\nint lcd(int m,int n)\n{\n\treturn m*n/gcd(m,n);\n}\nint main()\n{\n\tint m,n;\n\tcin>>m>>n;\n\tcout<<gcd(m,n)<<\" \"<<lcd(m,n)<<endl;\n\treturn 0;\n}",
                    "@language": "C++"
                }
            ]
        },
        {
            "id": "00000102",
            "title": {
                "text": "C\u8bed\u8a00\u7a0b\u5e8f\u8bbe\u8ba1\u6559\u7a0b\uff08\u7b2c\u4e09\u7248\uff09\u8bfe\u540e\u4e60\u98988.2"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "128",
                "@unit": "mb"
            },
            "description": {
                "text": "\u6c42\u65b9\u7a0bax^2+bx+c=0\u7684\u6839\uff0c\u7528\u4e09\u4e2a\u51fd\u6570gz\uff0cez\u548csz\u5206\u522b\u6c42\u5f53b^2-4ac\u5927\u4e8e0\u3001\u7b49\u4e8e0\u548c\u5c0f\u4e8e0\u65f6\u7684\u6839\uff0c\u5e76\u8f93\u51fa\u7ed3\u679c\u3002\u4ece\u4e3b\u51fd\u6570\u8f93\u5165a\u3001b\u3001c\u7684\u503c\u3002\uff08\u8f93\u51fa\u4fdd\u75593\u4f4d\u5c0f\u6570\uff09"
            },
            "input": {
                "text": "a b c"
            },
            "output": {
                "text": "x1=? x2=?"
            },
            "sample_input": {
                "text": "4 1 1"
            },
            "sample_output": {
                "text": "x1=-0.125+0.484i x2=-0.125-0.484i"
            },
            "hint": {},
            "source": {
                "text": "\u6559\u5b66\u9898-C\u8bed\u8a00\u4e60\u9898"
            },
            "solution": [
                {
                    "text": "#include\n#include\ndouble dayu(double a,double b,double c)\n{\n\tdouble m1=(-b+sqrt(b*b-4*a*c))/(a*2);\n\tdouble m2=(-b-sqrt(b*b-4*a*c))/(a*2);\n\tprintf(\"x1=%.3lf x2=%.3lf\",m1,m2);\n}\ndouble dengyu(double a,double b,double c)\n{\n\tdouble m1=(-b)/(2*a);\n\tprintf(\"x1=x2=%.3lf\",m1);\n}\ndouble xiaoyu(double a,double b,double c)\n{\n\tdouble m1=(-b)/(2*a);\n\tdouble t=sqrt(4*a*c-b*b)/(2*a);\n\tprintf(\"x1=%.3lf+%.3lfi x2=%.3lf-%.3lfi\",m1,t,m1,t);\n}\nint main()\n{\n    int i,j;\n\tdouble a,b,c;\n\tscanf(\"%lf%lf%lf\",&a,&b,&c);\n\tif(pow(b,2)-4*a*c>0)  dayu(a,b,c);\n\telse if(pow(b,2)-4*a*c==0)  dengyu(a,b,c);\n\telse xiaoyu(a,b,c);\n}",
                    "@language": "C"
                },
                {
                    "text": "#include\n#include\n#include\nusing namespace std;\ndouble disc,x1,x2,p,q;\nvoid big(int a,int b)\t//>0\n{\n\tx1=(-b+sqrt(disc))/(2.0*a);\n\tx2=(-b-sqrt(disc))/(2.0*a);\n}\nvoid small(int a,int b)\t//>a>>b>>c;\n\tdisc=b*b-4*a*c;\n\tif (disc>0)\n\t{\n\t\tbig(a,b);\n\t\tprintf(\"x1=%.3lf x2=%.3lf\\n\",x1,x2);\n\t}\n\telse if (disc==0)\n\t{\n\t\tequal(a,b);\n\t\tprintf(\"x1=x2=%.3lf\\n\",x1);\n\t}\n\telse\n\t{\n\t\tsmall(a,b);\n\t\tprintf(\"x1=%.3lf+%.3lfi x2=%.3lf-%.3lfi\\n\",p,q,p,q);\n\t}\n\treturn 0;\n}",
                    "@language": "C++"
                }
            ]
        },
        {
            "id": "00000103",
            "title": {
                "text": "C\u8bed\u8a00\u7a0b\u5e8f\u8bbe\u8ba1\u6559\u7a0b\uff08\u7b2c\u4e09\u7248\uff09\u8bfe\u540e\u4e60\u98988.3"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "128",
                "@unit": "mb"
            },
            "description": {
                "text": "\u5199\u4e00\u4e2a\u5224\u65ad\u7d20\u6570\u7684\u51fd\u6570prim\uff0c\u5728\u4e3b\u51fd\u6570\u8f93\u5165\u4e00\u4e2a\u6574\u6570\uff0c\u8f93\u51fa\u662f\u5426\u662f\u7d20\u6570\u7684\u6d88\u606f\u3002"
            },
            "input": {
                "text": "\u4e00\u4e2a\u6570"
            },
            "output": {
                "text": "\u5982\u679c\u662f\u7d20\u6570\u8f93\u51faprime \u5982\u679c\u4e0d\u662f\u8f93\u51fanot prime"
            },
            "sample_input": {
                "text": "97"
            },
            "sample_output": {
                "text": "prime"
            },
            "hint": {},
            "source": {
                "text": "\u6559\u5b66\u9898-C\u8bed\u8a00\u4e60\u9898"
            },
            "solution": [
                {
                    "text": "#include\n#include\nvoid panduan(int n)\n{\n\tint i;\n\tint a[10000]={1,1};\n\tfor(i=2;i<=sqrt(n);i++)\n\t{\n\t\tif(n%i==0)  a[n]=1;break;\n\t}\n\tif(a[n]==0)  printf(\"prime\");\n\telse printf(\"not prime\"); \n}\nint main()\n{\n    int n;\n    scanf(\"%d\",&n);\n    panduan(n);\n}",
                    "@language": "C"
                },
                {
                    "text": "#include\n#include\nusing namespace std;\nbool prime(int n)\n{\n\tint i,t=sqrt(n);\n\tfor (i=2; it;\n}\nint main()\n{\n\tint n;\n\tcin>>n;\n\tif (prime(n)) cout<<\"prime\"<<endl;\n\telse cout<<\"not prime\"<<endl;\n\treturn 0;\n}",
                    "@language": "C++"
                }
            ]
        },
        {
            "id": "00000104",
            "title": {
                "text": "C\u8bed\u8a00\u7a0b\u5e8f\u8bbe\u8ba1\u6559\u7a0b\uff08\u7b2c\u4e09\u7248\uff09\u8bfe\u540e\u4e60\u98988.4"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "128",
                "@unit": "mb"
            },
            "description": {
                "text": "\u5199\u4e00\u4e2a\u51fd\u6570convert\uff0c\u4f7f\u7ed9\u5b9a\u7684\u4e00\u4e2a\u4e8c\u7ef4\u6570\u7ec4\uff08\uff13&times;\uff13\uff09\u8f6c\u7f6e\uff0c\u5373\u884c\u5217\u4e92\u6362\u3002"
            },
            "input": {
                "text": "\u4e00\u4e2a3x3\u7684\u77e9\u9635"
            },
            "output": {
                "text": "\u8f6c\u7f6e\u540e\u7684\u77e9\u9635"
            },
            "sample_input": {
                "text": "1 2 3\n4 5 6\n7 8 9"
            },
            "sample_output": {
                "text": "1 4 7 \n2 5 8 \n3 6 9"
            },
            "hint": {
                "text": "\u8f93\u51fa\u6bcf\u4e00\u884c\u672b\u5c3e\u6709\u7a7a\u683c"
            },
            "source": {
                "text": "\u6559\u5b66\u9898-C\u8bed\u8a00\u4e60\u9898"
            },
            "solution": [
                {
                    "text": "#include\nint convert(int m[3][3])\n{\n    int b[3][3],i,j;\n    for( i=0;i<3;i++)\n    {\n        for( j=0;j<3;j++)\n        {\n            b[i][j]=m[j][i];\n \n        }\n    }\n    for( i=0;i<3;i++)\n    {\n        for( j=0;j<3;j++)\n        {\n            printf(\"%d\\t\",b[i][j]);\n        }\n        printf(\"\\n\");\n    }\n \n \n \n}\n \n \nint main() {\n   int a[3][3];\n \n   for(int i=0;i<3;i++)\n   {\n       for(int j=0;j<3;j++)\n       {\n \n           scanf(\"%d\",&a[i][j]);\n \n       }\n   }\n    convert(a);\n \n    return 0;\n \n}",
                    "@language": "C"
                },
                {
                    "text": "#include\nusing namespace std;\nint a[4][4];\nvoid change(int a[][4])\n{\n\tfor (int i=1; i>a[i][j];\n\tchange(a);\n\tfor (int i=1; i<=3; i++)\n\t{\n\t\tfor (int j=1; j<=3; j++) cout<<a[i][j]<<\" \";\n\t\tcout<<endl;\n\t}\n\treturn 0;\n}",
                    "@language": "C++"
                }
            ]
        },
        {
            "id": "00000105",
            "title": {
                "text": "C\u8bed\u8a00\u7a0b\u5e8f\u8bbe\u8ba1\u6559\u7a0b\uff08\u7b2c\u4e09\u7248\uff09\u8bfe\u540e\u4e60\u98988.5"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "128",
                "@unit": "mb"
            },
            "description": {
                "text": "\u5199\u4e00\u51fd\u6570inverse\uff0c\u4f7f\u8f93\u5165\u7684\u4e00\u4e2a\u5b57\u7b26\u4e32\u6309\u53cd\u5e8f\u5b58\u653e\uff0c\u5728\u4e3b\u51fd\u6570\u4e2d\u8f93\u5165\u8f93\u51fa\u53cd\u5e8f\u540e\u7684\u5b57\u7b26\u4e32\u3002"
            },
            "input": {
                "text": "\u4e00\u884c\u5b57\u7b26"
            },
            "output": {
                "text": "\u9006\u5e8f\u540e\u7684\u5b57\u7b26\u4e32"
            },
            "sample_input": {
                "text": "123456abcdef"
            },
            "sample_output": {
                "text": "fedcba654321"
            },
            "hint": {
                "text": "\u6837\u4f8b\u8f93\u5165\u5b57\u7b26\u4e32\u7ed3\u5c3e\u6709\u7a7a\u683c\uff0c\u800c\u8f93\u51fa\u6ca1\u6709\u7a7a\u683c\u3002\u53e6\u5916\uff0c\u6d4b\u8bd5\u6570\u636e\u7684\u5b57\u7b26\u4e32\u4e2d\u95f4\u4e0d\u4f1a\u6709\u7a7a\u683c\u3002"
            },
            "source": {
                "text": "\u6559\u5b66\u9898-C\u8bed\u8a00\u4e60\u9898"
            },
            "solution": {
                "text": "#include\n#include\n#include\nusing namespace std;\nchar s[101];\nvoid change(char s[])\n{\n\tint len=strlen(s);\n\tfor (int i=0,j=len-1; i>s;\n\tchange(s);\n\tcout<<s<<endl;\n\treturn 0;\n}",
                "@language": "C++"
            }
        },
        {
            "id": "00000106",
            "title": {
                "text": "C\u8bed\u8a00\u7a0b\u5e8f\u8bbe\u8ba1\u6559\u7a0b\uff08\u7b2c\u4e09\u7248\uff09\u8bfe\u540e\u4e60\u98988.6"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "128",
                "@unit": "mb"
            },
            "description": {
                "text": "\u5199\u4e00\u51fd\u6570concat\uff0c\u5c06\u4e24\u4e2a\u5b57\u7b26\u4e32\u8fde\u63a5"
            },
            "input": {
                "text": "\u4e24\u884c\u5b57\u7b26\u4e32"
            },
            "output": {
                "text": "\u8fde\u63a5\u540e\u7684\u5b57\u7b26\u4e32"
            },
            "sample_input": {
                "text": "123\nabc"
            },
            "sample_output": {
                "text": "123abc"
            },
            "hint": {},
            "source": {
                "text": "\u6559\u5b66\u9898-C\u8bed\u8a00\u4e60\u9898"
            },
            "solution": {
                "text": "#include\n#include\nusing namespace std;\nchar s1[201],s2[101];\nvoid catenate(char a[],char b[])\n{\n\tint i;\n\tfor (i=0; a[i]!='\\0'; i++) ;\n\tfor (int j=0; b[j]!='\\0'; j++)\n\t\ta[i++]=b[j];\n\ta[i]='\\0';\n}\nint main()\n{\n\tgets(s1);\n\tgets(s2);\n\tcatenate(s1,s2);\n\tcout<<s1<<endl;\n\treturn 0;\n}",
                "@language": "C++"
            }
        },
        {
            "id": "00000107",
            "title": {
                "text": "C\u8bed\u8a00\u7a0b\u5e8f\u8bbe\u8ba1\u6559\u7a0b\uff08\u7b2c\u4e09\u7248\uff09\u8bfe\u540e\u4e60\u98988.7"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "128",
                "@unit": "mb"
            },
            "description": {
                "text": "\u5199\u4e00\u51fd\u6570cpy\uff0c\u5c06\u4e00\u4e2a\u5b57\u7b26\u4e32\u4e2d\u7684\u5143\u97f3\u5b57\u6bcd\u590d\u5236\u5230\u53e6\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u7136\u540e\u8f93\u51fa\u3002"
            },
            "input": {
                "text": "\u4e00\u884c\u5b57\u7b26\u4e32"
            },
            "output": {
                "text": "\u987a\u5e8f\u8f93\u51fa\u5176\u4e2d\u7684\u5143\u97f3\u5b57\u6bcd\uff08aeiou\uff09"
            },
            "sample_input": {
                "text": "abcde"
            },
            "sample_output": {
                "text": "ae"
            },
            "hint": {},
            "source": {
                "text": "\u6559\u5b66\u9898-C\u8bed\u8a00\u4e60\u9898"
            },
            "solution": {
                "text": "#include\n#include\nusing namespace std;\nchar s1[201],s2[101];\nvoid copyvowels(char a[],char b[])\n{\n\tfor (int i=0,j=0; a[i]!='\\0'; i++)\n\t\tif (a[i]=='a' || a[i]=='A' ||\n\t\t\ta[i]=='e' || a[i]=='E' ||\n\t\t\ta[i]=='i' || a[i]=='I' ||\n\t\t\ta[i]=='o' || a[i]=='O' ||\n\t\t\ta[i]=='u' || a[i]=='U')\n\t\t\tb[j++]=a[i];\n}\nint main()\n{\n\tgets(s1);\n\tcopyvowels(s1,s2);\n\tcout<<s2<<endl;\n\treturn 0;\n}",
                "@language": "C++"
            }
        },
        {
            "id": "00000108",
            "title": {
                "text": "C\u8bed\u8a00\u7a0b\u5e8f\u8bbe\u8ba1\u6559\u7a0b\uff08\u7b2c\u4e09\u7248\uff09\u8bfe\u540e\u4e60\u98988.8"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "128",
                "@unit": "mb"
            },
            "description": {
                "text": "\u5199\u4e00\u51fd\u6570insert\uff0c\u8f93\u5165\u4e00\u4e2a\u56db\u4f4d\u6570\u5b57\uff0c\u8981\u6c42\u8f93\u51fa\u8fd9\u56db\u4e2a\u6570\u5b57\u5b57\u7b26\uff0c\u4f46\u6bcf\u4e24\u4e2a\u6570\u5b57\u95f4\u7a7a\u683c\u3002\u5982\u8f93\u51651990\uff0c\u5e94\u8f93\u51fa&quot;1 9 9 0&quot;\u3002"
            },
            "input": {
                "text": "\u4e00\u4e2a\u56db\u4f4d\u6570"
            },
            "output": {
                "text": "\u589e\u52a0\u7a7a\u683c\u8f93\u51fa"
            },
            "sample_input": {
                "text": "1990"
            },
            "sample_output": {
                "text": "1 9 9 0"
            },
            "hint": {},
            "source": {
                "text": "\u6559\u5b66\u9898-C\u8bed\u8a00\u4e60\u9898"
            },
            "solution": {
                "text": "#include\nusing namespace std;\nchar s[10];\nvoid change(char s[],int n)\n{\n\tfor (int i=6; n; i--)\n\t{\n\t\ts[i]=n%10+'0';\n\t\tn/=10;\n\t\ts[--i]=' ';\n\t}\n\ts[7]=' ';\n}\nint main()\n{\n\tint n;\n\tcin>>n;\n\tchange(s,n);\n\tcout<<s<<endl;\n\treturn 0;\n}",
                "@language": "C++"
            }
        },
        {
            "id": "00000109",
            "title": {
                "text": "C\u8bed\u8a00\u7a0b\u5e8f\u8bbe\u8ba1\u6559\u7a0b\uff08\u7b2c\u4e09\u7248\uff09\u8bfe\u540e\u4e60\u98988.9"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "128",
                "@unit": "mb"
            },
            "description": {
                "text": "\u7f16\u5199\u4e00\u51fd\u6570count\uff0c\u7531\u5b9e\u53c2\u4f20\u6765\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u7edf\u8ba1\u6b64\u5b57\u7b26\u4e32\u4e2d\u5b57\u6bcd\u3001\u6570\u5b57\u3001\u7a7a\u683c\u548c\u5176\u5b83\u5b57\u7b26\u7684\u4e2a\u6570\uff0c\u5728\u4e3b\u51fd\u6570\u4e2d\u8f93\u5165\u5b57\u7b26\u4e32\u4ee5\u53ca\u8f93\u51fa\u4e0a\u8ff0\u7ed3\u679c\u3002 \u53ea\u8981\u7ed3\u679c\uff0c\u522b\u8f93\u51fa\u4ec0\u4e48\u63d0\u793a\u4fe1\u606f\u3002"
            },
            "input": {
                "text": "\u4e00\u884c\u5b57\u7b26\u4e32"
            },
            "output": {
                "text": "\u7edf\u8ba1\u6570\u636e\uff0c4\u4e2a\u6570\u5b57\uff0c\u7a7a\u683c\u5206\u5f00\u3002"
            },
            "sample_input": {
                "text": "!@#$%^QWERT    1234567"
            },
            "sample_output": {
                "text": "5 7 4 6"
            },
            "hint": {},
            "source": {
                "text": "\u6559\u5b66\u9898-C\u8bed\u8a00\u4e60\u9898"
            },
            "solution": {
                "text": "#include\n#include\n#include\nusing namespace std;\nint Let=0,Dig=0,Spa=0,Oth=0;\nvoid solve(string s)\n{\n\tint len=s.size();\n\tfor (int i=0; i<len; i++)\n\t\tif (isalpha(s[i])) Let++;\n\t\telse if (isdigit(s[i])) Dig++;\n\t\telse if (s[i]==' ') Spa++;\n\t\telse Oth++;\n}\nint main()\n{\n\tstring s;\n\tgetline(cin,s);\n\tsolve(s);\n\tcout<<Let<<\" \"<<Dig<<\" \"<<Spa<<\" \"<<Oth<<\" \"<<endl;\n\treturn 0;\n}",
                "@language": "C++"
            }
        },
        {
            "id": "00000110",
            "title": {
                "text": "C\u8bed\u8a00\u7a0b\u5e8f\u8bbe\u8ba1\u6559\u7a0b\uff08\u7b2c\u4e09\u7248\uff09\u8bfe\u540e\u4e60\u98989.1"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "128",
                "@unit": "mb"
            },
            "description": {
                "text": "\u5b9a\u4e49\u4e00\u4e2a\u5e26\u53c2\u7684\u5b8f\uff0c\u4f7f\u4e24\u4e2a\u53c2\u6570\u7684\u503c\u4e92\u6362\uff0c\u5e76\u5199\u51fa\u7a0b\u5e8f\uff0c\u8f93\u5165\u4e24\u4e2a\u6570\u4f5c\u4e3a\u4f7f\u7528\u5b8f\u65f6\u7684\u5b9e\u53c2\u3002\u8f93\u51fa\u5df2\u4ea4\u6362\u540e\u7684\u4e24\u4e2a\u503c\u3002"
            },
            "input": {
                "text": "\u4e24\u4e2a\u6570\uff0c\u7a7a\u683c\u9694\u5f00"
            },
            "output": {
                "text": "\u4ea4\u6362\u540e\u7684\u4e24\u4e2a\u6570\uff0c\u7a7a\u683c\u9694\u5f00"
            },
            "sample_input": {
                "text": "1 2"
            },
            "sample_output": {
                "text": "2 1"
            },
            "hint": {},
            "source": {
                "text": "\u6559\u5b66\u9898-C\u8bed\u8a00\u4e60\u9898"
            },
            "solution": {
                "text": "#include\n#define SWAP(a,b) int t=a; a=b; b=t;\nusing namespace std;\nint main()\n{\n\tint a,b;\n\tcin>>a>>b;\n\tSWAP(a,b);\n\tcout<<a<<\" \"<<b<<endl;\n\treturn 0;\n}",
                "@language": "C++"
            }
        },
        {
            "id": "00000111",
            "title": {
                "text": "C\u8bed\u8a00\u7a0b\u5e8f\u8bbe\u8ba1\u6559\u7a0b\uff08\u7b2c\u4e09\u7248\uff09\u8bfe\u540e\u4e60\u98989.2"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "128",
                "@unit": "mb"
            },
            "description": {
                "text": "\u8f93\u5165\u4e24\u4e2a\u6574\u6570\uff0c\u6c42\u4ed6\u4eec\u76f8\u9664\u7684\u4f59\u6570\u3002\u7528\u5e26\u53c2\u7684\u5b8f\u6765\u5b9e\u73b0\uff0c\u7f16\u7a0b\u5e8f\u3002"
            },
            "input": {
                "text": "a b\u4e24\u4e2a\u6570"
            },
            "output": {
                "text": "a/b\u7684\u4f59\u6570"
            },
            "sample_input": {
                "text": "3 2"
            },
            "sample_output": {
                "text": "1"
            },
            "hint": {},
            "source": {
                "text": "\u6559\u5b66\u9898-C\u8bed\u8a00\u4e60\u9898"
            },
            "solution": {
                "text": "#include\n#define ZC(x,y) x%y\nusing namespace std;\nint main()\n{\n\tint a,b;\n\tcin>>a>>b;\n\tcout<<ZC(a,b)<<endl;\n\treturn 0;\n}",
                "@language": "C++"
            }
        },
        {
            "id": "00000112",
            "title": {
                "text": "C\u8bed\u8a00\u7a0b\u5e8f\u8bbe\u8ba1\u6559\u7a0b\uff08\u7b2c\u4e09\u7248\uff09\u8bfe\u540e\u4e60\u98989.3"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "128",
                "@unit": "mb"
            },
            "description": {
                "text": "\u4e09\u89d2\u5f62\u9762\u79ef=SQRT(S*(S-a)*(S-b)*(S-c)) \u5176\u4e2dS=(a+b+c)/2\uff0ca\u3001b\u3001c\u4e3a\u4e09\u89d2\u5f62\u7684\u4e09\u8fb9\u3002\u5b9a\u4e49\u4e24\u4e2a\u5e26\u53c2\u7684\u5b8f\uff0c\u4e00\u4e2a\u7528\u6765\u6c42area\uff0c\u53e6\u4e00\u4e2a\u5b8f\u7528\u6765\u6c42S\u3002 \u5199\u7a0b\u5e8f\uff0c\u5728\u7a0b\u5e8f\u4e2d\u7528\u5e26\u5b9e\u53c2\u7684\u5b8f\u540d\u6765\u6c42\u9762\u79efarea\u3002"
            },
            "input": {
                "text": "a b c\u4e09\u89d2\u5f62\u7684\u4e09\u6761\u8fb9,\u53ef\u4ee5\u662f\u5c0f\u6570\u3002"
            },
            "output": {
                "text": "\u4e09\u89d2\u5f62\u9762\u79ef\uff0c\u4fdd\u75593\u4f4d\u5c0f\u6570"
            },
            "sample_input": {
                "text": "3 4 5"
            },
            "sample_output": {
                "text": "6.000"
            },
            "hint": {},
            "source": {
                "text": "\u6559\u5b66\u9898-C\u8bed\u8a00\u4e60\u9898"
            },
            "solution": {
                "text": "#include\n#include\n#include\n#define S(a,b,c)\t(a+b+c)/2\n#define AREA(a,b,c)\tsqrt(S(a,b,c)*(S(a,b,c)-a)*(S(a,b,c)-b)*(S(a,b,c)-c))\nusing namespace std;\nint main()\n{\n\tdouble a,b,c;\n\tcin>>a>>b>>c;\n\tprintf(\"%.3lf\\n\",AREA(a,b,c));\n\treturn 0;\n}",
                "@language": "C++"
            }
        },
        {
            "id": "00000113",
            "title": {
                "text": "C\u8bed\u8a00\u7a0b\u5e8f\u8bbe\u8ba1\u6559\u7a0b\uff08\u7b2c\u4e09\u7248\uff09\u8bfe\u540e\u4e60\u98989.4"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "128",
                "@unit": "mb"
            },
            "description": {
                "text": "\u7ed9\u5e74\u4efdyear\uff0c\u5b9a\u4e49\u4e00\u4e2a\u5b8f\uff0c\u4ee5\u5224\u522b\u8be5\u5e74\u4efd\u662f\u5426\u95f0\u5e74\u3002\u63d0\u793a\uff1a\u5b8f\u540d\u53ef\u4ee5\u5b9a\u4e49\u4e3aLEAP_YEAR\uff0c\u5f62\u53c2\u4e3ay\uff0c\u5373\u5b9a\u4e49\u5b8f\u7684\u5f62\u5f0f\u4e3a #define LEAP_YEAR(y) \uff08\u8bfb\u8005\u8bbe\u8ba1\u7684\u5b57\u7b26\u4e32\uff09"
            },
            "input": {
                "text": "\u4e00\u4e2a\u5e74\u4efd"
            },
            "output": {
                "text": "\u6839\u636e\u662f\u5426\u95f0\u5e74\u8f93\u51fa\uff0c\u662f\u8f93\u51fa&quot;L&quot;,\u5426\u8f93\u51fa&quot;N&quot;"
            },
            "sample_input": {
                "text": "2000"
            },
            "sample_output": {
                "text": "L"
            },
            "hint": {},
            "source": {
                "text": "\u6559\u5b66\u9898-C\u8bed\u8a00\u4e60\u9898"
            },
            "solution": {
                "text": "#include\n#define LEAP_YEAR(y) y%4==0&&y%100!=0 || y%400==0\nusing namespace std;\nint main()\n{\n\tint year;\n\tcin>>year;\n\tif (LEAP_YEAR(year)) cout<<\"L\\n\";\n\telse cout<<\"N\\n\";\n\treturn 0;\n}",
                "@language": "C++"
            }
        },
        {
            "id": "00000114",
            "title": {
                "text": "C\u8bed\u8a00\u7a0b\u5e8f\u8bbe\u8ba1\u6559\u7a0b\uff08\u7b2c\u4e09\u7248\uff09\u8bfe\u540e\u4e60\u98989.6"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "128",
                "@unit": "mb"
            },
            "description": {
                "text": "\u8bf7\u8bbe\u8ba1\u8f93\u51fa\u5b9e\u6570\u7684\u683c\u5f0f\uff0c\u5305\u62ec\uff1a\u2474\u4e00\u884c\u8f93\u51fa\u4e00\u4e2a\u5b9e\u6570\uff1b\u2475\u4e00\u884c\u5185\u8f93\u51fa\u4e24\u4e2a\u5b9e\u6570\uff1b\u2476\u4e00\u884c\u5185\u8f93\u51fa\u4e09\u4e2a\u5b9e\u6570\u3002\u5b9e\u6570\u7528&quot;6.2f&quot;\u683c\u5f0f\u8f93\u51fa\u3002\u4f7f\u7528\u5b8f\u5b9a\u4e49"
            },
            "input": {
                "text": "\u4e00\u4e2a\u5b9e\u6570\uff0cfloat\u8303\u56f4"
            },
            "output": {
                "text": "\u8f93\u51fa3\u884c\uff0c\u7b2c\u4e00\u884c\u6253\u5370\u4e00\u904d\u8f93\u5165\u7684\u6570\uff0c\u7b2c\u4e8c\u884c\u6253\u5370\u4e24\u904d\uff0c\u7b2c\u4e09\u884c\u6253\u5370\u4e09\u904d\u3002\u7b2c\u4e8c\u884c\u548c\u7b2c\u4e09\u884c\uff0c\u7528\u7a7a\u683c\u5206\u9694\u540c\u4e00\u884c\u7684\u6570\u5b57\u3002\u5b9e\u6570\u7528&quot;6.2f&quot;\u683c\u5f0f\u8f93\u51fa\u3002"
            },
            "sample_input": {
                "text": "0.618"
            },
            "sample_output": {
                "text": "0.62\n  0.62   0.62\n  0.62   0.62   0.62"
            },
            "hint": {},
            "source": {
                "text": "\u6559\u5b66\u9898-C\u8bed\u8a00\u4e60\u9898"
            },
            "solution": {
                "text": "#include\n#define SC\tscanf\n#define\tPR\tprintf\n#define\tNL\t\"\\n\"\n#define\tFS\t\"%f\"\n#define\tF\t\"%6.2f\"\n#define\tF1\t\"%.2f\" NL\n#define\tF2\tF \" \" F NL\n#define\tF3\tF \" \" F \" \" F NL\nint main()\n{\n\tfloat x;\n\tSC(FS,&x);\n\tPR(F1,x);\n\tPR(F2,x,x);\n\tPR(F3,x,x,x);\n\treturn 0;\n}",
                "@language": "C++"
            }
        },
        {
            "id": "00000115",
            "title": {
                "text": "C\u8bed\u8a00\u7a0b\u5e8f\u8bbe\u8ba1\u6559\u7a0b\uff08\u7b2c\u4e09\u7248\uff09\u8bfe\u540e\u4e60\u98989.8"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "128",
                "@unit": "mb"
            },
            "description": {
                "text": "\u5206\u522b\u7528\u51fd\u6570\u548c\u5e26\u53c2\u7684\u5b8f\uff0c\u4ece\u4e09\u4e2a\u6570\u4e2d\u627e\u51fa\u6700\u5927\u7684\u6570\u3002"
            },
            "input": {
                "text": "3\u4e2a\u5b9e\u6570"
            },
            "output": {
                "text": "\u6700\u5927\u7684\u6570,\u8f93\u51fa\u4e24\u904d\uff0c\u5148\u7528\u51fd\u6570\uff0c\u518d\u7528\u5b8f\u3002\u4fdd\u75593\u4f4d\u5c0f\u6570\u3002"
            },
            "sample_input": {
                "text": "1 2 3"
            },
            "sample_output": {
                "text": "3.000\n3.000"
            },
            "hint": {},
            "source": {
                "text": "\u6559\u5b66\u9898-C\u8bed\u8a00\u4e60\u9898"
            },
            "solution": {
                "text": "#include\n#include\n#define\tMAX(a,b,c) ((a>b?a:b)>c?(a>b?a:b):c)\nusing namespace std;\ndouble max(double a,double b,double c)\n{\n\treturn (a>b?a:b)>c?(a>b?a:b):c;\n}\nint main()\n{\n\tdouble a,b,c;\n\tcin>>a>>b>>c;\n\tprintf(\"%.3lf\\n\",max(a,b,c));\n\tprintf(\"%.3lf\\n\",MAX(a,b,c));\n\treturn 0;\n}",
                "@language": "C++"
            }
        },
        {
            "id": "00000116",
            "title": {
                "text": "C\u8bed\u8a00\u7a0b\u5e8f\u8bbe\u8ba1\u6559\u7a0b\uff08\u7b2c\u4e09\u7248\uff09\u8bfe\u540e\u4e60\u98989.10"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "128",
                "@unit": "mb"
            },
            "description": {
                "text": "\u8f93\u5165\u4e00\u884c\u7535\u62a5\u6587\u5b57\uff0c\u5c06\u5b57\u6bcd\u53d8\u6210\u5176\u4e0b\u4e00\u5b57\u6bcd\uff08\u5982&rsquo;a&rsquo;\u53d8\u6210&rsquo;b&rsquo;&hellip;&hellip;&rsquo;z&rsquo;\u53d8\u6210&rsquo;\uff41&rsquo;\u5176\u5b83\u5b57\u7b26\u4e0d\u53d8\uff09\u3002"
            },
            "input": {
                "text": "\u4e00\u884c\u5b57\u7b26"
            },
            "output": {
                "text": "\u52a0\u5bc6\u5904\u7406\u540e\u7684\u5b57\u7b26"
            },
            "sample_input": {
                "text": "a b"
            },
            "sample_output": {
                "text": "b c"
            },
            "hint": {},
            "source": {
                "text": "\u6559\u5b66\u9898-C\u8bed\u8a00\u4e60\u9898"
            },
            "solution": {
                "text": "#include\n#include\nusing namespace std;\nint main()\n{\n\tstring s;\n\tgetline(cin,s);\n\tfor (int i=0; s[i]!='\\0'; i++)\n\t\tif ((s[i]>='a'&&s[i]='A'&&s[i]<='Y'))\n\t\t\ts[i]++;\n\t\telse if (s[i]=='z' || s[i]=='Z')\n\t\t\ts[i]-=25;\n\tcout<<s<<endl;\n\treturn 0;\n}",
                "@language": "C++"
            }
        },
        {
            "id": "00000117",
            "title": {
                "text": "C\u8bed\u8a00\u7a0b\u5e8f\u8bbe\u8ba1\u6559\u7a0b\uff08\u7b2c\u4e09\u7248\uff09\u8bfe\u540e\u4e60\u989810.1"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "128",
                "@unit": "mb"
            },
            "description": {
                "text": "\u8f93\u5165\u4e09\u4e2a\u6574\u6570\uff0c\u6309\u7531\u5c0f\u5230\u5927\u7684\u987a\u5e8f\u8f93\u51fa\u3002\u4f7f\u7528\u6307\u9488"
            },
            "input": {
                "text": "\u4e09\u4e2a\u6574\u6570"
            },
            "output": {
                "text": "\u7531\u5c0f\u5230\u5927\u8f93\u51fa\u6210\u4e00\u884c\uff0c\u6bcf\u4e2a\u6570\u5b57\u540e\u9762\u8ddf\u4e00\u4e2a\u7a7a\u683c"
            },
            "sample_input": {
                "text": "2 3 1"
            },
            "sample_output": {
                "text": "1 2 3"
            },
            "hint": {},
            "source": {
                "text": "\u6559\u5b66\u9898-C\u8bed\u8a00\u4e60\u9898"
            },
            "solution": {
                "text": "#include\nusing namespace std;\nvoid swap(int *p,int *q)\n{\n\tint t=*p;\n\t*p=*q;\n\t*q=t;\n}\nint main()\n{\n\tint a,b,c;\n\tcin>>a>>b>>c;\n\tint *p1=&a,*p2=&b,*p3=&c;\n\tif (a>b) swap(p1,p2);\n\tif (a>c) swap(p1,p3);\n\tif (b>c) swap(p2,p3);\n\tcout<<*p1<<\" \"<<*p2<<\" \"<<*p3<<\" \"<<endl;\n\treturn 0;\n}",
                "@language": "C++"
            }
        },
        {
            "id": "00000118",
            "title": {
                "text": "C\u8bed\u8a00\u7a0b\u5e8f\u8bbe\u8ba1\u6559\u7a0b\uff08\u7b2c\u4e09\u7248\uff09\u8bfe\u540e\u4e60\u989810.2"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "128",
                "@unit": "mb"
            },
            "description": {
                "text": "\u8f93\u5165\u4e09\u4e2a\u5b57\u7b26\u4e32\uff0c\u6309\u7531\u5c0f\u5230\u5927\u7684\u987a\u5e8f\u8f93\u51fa"
            },
            "input": {
                "text": "3\u884c\u5b57\u7b26\u4e32"
            },
            "output": {
                "text": "\u6309\u7167\u4ece\u5c0f\u5230\u5927\u8f93\u51fa\u62103\u884c"
            },
            "sample_input": {
                "text": "cde\nafg\nabc"
            },
            "sample_output": {
                "text": "abc\nafg\ncde"
            },
            "hint": {},
            "source": {
                "text": "\u6559\u5b66\u9898-C\u8bed\u8a00\u4e60\u9898"
            },
            "solution": {
                "text": "#include\n#include\n#include\nusing namespace std;\nvoid swap(char *p,char *q)\n{\n\tchar str[50];\n\tstrcpy(str,p);\n\tstrcpy(p,q);\n\tstrcpy(q,str);\n}\nint main()\n{\n\tchar s1[50],s2[50],s3[50];\n\tchar *p1=s1,*p2=s2,*p3=s3;\n\tgets(p1); gets(p2); gets(p3);\n\tif (strcmp(p1,p2)>0) swap(p1,p2);\n\tif (strcmp(p1,p3)>0) swap(p1,p3);\n\tif (strcmp(p2,p3)>0) swap(p2,p3);\n\tprintf(\"%s\\n%s\\n%s\\n\",p1,p2,p3);\n\treturn 0;\n}",
                "@language": "C++"
            }
        },
        {
            "id": "00000119",
            "title": {
                "text": "C\u8bed\u8a00\u7a0b\u5e8f\u8bbe\u8ba1\u6559\u7a0b\uff08\u7b2c\u4e09\u7248\uff09\u8bfe\u540e\u4e60\u989810.3"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "128",
                "@unit": "mb"
            },
            "description": {
                "text": "\u8f93\u516510\u4e2a\u6574\u6570\uff0c\u5c06\u5176\u4e2d\u6700\u5c0f\u7684\u6570\u4e0e\u7b2c\u4e00\u4e2a\u6570\u5bf9\u6362\uff0c\u628a\u6700\u5927\u7684\u6570\u4e0e\u6700\u540e\u4e00\u4e2a\u6570\u5bf9\u6362\u3002\u5199\u4e09\u4e2a\u51fd\u6570\uff1b \u2460\u8f93\u516510\u4e2a\u6570\uff1b\u2461\u8fdb\u884c\u5904\u7406\uff1b\u2462\u8f93\u51fa10\u4e2a\u6570\u3002\u4f7f\u7528\u6307\u9488"
            },
            "input": {
                "text": "10\u4e2a\u6574\u6570"
            },
            "output": {
                "text": "\u6574\u7406\u540e\u7684\u5341\u4e2a\u6570\uff0c\u6bcf\u4e2a\u6570\u540e\u8ddf\u4e00\u4e2a\u7a7a\u683c\uff08\u6ce8\u610f\u6700\u540e\u4e00\u4e2a\u6570\u540e\u4e5f\u6709\u7a7a\u683c\uff09"
            },
            "sample_input": {
                "text": "2 1 3 4 5 6 7 8 10 9"
            },
            "sample_output": {
                "text": "1 2 3 4 5 6 7 8 9 10"
            },
            "hint": {},
            "source": {
                "text": "\u6559\u5b66\u9898-C\u8bed\u8a00\u4e60\u9898"
            },
            "solution": {
                "text": "#include\nusing namespace std;\nvoid input(int *p,int n)\n{\n\tfor (int i=0; i>p[i];\n}\nvoid deal(int *p,int n)\n{\n\tint *max,*min,*q,t;\n\tmax=min=p;\n\tfor (q=p+1; q*q) min=q;\n\tt=p[0]; p[0]=*min; *min=t;\n\tfor (q=p+1; q<p+n; q++)\t//\u67e5\u627e\u6700\u5927\u503c\n\t\tif (*max<*q) max=q;\n\tt=p[n-1]; p[n-1]=*max; *max=t;\n}\nvoid output(int *p,int n)\n{\n\tint *q;\n\tfor (q=p; q<p+n; q++) cout<<*q<<\" \";\n\tcout<<endl;\n}\nint main()\n{\n\tint a[10];\n\tinput(a,10);\n\tdeal(a,10);\n\toutput(a,10);\n\treturn 0;\n}",
                "@language": "C++"
            }
        },
        {
            "id": "00000120",
            "title": {
                "text": "C\u8bed\u8a00\u7a0b\u5e8f\u8bbe\u8ba1\u6559\u7a0b\uff08\u7b2c\u4e09\u7248\uff09\u8bfe\u540e\u4e60\u989810.4"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "128",
                "@unit": "mb"
            },
            "description": {
                "text": "\u6709n\u4e2a\u6574\u6570\uff0c\u4f7f\u524d\u9762\u5404\u6570\u987a\u5e8f\u5411\u540e\u79fbm\u4e2a\u4f4d\u7f6e\uff0c\u6700\u540em\u4e2a\u6570\u53d8\u6210\u524d\u9762m\u4e2a\u6570\u3002\u5199\u4e00\u51fd\u6570move\uff1a\u5b9e\u73b0\u4ee5\u4e0a\u529f\u80fd\uff0c\u5728\u4e3b\u51fd\u6570\u4e2d\u8f93\u5165n\u4e2a\u6570\u548c\u8f93\u51fa\u8c03\u6574\u540e\u7684n\u4e2a\u6570\u3002"
            },
            "input": {
                "text": "\u8f93\u5165\u6570\u636e\u7684\u4e2a\u6570n n\u4e2a\u6574\u6570\u79fb\u52a8\u7684\u4f4d\u7f6em"
            },
            "output": {
                "text": "\u79fb\u52a8\u540e\u7684n\u4e2a\u6570"
            },
            "sample_input": {
                "text": "10\n1 2 3 4 5 6 7 8 9 10\n2"
            },
            "sample_output": {
                "text": "9 10 1 2 3 4 5 6 7 8"
            },
            "hint": {},
            "source": {
                "text": "\u6559\u5b66\u9898-C\u8bed\u8a00\u4e60\u9898"
            },
            "solution": {
                "text": "#include\nusing namespace std;\nint a[50];\nvoid move(int *q,int n,int m)\n{\n\tint *p,t=*(q+n-1);\n\tfor (p=q+n-1; p>q; p--) *p=*(p-1);\n\t*q=t;\n\tif (--m) move(a,n,m);\t//\u9012\u5f52\n}\nint main()\n{\n\tint n,m;\n\tcin>>n;\n\tfor (int i=0; i>a[i];\n\tcin>>m;\n\tmove(a,n,m);\n\tfor (int i=0; i<n; i++) cout<<a[i]<<\" \";\n\tcout<<endl;\n\treturn 0;\n}",
                "@language": "C++"
            }
        },
        {
            "id": "00000121",
            "title": {
                "text": "C\u8bed\u8a00\u7a0b\u5e8f\u8bbe\u8ba1\u6559\u7a0b\uff08\u7b2c\u4e09\u7248\uff09\u8bfe\u540e\u4e60\u989810.5"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "128",
                "@unit": "mb"
            },
            "description": {
                "text": "\u6709n\u4eba\u56f4\u6210\u4e00\u5708\uff0c\u987a\u5e8f\u6392\u53f7\u3002\u4ece\u7b2c1\u4e2a\u4eba\u5f00\u59cb\u62a5\u6570\uff08\u4ece1\u52303\u62a5\u6570\uff09\uff0c\u51e1\u62a5\u52303\u7684\u4eba\u9000\u51fa\u5708\u5b50\uff0c\u95ee\u6700\u540e\u7559\u4e0b\u7684\u662f\u539f\u6765\u7684\u7b2c\u51e0\u53f7\u7684\u90a3\u4f4d\u3002\u4f7f\u7528\u6307\u9488"
            },
            "input": {
                "text": "\u521d\u59cb\u4eba\u6570n"
            },
            "output": {
                "text": "\u6700\u540e\u4e00\u4eba\u7684\u521d\u59cb\u7f16\u53f7"
            },
            "sample_input": {
                "text": "3"
            },
            "sample_output": {
                "text": "2"
            },
            "hint": {},
            "source": {
                "text": "\u6559\u5b66\u9898-C\u8bed\u8a00\u4e60\u9898"
            },
            "solution": {
                "text": "#include\n#include\nusing namespace std;\nbool a[1000];\nint main()\n{\n\tmemset(a,0,sizeof(a));\n\tint n;\n\tcin>>n;\n\tbool *p=a;\n\tfor (int i=0; i<n; i++) *(p+i)=true;\n\tint i=0;\t//i\u4e3a\u6bcf\u6b21\u5faa\u73af\u65f6\u8ba1\u6570\u53d8\u91cf\n\tint k=0;\t//k\u4e3a\u63091,2,3\u62a5\u6570\u65f6\u7684\u8ba1\u6570\u53d8\u91cf\n\tint m=0;\t//m\u4e3a\u9000\u51fa\u4eba\u6570\n\twhile (m<n-1)\n\t{\n\t\tif (i==n) i=0;\n\t\tif (*(p+i)) k++;\n\t\tif (k==3)\n\t\t{\n\t\t\t*(p+i)=false;\n\t\t\tk=0;\n\t\t\tm++;\n\t\t}\n\t\ti++;\n\t}\n\tfor (int i=0; i<n; i++)\n\t\tif (*(p+i)) { cout<<i+1<<endl; break; }\n\treturn 0;\n}",
                "@language": "C++"
            }
        },
        {
            "id": "00000122",
            "title": {
                "text": "C\u8bed\u8a00\u7a0b\u5e8f\u8bbe\u8ba1\u6559\u7a0b\uff08\u7b2c\u4e09\u7248\uff09\u8bfe\u540e\u4e60\u989810.7"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "128",
                "@unit": "mb"
            },
            "description": {
                "text": "\u6709\u4e00\u5b57\u7b26\u4e32\uff0c\u5305\u542bn\u4e2a\u5b57\u7b26\u3002\u5199\u4e00\u51fd\u6570cpystr\uff0c\u5c06\u6b64\u5b57\u7b26\u4e32\u4e2d\u4ece\u7b2cm\u4e2a\u5b57\u7b26\u5f00\u59cb\u7684\u5168\u90e8\u5b57\u7b26\u590d\u5236\u6210\u4e3a\u53e6\u4e00\u4e2a\u5b57\u7b26\u4e32\u3002"
            },
            "input": {
                "text": "\u6570\u5b57n \u4e00\u884c\u5b57\u7b26\u4e32\u6570\u5b57m"
            },
            "output": {
                "text": "\u4ecem\u5f00\u59cb\u7684\u5b50\u4e32"
            },
            "sample_input": {
                "text": "6\nabcdef\n3"
            },
            "sample_output": {
                "text": "cdef"
            },
            "hint": {},
            "source": {
                "text": "\u6559\u5b66\u9898-C\u8bed\u8a00\u4e60\u9898"
            },
            "solution": {
                "text": "#include\nusing namespace std;\nchar from[100],to[100];\nvoid solve(char *p,int n,char *q)\n{\n\tp+=n-1;\n\twhile (*q++=*p++) ;\n}\nint main()\n{\n\tint n,m;\n\tcin>>n;\n\tfor (int i=0; i>from[i];\n\tcin>>m;\n\tsolve(from,m,to);\n\tcout<<to<<endl;\n\treturn 0;\n}",
                "@language": "C++"
            }
        },
        {
            "id": "00000123",
            "title": {
                "text": "C\u8bed\u8a00\u7a0b\u5e8f\u8bbe\u8ba1\u6559\u7a0b\uff08\u7b2c\u4e09\u7248\uff09\u8bfe\u540e\u4e60\u989811.1"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "128",
                "@unit": "mb"
            },
            "description": {
                "text": "\u5b9a\u4e49\u4e00\u4e2a\u7ed3\u6784\u4f53\u53d8\u91cf\uff08\u5305\u62ec\u5e74\u3001\u6708\u3001\u65e5\uff09\u3002\u8ba1\u7b97\u8be5\u65e5\u5728\u672c\u5e74\u4e2d\u662f\u7b2c\u51e0\u5929\uff0c\u6ce8\u610f\u95f0\u5e74\u95ee\u9898\u3002"
            },
            "input": {
                "text": "\u5e74\u6708\u65e5"
            },
            "output": {
                "text": "\u5f53\u5e74\u7b2c\u51e0\u5929"
            },
            "sample_input": {
                "text": "2000 12 31"
            },
            "sample_output": {
                "text": "366"
            },
            "hint": {},
            "source": {
                "text": "\u6559\u5b66\u9898-C\u8bed\u8a00\u4e60\u9898"
            },
            "solution": [
                {
                    "text": "#include \nint main()\n{\n    printf(\"366\");\n    return 0;\n}",
                    "@language": "C"
                },
                {
                    "text": "#include\nusing namespace std;\nstruct date{\n\tint year,month,day;\n};\ndate a;\nint days(date a)\n{\n\tint b[]={0,31,28,31,30,31,30,31,31,30,31,30,31};\n\tint ans=a.day;\n\tfor (int i=1; i>a.year>>a.month>>a.day;\n\tcout<<days(a)<<endl;\n\treturn 0;\n}",
                    "@language": "C++"
                }
            ]
        },
        {
            "id": "00000124",
            "title": {
                "text": "C\u8bed\u8a00\u7a0b\u5e8f\u8bbe\u8ba1\u6559\u7a0b\uff08\u7b2c\u4e09\u7248\uff09\u8bfe\u540e\u4e60\u989811.3"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "128",
                "@unit": "mb"
            },
            "description": {
                "text": "\u73b0\u6709N\u4e2a\u5b66\u751f\u7684\u6570\u636e\u8bb0\u5f55\uff0c\u6bcf\u4e2a\u8bb0\u5f55\u5305\u62ec\u5b66\u53f7\u3001\u59d3\u540d\u3001\u4e09\u79d1\u6210\u7ee9\u3002\u7f16\u5199\u4e00\u4e2a\u51fd\u6570input,\u7528\u6765\u8f93\u5165\u4e00\u4e2a\u5b66\u751f\u7684\u6570\u636e\u8bb0\u5f55\u3002\u7f16\u5199\u4e00\u4e2a\u51fd\u6570print,\u6253\u5370\u4e00\u4e2a\u5b66\u751f\u7684\u6570\u636e\u8bb0\u5f55\u3002\u5728\u4e3b\u51fd\u6570\u8c03\u7528\u8fd9\u4e24\u4e2a\u51fd\u6570\uff0c\u8bfb\u53d6N\u6761\u8bb0\u5f55\u8f93\u5165\uff0c\u518d\u6309\u8981\u6c42\u8f93\u51fa\u3002 N&lt;100"
            },
            "input": {
                "text": "\u5b66\u751f\u6570\u91cfN\u5360\u4e00\u884c\u6bcf\u4e2a\u5b66\u751f\u7684\u5b66\u53f7\u3001\u59d3\u540d\u3001\u4e09\u79d1\u6210\u7ee9\u5360\u4e00\u884c\uff0c\u7a7a\u683c\u5206\u5f00\u3002"
            },
            "output": {
                "text": "\u6bcf\u4e2a\u5b66\u751f\u7684\u5b66\u53f7\u3001\u59d3\u540d\u3001\u4e09\u79d1\u6210\u7ee9\u5360\u4e00\u884c\uff0c\u9017\u53f7\u5206\u5f00\u3002"
            },
            "sample_input": {
                "text": "2\na100 zhblue 70 80 90\nb200 newsclan 90 85 75"
            },
            "sample_output": {
                "text": "a100,zhblue,70,80,90\nb200,newsclan,90,85,75"
            },
            "hint": {},
            "source": {
                "text": "\u6559\u5b66\u9898-C\u8bed\u8a00\u4e60\u9898"
            },
            "solution": {
                "text": "#include\n#include\nusing namespace std;\nstruct student{\n\tstring num;\n\tstring name;\n\tint score[3];\n};\nstudent a[105];\nvoid input(student a[],int n)\n{\n\tfor (int i=0; i>a[i].num>>a[i].name>>a[i].score[0]>>a[i].score[1]>>a[i].score[2];\n}\nvoid output(student a[],int n)\n{\n\tfor (int i=0; i>n;\n\tinput(a,n);\n\toutput(a,n);\n\treturn 0;\n}",
                "@language": "C++"
            }
        },
        {
            "id": "00000125",
            "title": {
                "text": "C\u8bed\u8a00\u7a0b\u5e8f\u8bbe\u8ba1\u6559\u7a0b\uff08\u7b2c\u4e09\u7248\uff09\u8bfe\u540e\u4e60\u989811.5"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "128",
                "@unit": "mb"
            },
            "description": {
                "text": "\u6709N\u4e2a\u5b66\u751f\uff0c\u6bcf\u4e2a\u5b66\u751f\u7684\u6570\u636e\u5305\u62ec\u5b66\u53f7\u3001\u59d3\u540d\u30013\u95e8\u8bfe\u7684\u6210\u7ee9\uff0c\u4ece\u952e\u76d8\u8f93\u5165N\u4e2a\u5b66\u751f\u7684\u6570\u636e\uff0c\u8981\u6c42\u6253\u5370\u51fa3\u95e8\u8bfe\u7684\u603b\u5e73\u5747\u6210\u7ee9\uff0c\u4ee5\u53ca\u6700\u9ad8\u5206\u7684\u5b66\u751f\u7684\u6570\u636e\uff08\u5305\u62ec\u5b66\u53f7\u3001\u59d3\u540d\u30013\u95e8\u8bfe\u6210\u7ee9\uff09\u3002\u4f7f\u7528\u7ed3\u6784\u4f53"
            },
            "input": {
                "text": "\u5b66\u751f\u6570\u91cfN\u5360\u4e00\u884c\n\u6bcf\u4e2a\u5b66\u751f\u7684\u5b66\u53f7\u3001\u59d3\u540d\u3001\u4e09\u79d1\u6210\u7ee9\u5360\u4e00\u884c\uff0c\u7a7a\u683c\u5206\u5f00\u3002"
            },
            "output": {
                "text": "\u5404\u95e8\u8bfe\u7684\u5e73\u5747\u6210\u7ee9\n\u6700\u9ad8\u5206\u7684\u5b66\u751f\u7684\u6570\u636e\uff08\u5305\u62ec\u5b66\u53f7\u3001\u59d3\u540d\u30013\u95e8\u8bfe\u6210\u7ee9\uff09"
            },
            "sample_input": {
                "text": "2\n1 blue 90 80 70\nb clan 80 70 60"
            },
            "sample_output": {
                "text": "85 75 65\n1 blue 90 80 70"
            },
            "hint": {},
            "source": {
                "text": "\u6559\u5b66\u9898-C\u8bed\u8a00\u4e60\u9898"
            },
            "solution": {
                "text": "#include\n#include\n#include\nusing namespace std;\nstruct student{\n\tstring num;\n\tstring name;\n\tint score[3];\n\tdouble average;\n};\nstudent a[10000];\nint ave[3];\nvoid input(student a[],int n)\n{\n\tfor (int i=0; i>a[i].num>>a[i].name>>a[i].score[0]>>a[i].score[1]>>a[i].score[2];\n\t\ta[i].average=(a[i].score[0]+a[i].score[1]+a[i].score[2])/3;\n\t\tave[0]+=a[i].score[0];\n\t\tave[1]+=a[i].score[1];\n\t\tave[2]+=a[i].score[2];\n\t}\n\tfor (int i=0; ia[maxt].average) maxt=i;\n\treturn maxt;\n}\nint main()\n{\n\tint n;\n\tcin>>n;\n\tinput(a,n);\n\tprintf(\"%d %d %d\\n\",ave[0],ave[1],ave[2]);\n\tint t=find(a,n);\n\tcout<<a[t].num<<\" \"<<a[t].name<<\" \"<<a[t].score[0]<<\" \"<<a[t].score[1]<<\" \"<<a[t].score[2]<<endl;\n\treturn 0;\n}",
                "@language": "C++"
            }
        },
        {
            "id": "00000126",
            "title": {
                "text": "C\u8bed\u8a00\u7a0b\u5e8f\u8bbe\u8ba1\u6559\u7a0b\uff08\u7b2c\u4e09\u7248\uff09\u8bfe\u540e\u4e60\u989811.8"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "128",
                "@unit": "mb"
            },
            "description": {
                "text": "\u5df2\u6709a\u3001b\u4e24\u4e2a\u94fe\u8868\uff0c\u6bcf\u4e2a\u94fe\u8868\u4e2d\u7684\u7ed3\u70b9\u5305\u62ec\u5b66\u53f7\u3001\u6210\u7ee9\u3002\u8981\u6c42\u628a\u4e24\u4e2a\u94fe\u8868\u5408\u5e76\uff0c\u6309\u5b66\u53f7\u5347\u5e8f\u6392\u5217\u3002 \u4f7f\u7528\u7ed3\u6784\u4f53"
            },
            "input": {
                "text": "\u7b2c\u4e00\u884c\uff0ca\u3001b\u4e24\u4e2a\u94fe\u8868\u5143\u7d20\u7684\u6570\u91cfN\u3001M,\u7528\u7a7a\u683c\u9694\u5f00\u3002\u63a5\u4e0b\u6765N\u884c\u662fa\u7684\u6570\u636e\u7136\u540eM\u884c\u662fb\u7684\u6570\u636e\u6bcf\u884c\u6570\u636e\u7531\u5b66\u53f7\u548c\u6210\u7ee9\u4e24\u90e8\u5206\u7ec4\u6210"
            },
            "output": {
                "text": "\u6309\u7167\u5b66\u53f7\u5347\u5e8f\u6392\u5217\u7684\u6570\u636e"
            },
            "sample_input": {
                "text": "2 3\n5 100\n6 89\n3 82\n4 95\n2 10"
            },
            "sample_output": {
                "text": "2 10\n3 82\n4 95\n5 100\n6 89"
            },
            "hint": {},
            "source": {
                "text": "\u6559\u5b66\u9898-C\u8bed\u8a00\u4e60\u9898"
            },
            "solution": {
                "text": "#include\nusing namespace std;\nstruct f\n{\n\tint a,b;\n}a[100000];\nbool cmp(f a,f b)\n{\n\treturn a.a>n>>m;\n\tfor(int i=1;i>a[i].a>>a[i].b;\n\tsort(a+1,a+n+m+1,cmp);\n\tfor(int i=1;i<=n+m;i++)\n\tcout<<a[i].a<<\" \"<<a[i].b<<\"\\n\";\n\treturn 0;\n}",
                "@language": "C++"
            }
        },
        {
            "id": "00000127",
            "title": {
                "text": "\u5bf9\u79f0\u5e73\u65b9\u65701"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "32",
                "@unit": "mb"
            },
            "description": {
                "text": "\n\t\u6253\u5370\u6240\u6709\u4e0d\u8d85\u8fc7256\uff0c\u5176\u5e73\u65b9\u5177\u6709\u5bf9\u79f0\u6027\u8d28\u7684\u6570\u3002\u59822\uff0c11\u5c31\u662f\u8fd9\u6837\u7684\u6570\uff0c\u56e0\u4e3a2*2=4\uff0c11*11=121\u3002\n"
            },
            "input": {
                "text": "\n\t\u65e0\u4efb\u4f55\u8f93\u5165\u6570\u636e\n"
            },
            "output": {
                "text": "\n\t\u8f93\u51fa\u5177\u6709\u9898\u76ee\u8981\u6c42\u7684\u6027\u8d28\u7684\u6570\u3002\u5982\u679c\u8f93\u51fa\u6570\u636e\u4e0d\u6b62\u4e00\u7ec4\uff0c\u5404\u7ec4\u6570\u636e\u4e4b\u95f4\u4ee5\u56de\u8f66\u9694\u5f00\u3002\n"
            },
            "sample_input": {},
            "sample_output": {},
            "test_input": {
                "text": "0"
            },
            "test_output": {
                "text": "0\n1\n2\n3\n11\n22\n26\n101\n111\n121\n202\n212"
            },
            "hint": {},
            "source": {
                "text": "\u540d\u6821\u590d\u8bd5\u673a\u8003\u771f\u9898-\u6e05\u534e\u5927\u5b66"
            },
            "solution": [
                {
                    "text": "#include \n#include \n\nint main(){\n    char strNum[15];\n\n    for(int i=0; i= len/2){\n            printf(\"%d\\n\", i);\n        }\n    }\n\n    return 0;\n}",
                    "@language": "C"
                },
                {
                    "text": "#include \n#include \n\nint main(){\n    char strNum[15];\n\n    for(int i=0; i= len/2){\n            printf(\"%d\\n\", i);\n        }\n    }\n\n    return 0;\n}",
                    "@language": "C++"
                },
                {
                    "text": "var\n  i,j:longint;\n  s:string;\nbegin\n  for i:=0 to 256 do\n  begin\n    str(i*i,s);\n    for j:=1 to length(s) div 2 do\n      if s[j]<>s[length(s)-j+1] then break;\n    if s[j]=s[length(s)-j+1] then writeln(i);\n  end; \nend.",
                    "@language": "Pascal"
                },
                {
                    "text": "import java.util.*;\n\npublic class Main{\n  public static void main(String args[]){\n    for(int i=0;i0){\n        ixi*=10;\n        ixi+=iii%10;\n        iii/=10;\n      }\n      if(ixi==ii)\n        System.out.println(i);\n    }\n  }\n}",
                    "@language": "Java"
                },
                {
                    "text": "# coding=utf-8\ndef isSquareEq(i):\n    sq = str(i ** 2)\n    i = 0\n    j = len(sq) - 1\n    while i <= j and sq[i] == sq[j]:\n        i += 1\n        j -= 1\n\n    if i < j:\n        return False\n    return True\n\n\nfor i in range(213):\n    if isSquareEq(i):\n        print(i)",
                    "@language": "Python"
                },
                {
                    "text": "using System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\n\nnamespace \u5bf9\u79f0\u5e73\u65b9\u6570\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            for (int i = 0; i = s.Length / 2)\n                    Console.WriteLine(\"{0}\", i);\n            }\n        }\n    }\n}",
                    "@language": "C#"
                }
            ]
        },
        {
            "id": "00000128",
            "title": {
                "text": "C\u8bed\u8a00-\u5bc6\u7801"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "128",
                "@unit": "mb"
            },
            "description": {
                "text": "\u8981\u5c06&quot;China&quot;\u8bd1\u6210\u5bc6\u7801\uff0c\u8bd1\u7801\u89c4\u5f8b\u662f\uff1a\u7528\u539f\u6765\u5b57\u6bcd\u540e\u9762\u7684\u7b2c4\u4e2a\u5b57\u6bcd\u4ee3\u66ff\u539f\u6765\u7684\u5b57\u6bcd\uff0e\u4f8b\u5982\uff0c\u5b57\u6bcd&quot;A&quot;\u540e\u9762\u7b2c4\u4e2a\u5b57\u6bcd\u662f&quot;E&quot;\uff0e&quot;E&quot;\u4ee3\u66ff&quot;A&quot;\u3002\u56e0\u6b64\uff0c&quot;China&quot;\u5e94\u8bd1\u4e3a&quot;Glmre&quot;\u3002\u8bf7\u7f16\u4e00\u7a0b\u5e8f\uff0c\u7528\u8d4b\u521d\u503c\u7684\u65b9\u6cd5\u4f7fcl\u3001c2\u3001c3\u3001c4\u3001c5\u4e94\u4e2a\u53d8\u91cf\u7684\u503c\u5206\u522b\u4e3a\uff0c&rsquo;C&rsquo;\u3001&rsquo;h&rsquo;\u3001&rsquo;i&rsquo;\u3001&rsquo;n&rsquo;\u3001&rsquo;a&rsquo;\uff0c\u7ecf\u8fc7\u8fd0\u7b97\uff0c\u4f7fc1\u3001c2\u3001c3\u3001c4\u3001c5\u5206\u522b\u53d8\u4e3a&rsquo;G&rsquo;\u3001&rsquo;l&rsquo;\u3001&rsquo;m&rsquo;\u3001&rsquo;r&rsquo;\u3001&rsquo;e&rsquo;\uff0c\u5e76\u8f93\u51fa\u3002"
            },
            "input": {
                "text": "China"
            },
            "output": {
                "text": "\u52a0\u5bc6\u540e\u7684China"
            },
            "sample_input": {
                "text": "China"
            },
            "sample_output": {
                "text": "Glmre"
            },
            "hint": {},
            "source": {},
            "solution": [
                {
                    "text": "#include\nint main()\n{\n\tchar c1,c2,c3,c4,c5;\n\tscanf(\"%c%c%c%c%c\",&c1,&c2,&c3,&c4,&c5);\n\tprintf(\"%c%c%c%c%c\\n\",c1+4,c2+4,c3+4,c4+4,c5+4);\n    return 0;\n}",
                    "@language": "C"
                },
                {
                    "text": "#include\n#include\n#include\n#include\n#include\nusing namespace std;\nvoid change(int& x,int & y)\n{\n\tint temp;\n\ttemp=x;x=y;y=temp;\n}\nint main()\n{\n\t//ifstream cin(\"aaa.txt\");\n\tint i,j,n;\n\tint x,y,z;\n\ncout<<\"Glmre\"<<endl;\nreturn 0;\n}",
                    "@language": "C++"
                },
                {
                    "text": "import java.util.*;\npublic class Main{\n    public static void main(String[] args){\n        Scanner in=new Scanner(System.in);\n       String str =in.next();\n       for(int i=0;i<str.length();i++){\n           char a =(char)(str.charAt(i)+4);\n           System.out.print(a);\n        }\n        System.out.println();\n    }\n}",
                    "@language": "Java"
                }
            ]
        },
        {
            "id": "00000129",
            "title": {
                "text": "C\u8bed\u8a00-\u6c34\u4ed9\u82b1\u6570"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "128",
                "@unit": "mb"
            },
            "description": {
                "text": "\u6253\u5370\u51fa\u6240\u6709&quot;\u6c34\u4ed9\u82b1\u6570&quot;\uff0c\u6240\u8c13&quot;\u6c34\u4ed9\u82b1\u6570&quot;\u662f\u6307\u4e00\u4e2a\u4e09\u4f4d\u6570\uff0c\u5176\u5404\u4f4d\u6570\u5b57\u7acb\u65b9\u548c\u7b49\u4e8e\u8be5\u672c\u8eab\u3002 \u4f8b\u5982\uff1a153\u662f\u4e00\u4e2a\u6c34\u4ed9\u82b1\u6570\uff0c\u56e0\u4e3a153=1^3+5^3+3^3\u3002 Output:\n\n153\n???\n???\n??? "
            },
            "input": {
                "text": "\u65e0"
            },
            "output": {
                "text": "\u6240\u6709\u7684\u6c34\u4ed9\u82b1\u6570\uff0c\u4ece\u5c0f\u7684\u5f00\u59cb\u3002 \u6bcf\u884c\u4e00\u4e2a"
            },
            "sample_input": {},
            "sample_output": {},
            "test_input": {
                "text": "1"
            },
            "test_output": {
                "text": "153\n370\n371\n407"
            },
            "hint": {},
            "source": {},
            "solution": [
                {
                    "text": "#include\nint main(){\n   int i,j,k,n;\n   for(i=1;i<10;i++)\n     for(j=0;j<10;j++)\n       for(k=0;k<10;k++)\n       {\n            n=i*100+j*10+k;\n            if((i*100+j*10+k)==((i*i*i)+(j*j*j)+(k*k*k)))\n               printf(\"%d\\n\",n);\n       }\n   return 0;\n}",
                    "@language": "C"
                },
                {
                    "text": "#include \nusing namespace std;\nvoid print(int a,int b,int c,int num)\n{\n     if(a*a*a+b*b*b+c*c*c==num)\n     cout<<num<<endl;\n}\n     \nint main(){\n    int num,a,b,c;\n    for(num=100;num<1000;num++){\n               a=num/100;\n               b=num/10%10;\n               c=num%10;\n               print(a,b,c,num);\n    }\n     return 0;     \n}",
                    "@language": "C++"
                },
                {
                    "text": "var\n  a,b,c,i:longint;\nbegin\n  for i:=100 to 999 do\n  begin\n    a:=i div 100;\n    b:=i mod 100 div 10;\n    c:=i mod 100 mod 10;\n    if a*a*a+b*b*b+c*c*c=i then writeln(i);\n  end;\nend.",
                    "@language": "Pascal"
                },
                {
                    "text": "public class Main {\n\tpublic static void main(String[] args) {\n\t\tint count1=0;\n\t\tfor(int i=100;i<=999;i++)\n\t\t{\n\t\t\tint a=i%10;\n\t\t\tint b=i/10%10;\n\t\t\tint c=i/100;\n\t\t\tif(a*a*a+b*b*b+c*c*c==i)\n\t\t\t\tSystem.out.println(i);\n\t\t}\n\t}\n}",
                    "@language": "Java"
                }
            ]
        },
        {
            "id": "00000130",
            "title": {
                "text": "C\u8bed\u8a00-\u516c\u7ea6\u516c\u500d2"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "128",
                "@unit": "mb"
            },
            "description": {
                "text": "\u5199\u4e24\u4e2a\u51fd\u6570\uff0c\u5206\u522b\u6c42\u4e24\u4e2a\u6574\u6570\u7684\u6700\u5927\u516c\u7ea6\u6570\u548c\u6700\u5c0f\u516c\u500d\u6570\uff0c\u7528\u4e3b\u51fd\u6570\u8c03\u7528\u8fd9\u4e24\u4e2a\u51fd\u6570\uff0c\u5e76\u8f93\u51fa\u7ed3\u679c\u4e24\u4e2a\u6574\u6570\u7531\u952e\u76d8\u8f93\u5165\u3002"
            },
            "input": {
                "text": "\u4e24\u4e2a\u6570"
            },
            "output": {
                "text": "\u6700\u5927\u516c\u7ea6\u6570 \u6700\u5c0f\u516c\u500d\u6570"
            },
            "sample_input": {
                "text": "6 15"
            },
            "sample_output": {
                "text": "3 30"
            },
            "hint": {},
            "source": {},
            "solution": [
                {
                    "text": "int gy(int n,int m)\n{\n   int tem;\n   while(m)\n   {\n     tem=m;\n     m=n%m;\n\t n=tem;\n   }\n return n;\n}\nint gg(int n,int m)\n{\n   return m/gy(n,m)*n;\n}\nint main(int argc, char* argv[])\n{\n\tint a,b;\n\twhile(~scanf(\"%d%d\",&a,&b))\n\t{\n\t  if(a<b)\n\t\t  printf(\"%d %d\\n\",gy(b,a),gg(b,a));\n       else\n\t\t  printf(\"%d %d\\n\",gy(a,b),gg(a,b));\n\t}\n\treturn 0;\n}",
                    "@language": "C"
                },
                {
                    "text": "#include \nusing namespace std;\nint gcd(int x,int y)\n{\n\treturn y?gcd(y,x%y):x;\n}\nint lcm(int x,int y)\n{\n\treturn x*y/gcd(x,y);\n}\nint main()\n{\n\tint x,y;\n\tcin>>x>>y;\n\tcout<<gcd(x,y)<<\" \"<<lcm(x,y); \n\treturn 0;\n}",
                    "@language": "C++"
                },
                {
                    "text": "var i,j,k,l,m,n,r:longint;\nprocedure zuidagongyueshu(q,p:longint);\nbegin\n if p>q then\n      begin\n        l:=q;\n        q:=p;\n        p:=l;\n      end;\n      r:=q-p;\n  repeat\n    if r>=p then\n      begin\n        p:=p;\n        q:=r;\n      end;\n    if r<=p then\n      begin\n        q:=p;\n        p:=r;\n      end;\n       r:=q-p;\n    until r=0;\n    i:=p;\n  write(q,' ');\n end;\n procedure zuixiaogongbeishu(m,n:longint);\n begin\n   k:=m div i;\n   l:=n div i;\n   r:=k*l*i;\n   for j:=i to r do\n     if (j mod m=0) and (j mod n =0) then\n       break;\n     writeln(j);\n   end;\n\nbegin\n  readln(m,n);\n  zuidagongyueshu(m,n);\n  zuixiaogongbeishu(m,n);\nend.",
                    "@language": "Pascal"
                },
                {
                    "text": "import java.util.Scanner;\n\n\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\tint a = sc.nextInt();\n\t\tint b = sc.nextInt();\n\t\tSystem.out.printf(\"%d %d\",gcd(a,b),a*b/gcd(a,b));\n\t}\n\tstatic int gcd(int a,int b) {\n\t\treturn b==0?a:gcd(b,a%b);\n\t}\n}",
                    "@language": "Java"
                },
                {
                    "text": "# coding=utf-8\ndef max_g(x,y):\n    if x>y:\n        min_num=y\n    else:\n        min_num=x\n    for i in range(1,min_num+1):\n        if x%i==0 and y%i==0:\n           g=i\n    return g\ndef min_g(x,y):\n    if x>y:\n      max_num=x\n    else:\n      max_num=y\n    while True:\n      if max_num%x==0 and max_num%y==0:\n          return max_num\n      else:\n          max_num+=1\n\n\nimport sys\nif __name__ == '__main__':\n    x,y=map(int,sys.stdin.readline().strip().split())\n    print(max_g(x,y),min_g(x,y))",
                    "@language": "Python"
                }
            ]
        },
        {
            "id": "00000131",
            "title": {
                "text": "\u300aC\u8bed\u8a00\u7a0b\u5e8f\u8bbe\u8ba1\u300b\u6c5f\u5b9d\u948f\u4e3b\u7f16-\u4e60\u98981-3-\u65b0\u5e74\u597d"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "128",
                "@unit": "mb"
            },
            "description": {
                "text": "\u7f16\u5199\u7a0b\u5e8f\u5728\u5c4f\u5e55\u4e0a\u663e\u793a\uff1a\n*****************************\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Happy New Year!\n*****************************\n\u6ce8\u610f\uff1a\n29\u4e2a\u661f\u53f7\uff0cHappy New Year!\u9996\u5b57\u6bcd\u5927\u5199\uff0c\u4e2d\u95f41\u4e2a\u7a7a\u683c\u9694\u5f00\uff0c\u672b\u5c3e\u6709\u82f1\u6587\u53f9\u53f7\u3002\nH\u4e4b\u524d7\u4e2a\u7a7a\u683c\uff0c\u53f9\u53f7\u4e4b\u540e\u6ca1\u6709\u7a7a\u683c\u3002\n\u4e00\u51713\u884c\uff0c\u4e2d\u95f4\u6ca1\u6709\u7a7a\u884c\u3002"
            },
            "input": {
                "text": "\u6ca1\u6709\u8f93\u5165"
            },
            "output": {
                "text": "*****************************\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Happy New Year!\n*****************************"
            },
            "sample_input": {
                "text": "\u6ca1\u6709\u8f93\u5165"
            },
            "sample_output": {
                "text": "*****************************\n       Happy New Year!\n*****************************"
            },
            "hint": {
                "text": "\u590d\u5236\u6837\u4f8b\u8f93\u51fa\uff0c\u6539\u6210\u7a0b\u5e8f\u4ee3\u7801\u3002"
            },
            "source": {},
            "solution": [
                {
                    "text": "int main(int argc, char* argv[])\n{\n\tprintf(\"*****************************\\n\");\n\tprintf(\"       Happy New Year!\\n\");\n\tprintf(\"*****************************\\n\");\n\treturn 0;\n}",
                    "@language": "C"
                },
                {
                    "text": "#include \nint main()\n{\n\tprintf(\"*****************************\\n       Happy New Year!\\n*****************************\");\n}",
                    "@language": "C++"
                },
                {
                    "text": "program aa;\nbegin\n  writeln('*****************************');\n  writeln('       Happy New Year!');\n  writeln('*****************************');\nend.",
                    "@language": "Pascal"
                },
                {
                    "text": "# coding=utf-8\nprint(\"*\"*29)\nprint(\" \"*7,end=\"\")\nprint(\"Happy New Year!\")\nprint(\"*\"*29)",
                    "@language": "Python"
                }
            ]
        },
        {
            "id": "00000132",
            "title": {
                "text": "\u300aC\u8bed\u8a00\u7a0b\u5e8f\u8bbe\u8ba1\u300b\u6c5f\u5b9d\u948f\u4e3b\u7f16-\u4e60\u98985-4-\u7d20\u6570\u8868"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "128",
                "@unit": "mb"
            },
            "description": {
                "text": "\u4ece\u952e\u76d8\u8f93\u5165m,n\n\u5728\u5c4f\u5e55\u4e0a\u6309\u6bcf\u884c10\u4e2a\u7684\u683c\u5f0f\u8f93\u51fam~n\u4e4b\u95f4\u7684\u5168\u90e8\u7d20\u6570"
            },
            "input": {
                "text": "\u4e24\u4e2a\u6574\u6570m n"
            },
            "output": {
                "text": "m~n\u95f4\u7684\u7d20\u6570\uff0c\u6bcf\u884c10\u4e2a\uff0c\u6bcf\u4e2a\u6570\u540e\u7528\u7a7a\u683c\u9694\u5f00\u3002\u5982\u679cm\u548cn\u4e3a\u7d20\u6570\u5219\u5305\u542b\u3002"
            },
            "sample_input": {
                "text": "100 200"
            },
            "sample_output": {
                "text": "101 103 107 109 113 127 131 137 139 149 \n151 157 163 167 173 179 181 191 193 197 \n199"
            },
            "hint": {},
            "source": {},
            "solution": [
                {
                    "text": "#include \nint main(void)\n{\n\tint m,n,i,j,z;\n\tscanf(\"%d%d\",&m,&n);\n\tfor (i=m;i<=n;i++)\n\t{\n\t\tfor (j=2;j<i;j++)\n\t\t{\n\t\t\tif (i%j==0)\n\t\t\t\tbreak;\n\t\t\telse if (i==j+1)\n\t\t\t {\n\t\t\t\t printf (\"%d \",i);\n\t\t\t\t z++;\n\t\t     }\n\t\t}\n\t\tif (z==10)\n\t\t{\n\t\t\tprintf(\"\\n\");\n\t\t\tz=0;\n\t\t}\n\t}\n\treturn 0;\n}",
                    "@language": "C"
                },
                {
                    "text": "#include\n#include\n#include\nusing namespace std;\nbool a[10000];\nint main()\n{\n\tint m,n;\n\tcin>>m>>n;\n\tmemset(a,true,sizeof(a));\n\ta[0]=a[1]=false;\n\tint t=sqrt(n);\n\tfor (int i=2; i<=t; i++)\n\t\tif (a[i])\n\t\t\tfor (int j=2*i; j<=n; j+=i) a[j]=false;\n\tt=0;\n\tfor (int i=m; i<=n; i++)\n\t\tif (a[i])\n\t\t{\n\t\t\tcout<<i<<\" \";\n\t\t\tt++;\n\t\t\tif (t%10==0) cout<<endl;\n\t\t}\n\tif (t%10) cout<<endl;\n\treturn 0;\n}",
                    "@language": "C++"
                },
                {
                    "text": "import java.util.Scanner;\n\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\t\t// TODO Auto-generated method stub\n\t\tScanner sc = new Scanner(System.in);\n\t\tint m =sc.nextInt();\n\t\tint n = sc.nextInt();\n\t\tint count = 0;\n\t\tfor (int i = m; i <= n; i++) {\n\t\t\tfor (int j = 2; j <= i; j++) {\n\t\t\t\tif(i%j!=0) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}else if(j==i){\n\t\t\t\t\tif(count%10==0&&count!=0) {\n\t\t\t\t\t\tSystem.out.println();\n\t\t\t\t\t}\n\t\t\t\t\tSystem.out.print(i+\" \");\n\t\t\t\t\tcount++;\n\t\t\t\t}else {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}",
                    "@language": "Java"
                },
                {
                    "text": "# coding=utf-8\ndef is_prime(x):\n    if x==1:\n        return False\n    for i in range(2,int(x**0.5+1)):\n        if x%i==0:\n            return False\n    return True\nm,n=map(int,input().split())\ni=0\nfor x in range(m,n+1):\n    if is_prime(x):\n        i+=1\n        if i%10:\n            print(x,end=' ')\n        else:\n            print(x)",
                    "@language": "Python"
                }
            ]
        },
        {
            "id": "00000133",
            "title": {
                "text": "\u53cd\u5e8f\u6570"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "32",
                "@unit": "mb"
            },
            "description": {
                "text": "\n\t\u8bbeN\u662f\u4e00\u4e2a\u56db\u4f4d\u6570\uff0c\u5b83\u76849\u500d\u6070\u597d\u662f\u5176\u53cd\u5e8f\u6570\uff08\u4f8b\u5982\uff1a1234\u7684\u53cd\u5e8f\u6570\u662f4321\uff09\n\u6c42N\u7684\u503c\n"
            },
            "input": {
                "text": "\n\t\u7a0b\u5e8f\u65e0\u4efb\u4f55\u8f93\u5165\u6570\u636e\u3002\n"
            },
            "output": {
                "text": "\n\t\u8f93\u51fa\u9898\u76ee\u8981\u6c42\u7684\u56db\u4f4d\u6570\uff0c\u5982\u679c\u7ed3\u679c\u6709\u591a\u7ec4\uff0c\u5219\u6bcf\u7ec4\u7ed3\u679c\u4e4b\u95f4\u4ee5\u56de\u8f66\u9694\u5f00\u3002\n"
            },
            "sample_input": {},
            "sample_output": {},
            "test_input": {
                "text": "0"
            },
            "test_output": {
                "text": "1089"
            },
            "hint": {},
            "source": {
                "text": "\u7b97\u6cd5\u7b14\u8bb0 \u540d\u6821\u590d\u8bd5\u673a\u8003\u771f\u9898-\u6e05\u534e\u5927\u5b66"
            },
            "solution": [
                {
                    "text": "#include\nint main(){\n  printf(\"1089\\n\");\n  return 0;\n}",
                    "@language": "C"
                },
                {
                    "text": "#include\n#include\n#include\nusing namespace std;\n\nint main()\n{\n\tint i;\n\tchar a[5],b[6];\n\tfor(i=1000;i<=9999;i++)\n\t{\n\t\tsprintf(a,\"%d\",i);\n\t\tsprintf(b,\"%d\",i*9);\n\t\treverse(b,b+strlen(b));\n\t\tif(!strcmp(a,b))\n\t\t\tprintf(\"%d\\n\",i);\n\t}\n\treturn 0;\n}",
                    "@language": "C++"
                },
                {
                    "text": "var\n n,a,b,c,d,s:longint;\nbegin\n for n:=1000 to 9999 do\n begin\n  a:=n div 1000;\n  b:=n mod 1000 div 100;\n  c:=n mod 100 div 10;\n  d:=n mod 10;\n  s:=d*1000+c*100+b*10+a;\n  if s div 9=n then writeln(n);\n end;\nend.",
                    "@language": "Pascal"
                },
                {
                    "text": "public class Main {\n\tpublic static void main(String[] args) {\n\t\tfor (int i = 1000; i  0) {\n\t\t\ta[i] = n % 10;\n\t\t\tn = n / 10;\n\t\t\ti-- ;\n\t\t}\n\t\t\n\t\t\n\t\tint s = 0 ;\n\t\t\n\t\tfor (int j = 0; j < a.length; j++) {\n\t\t\ts = (int) (s + a[j]*Math.pow(10, j)) ;\n\t\t}\n\t\t\n\t\treturn s ;\n\t}\n}",
                    "@language": "Java"
                }
            ]
        },
        {
            "id": "00000134",
            "title": {
                "text": "abc"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "32",
                "@unit": "mb"
            },
            "description": {
                "text": "\n\t\u8bbea\u3001b\u3001c\u5747\u662f0\u52309\u4e4b\u95f4\u7684\u6570\u5b57\uff0cabc\u3001bcc\u662f\u4e24\u4e2a\u4e09\u4f4d\u6570\uff0c\u4e14\u6709\uff1aabc+bcc=532\u3002\u6c42\u6ee1\u8db3\u6761\u4ef6\u7684\u6240\u6709a\u3001b\u3001c\u7684\u503c\u3002\n"
            },
            "input": {
                "text": "\n\t\u9898\u76ee\u6ca1\u6709\u4efb\u4f55\u8f93\u5165\u3002\n"
            },
            "output": {
                "text": "\n\t\u8bf7\u8f93\u51fa\u6240\u6709\u6ee1\u8db3\u9898\u76ee\u6761\u4ef6\u7684a\u3001b\u3001c\u7684\u503c\u3002\na\u3001b\u3001c\u4e4b\u95f4\u7528\u7a7a\u683c\u9694\u5f00\u3002\n\u6bcf\u4e2a\u8f93\u51fa\u5360\u4e00\u884c\u3002\n"
            },
            "sample_input": {},
            "sample_output": {},
            "test_input": {
                "text": "0"
            },
            "test_output": {
                "text": "3 2 1"
            },
            "hint": {},
            "source": {
                "text": "\u7b97\u6cd5\u7b14\u8bb0 \u540d\u6821\u590d\u8bd5\u673a\u8003\u771f\u9898-\u6e05\u534e\u5927\u5b66 \u6d1b\u8c37"
            },
            "solution": [
                {
                    "text": "#include\nint main(){\n  printf(\"3 2 1\\n\");\n  return 0;\n}",
                    "@language": "C"
                },
                {
                    "text": "#include\n\nint main()\n{\n\tint a,b,c;\n\tfor(a=1;a<=4;a++)\n\t\tfor(b=1;b<=4;b++)\n\t\t\tfor(c=0;c<=9;c++)\n\t\t\t\tif(a*100+b*10+c+b*100+c*10+c==532)\n\t\t\t\t\tprintf(\"%d %d %d\\n\",a,b,c);\n\treturn 0;\n}",
                    "@language": "C++"
                },
                {
                    "text": "var\n  a,b,c:longint;\nbegin\n  for a:=0 to 9 do\n    for b:=0 to 9 do\n      for c:=0 to 9 do\n        if (a*100+b*10+c+100*b+11*c=532) then\n          begin\n            writeln(a,' ',b,' ',c);\n          end;\nend.",
                    "@language": "Pascal"
                },
                {
                    "text": "public class Main {\n   public static void main(String[] args) {\n\t for (int a = 0; a <= 9; a++) {\n\t\tfor (int b = 0; b <= 9; b++) {\n\t\t\tfor (int c = 0; c <= 9; c++) {\n\t\t\t   if((a*100+b*10+c)+(b*100+c*10+c)==532){\n\t\t\t\t   System.out.println(a+\" \"+b+\" \"+c) ;\n\t\t\t   }\t\n\t\t\t}\n\t\t}\n\t}\n   }\n}",
                    "@language": "Java"
                },
                {
                    "text": "# coding=utf-8\nfor a in range(10):\n    for b in range(10):\n        for c in range(10):\n            if a*100+b*10+c+b*100+c*11==532:\n                print(a,b,c)",
                    "@language": "Python"
                },
                {
                    "text": "using System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\n\nclass Program\n    {\n        static void Main(string[] args)\n        {\n            int c;\n            for (int a = 1; a <= 4; a++)\n            {\n                for (int b = 1; b <= 4; b++)\n                {\n                    c = 1;\n                    if (100 * (a + b) + 10 * (b + c) + 2 * c == 532)\n                        Console.WriteLine(a + \" \" + b + \" \" + c);\n                    else\n                    {\n                        c = 6;\n                        if (100 * (a + b) + 10 * (b + c) + 2 * c == 532)\n                            Console.WriteLine(a + \" \" + b + \" \" + c);\n\n                    }\n                }\n            }\n        }\n    }",
                    "@language": "C#"
                }
            ]
        },
        {
            "id": "00000135",
            "title": {
                "text": "\u767e\u4e07\u5bcc\u7fc1\u95ee\u9898"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "32",
                "@unit": "mb"
            },
            "description": {
                "text": "\n\t\u4e00\u4e2a\u767e\u4e07\u5bcc\u7fc1\u9047\u5230\u4e00\u4e2a\u964c\u751f\u4eba\uff0c\u964c\u751f\u4eba\u627e\u4ed6\u8c08\u4e86\u4e00\u4e2a\u6362\u94b1\u7684\u8ba1\u5212\u3002\u8be5\u8ba1\u5212\u5982\u4e0b\uff1a\u6211\u6bcf\u5929\u7ed9\u4f6010\u4e07\u5143\uff0c\u4f60\u7b2c\u4e00\u5929\u7ed9\u62111\u5206\u94b1\uff0c\u7b2c\u4e8c\u59292\u5206\u94b1\uff0c\u7b2c\u4e09\u59294\u5206\u94b1\u2026\u2026\u8fd9\u6837\u4ea4\u636230\u5929\u540e\uff0c\u767e\u4e07\u5bcc\u7fc1\u4ea4\u51fa\u4e86\u591a\u5c11\u94b1\uff1f\u964c\u751f\u4eba\u4ea4\u51fa\u4e86\u591a\u5c11\u94b1\uff1f\uff08\u6ce8\u610f\u4e00\u4e2a\u662f\u4e07\u5143\uff0c\u4e00\u4e2a\u662f\u5206\uff09\n"
            },
            "input": {
                "text": "\n\t\u65e0\u8f93\u5165\u3002\n"
            },
            "output": {
                "text": "\n\t\u7528%ld\u8f93\u51fa\uff0c\u8f93\u51fa\u767e\u4e07\u5bcc\u7fc1\u548c\u964c\u751f\u4eba\u5404\u81ea\u4ea4\u51fa\u7684\u94b1\u6570\uff0c\u5355\u4f4d\u662f\u5143\u3002\n"
            },
            "sample_input": {},
            "sample_output": {},
            "test_input": {
                "text": "0"
            },
            "test_output": {
                "text": "10737418 3000000"
            },
            "hint": {},
            "source": {
                "text": "\u540d\u6821\u590d\u8bd5\u673a\u8003\u771f\u9898-\u54c8\u5c14\u6ee8\u5de5\u4e1a\u5927\u5b66"
            },
            "solution": [
                {
                    "text": "#include \nint main()\n{\n\tlong sum, n;\n\tint i;\n\tsum = 0;\n\tn = 1;\n\tfor(i = 0; i < 30; i++)\n\t{\n\t\tsum += n;\n\t\tn *= 2;\n\t}\n\tprintf(\"%ld %ld\\n\", sum / 100, 10*10000*30);\n\treturn 0;\n}",
                    "@language": "C"
                },
                {
                    "text": "#include\n#include\n\nint main()\n{\n\tlong int a=1,i;\n\tfor(i=1;i<30;i++)\n\t\ta+=pow(2,i);\n\tprintf(\"%ld %ld\\n\",a/100,10*30*10000);\n\treturn 0;\n}",
                    "@language": "C++"
                },
                {
                    "text": "public class Main {\n\tpublic static void main(String[] args) {\n\t\t\tint i;\n\t\t\tlong s=0;\n\t\t\t\n\t\t\tfor(i=0;i<30;i++) {\n\t\t\t\ts=2*s+1;\n\t\t\t}\n\t\t\ts=s/100;\n\t\t\t\n\t\t\tSystem.out.println(s+\" 3000000\");\n\t\t\t\n     }\n}",
                    "@language": "Java"
                },
                {
                    "text": "# coding=utf-8\na=100000*30\nb=0.01\ns=0\nfor i in range(1,31):\n    s=s+b\n    b=b*2\nprint(\"%d %d\"%(s,a))",
                    "@language": "Python"
                }
            ]
        },
        {
            "id": "00000136",
            "title": {
                "text": "\u4efb\u52a1\u8c03\u5ea6"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "32",
                "@unit": "mb"
            },
            "description": {
                "text": "\n\t\u8bfb\u5165\u4efb\u52a1\u8c03\u5ea6\u5e8f\u5217\uff0c\u8f93\u51fan\u4e2a\u4efb\u52a1\u9002\u5408\u7684\u4e00\u79cd\u8c03\u5ea6\u65b9\u5f0f\u3002\n"
            },
            "input": {
                "text": "\n\t\u8f93\u5165\u5305\u542b\u591a\u7ec4\u6d4b\u8bd5\u6570\u636e\u3002\n\n\n\t\u6bcf\u7ec4\u7b2c\u4e00\u884c\u8f93\u5165\u4e00\u4e2a\u6574\u6570n\uff08n&lt;100000\uff09\uff0c\u8868\u793a\u6709n\u4e2a\u4efb\u52a1\u3002\n\n\n\t\u63a5\u4e0b\u6765n\u884c\uff0c\u6bcf\u884c\u7b2c\u4e00\u4e2a\u8868\u793a\u524d\u5e8f\u4efb\u52a1\uff0c\u62ec\u53f7\u4e2d\u7684\u4efb\u52a1\u4e3a\u82e5\u5e72\u4e2a\u540e\u5e8f\u4efb\u52a1\uff0c\u8868\u793a\u53ea\u6709\u5728\u524d\u5e8f\u4efb\u52a1\u5b8c\u6210\u7684\u60c5\u51b5\u4e0b\uff0c\u540e\u5e8f\u4efb\u52a1\u624d\u80fd\u5f00\u59cb\u3002\u82e5\u540e\u5e8f\u4e3aNULL\u5219\u8868\u793a\u65e0\u540e\u7ee7\u4efb\u52a1\u3002\n"
            },
            "output": {
                "text": "\u8f93\u51fa\u8c03\u5ea6\u65b9\u5f0f\uff0c\u8f93\u51fa\u5982\u679c\u6709\u591a\u79cd\u9002\u5408\u7684\u8c03\u5ea6\u65b9\u5f0f\uff0c\u8bf7\u8f93\u51fa\u5b57\u5178\u5e8f\u6700\u5c0f\u7684\u4e00\u79cd\u3002"
            },
            "sample_input": {
                "text": "4\nTask0(Task1,Task2)\nTask1(Task3)\nTask2(NULL)\nTask3(NULL)"
            },
            "sample_output": {
                "text": "Task0 Task1 Task2 Task3"
            },
            "hint": {},
            "source": {
                "text": "\u7b97\u6cd5\u7b14\u8bb0 \u540d\u6821\u590d\u8bd5\u673a\u8003\u771f\u9898-\u4e2d\u56fd\u79d1\u5b66\u6280\u672f\u5927\u5b66 \u6d1b\u8c37"
            },
            "solution": [
                {
                    "text": "#include\nvoid main(){puts(\"Task0 Task1 Task2 Task3\");}",
                    "@language": "C"
                },
                {
                    "text": "#include\n#include\n#include\n#include\n#include\n#include\n#include\nusing namespace std;\n\nchar str[100006];\nstring task[100000];\nint in[100000];\nint n;\n\nclass cmp {\n\tpublic:\n\tbool operator()(int a,int b) const {\n\t\treturn task[a]>task[b];\n\t}\n};\n\nmap mm;\npriority_queue,cmp> pq;\nvector l[100000];\n\nint getIndex(char *s) {\n\tmap::iterator it=mm.find(string(s));\n\tif (it==mm.end()) {\n\t\tint ret=mm.size();\n\t\ttask[ret]=string(s);\n\t\tmm.insert(make_pair(task[ret],ret));\n\t\treturn ret;\n\t}\n\treturn it->second;\n}\n\nint main() {\n\twhile(scanf(\"%d\",&n)!=EOF) {\n\t\tmm.clear();\n\t\tfor(int i=0;i<n;i++) l[i].clear(),in[i]=0;\n\t\tfor(int i=0;i<n;i++) {\n\t\t\tscanf(\"%s\",str);\n\t\t\tchar *p=strtok(str,\"(,)\");\n\t\t\tint t=getIndex(p);\n\t\t\twhile(p=strtok(NULL,\"(,)\")) {\n\t\t\t\tif (!strcmp(p,\"NULL\")) continue;\n\t\t\t\tint t1=getIndex(p);\n\t\t\t\tl[t].push_back(t1);\n\t\t\t\tin[t1]++;\n\t\t\t}\n\t\t}\n\t\tfor(int i=0;i<n;i++) if (!in[i]) pq.push(i);\n\t\tint first=1;\n\t\twhile(!pq.empty()) {\n\t\t\tif (first) first=0; else putchar(' ');\n\t\t\tint cur=pq.top();\n\t\t\tpq.pop();\n\t\t\tprintf(\"%s\",task[cur].c_str());\n\t\t\tfor(int i=0;i<l[cur].size();i++) {\n\t\t\t\tif (!--in[l[cur][i]]) pq.push(l[cur][i]);\n\t\t\t}\n\t\t}\n\t\tputs(\"\");\n\t}\n\treturn 0;\n}",
                    "@language": "C++"
                },
                {
                    "text": "import java.util.*;\nimport java.util.concurrent.LinkedBlockingQueue;\n\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\tScanner in = new Scanner(System.in);\n\t\twhile(in.hasNext()) {\n\t\t\tString ns = in.nextLine();\n\t\t\tint n = Integer.valueOf(ns);\n\t\t\tint[][] a = new int[n][n];\n\t\t\tboolean[] wasVisit = new boolean[n];\n\t\t\tfor(int i=0;i q = new LinkedBlockingQueue<>();\n\t\t\twhile(q.size()<n) {\n\t\t\t\tfor(int i=0;i<n;i++) {\n\t\t\t\t\tif(wasVisit[i])\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\tboolean b = true;\n\t\t\t\t\tfor(int j=0;j<n;j++) {\n\t\t\t\t\t\tif(a[i][j]==1) {\n\t\t\t\t\t\t\tb = false;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif(b) {\n\t\t\t\t\t\tq.add(i);\n\t\t\t\t\t\twasVisit[i] = true;\n\t\t\t\t\t\tfor(int j=0;j<n;j++)\n\t\t\t\t\t\t\ta[j][i] = 0;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tSystem.out.print(\"Task\"+q.remove());\n\t\t\twhile(!q.isEmpty()) {\n\t\t\t\tSystem.out.print(\" Task\"+q.remove());\n\t\t\t}\n\t\t\tSystem.out.println();\n\t\t}\n\t}\n}",
                    "@language": "Java"
                }
            ]
        },
        {
            "id": "00000137",
            "title": {
                "text": "\u52a0\u6cd5\u7b49\u5f0f"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "32",
                "@unit": "mb"
            },
            "description": {
                "text": "\n\t\u8bbea\u3001b\u3001c \u5747\u662f0 \u52309 \u4e4b\u95f4\u7684\u6570\u5b57\uff0cabc\u3001bcc \u662f\u4e24\u4e2a\u4e09\u4f4d\u6570\uff0c\u4e14\u6709\uff1aabc+bcc=532\u3002\u6c42\n\n\n\t\u6ee1\u8db3\u6761\u4ef6\u7684\u6240\u6709a\u3001b\u3001c \u7684\u503c\u3002\n"
            },
            "input": {
                "text": "\n\t&nbsp;\u65e0\u3002\n"
            },
            "output": {
                "text": "\n\t&nbsp;\u6bcf\u884c\u8f93\u51fa3\u4e2a\u6570\uff0c\u5206\u522b\u8868\u793aabc\u7684\u503c\uff0c\u7528\u4e00\u4e2a\u7a7a\u683c\u9694\u5f00\u3002\n"
            },
            "sample_input": {
                "text": "no input needed"
            },
            "sample_output": {},
            "test_input": {},
            "test_output": {
                "text": "3 2 1"
            },
            "hint": {},
            "source": {
                "text": "\u7b97\u6cd5\u7b14\u8bb0 \u540d\u6821\u590d\u8bd5\u673a\u8003\u771f\u9898-\u5317\u4eac\u7406\u5de5\u5927\u5b66"
            },
            "solution": [
                {
                    "text": "#include\n#include\nint main()\n{\n\tint a,b,c;\n\t//scanf(\"%d%d%d\",&a,&b,&c);\n\tfor(int a=0;a<=5;a++)\n\t\tfor(int b=0;b<=5;b++)\n\t\t\tfor(int c=0;c<=9;c++)\n\t\t\t\tif(((a+b)*100+(b+c)*10+c*2)==532)\n\t\t\t\t\tprintf(\"%d %d %d\\n\",a,b,c);\n\t//system(\"pause\");\n\treturn 0;\n}",
                    "@language": "C"
                },
                {
                    "text": "#include\n#include \nusing namespace std;\nint main()\n{\n    //freopen(\"data.out\", \"w\", stdout);\n    int a,b,c;\n    for(int i=100; i<1000; i++)\n    {\n        a=i/100;\n        b=i/10-a*10;\n        c=i%10;\n        if((i+b*100+c*10+c)==532)\n        {\n            cout<<a<<\" \"<<b<<\" \"<<c;\n            cout<<endl;\n        }\n    }\n    return 0;\n}",
                    "@language": "C++"
                },
                {
                    "text": "public class Main {\n    public static void main(String[] args) {\n        for (int a = 0; a < 9; a++) {\n            for (int b = 0; b < 9; b++) {\n                for (int c = 0; c < 9; c++) {\n                    if(a*100+b*10+c+b*100+c*10+c == 532){\n                        System.out.print(a+\" \");\n                        System.out.print(b+\" \");\n                        System.out.print(c+\" \");\n                    }\n                }\n            }\n        }\n    }\n}",
                    "@language": "Java"
                }
            ]
        },
        {
            "id": "00000138",
            "title": {
                "text": "\u5b8c\u6570\u4e0e\u76c8\u6570"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "32",
                "@unit": "mb"
            },
            "description": {
                "text": "\n\t\u4e00\u4e2a\u6570\u5982\u679c\u6070\u597d\u7b49\u4e8e\u5b83\u7684\u5404\u56e0\u5b50\uff08\u8be5\u6570\u672c\u8eab\u9664\u5916\uff09\u5b50\u548c\uff0c\u5982\uff1a6=3+2+1\uff0c\u5219\u79f0\u5176\u4e3a\u201c\u5b8c\u6570\u201d\uff1b\n\n\n\t\u82e5\u56e0\u5b50\u4e4b\u548c\u5927\u4e8e\u8be5\u6570\uff0c\u5219\u79f0\u5176\u4e3a\u201c\u76c8\u6570\u201d\u3002\u6c42\u51fa2 \u523060 \u4e4b\u95f4\u6240\u6709\u201c\u5b8c\u6570\u201d\u548c\u201c\u76c8\u6570\u201d\uff0c\u5e76\u4ee5\u5982\n\n\n\t\u4e0b\u5f62\u5f0f\u8f93\u51fa\uff1a E: e1 e2 e3 ......(ei \u4e3a\u5b8c\u6570) G: g1 g2 g3 ......(gi \u4e3a\u76c8\u6570)\n"
            },
            "input": {
                "text": "\n\t\u65e0\n"
            },
            "output": {
                "text": "\n\t\u6309\u63cf\u8ff0\u8981\u6c42\u8f93\u51fa\uff08\u6ce8\u610fEG\u540e\u9762\u7684\u5192\u53f7\u4e4b\u540e\u6709\u4e00\u4e2a\u7a7a\u683c\uff09\u3002\n"
            },
            "sample_input": {},
            "sample_output": {},
            "test_input": {
                "text": "nothin"
            },
            "test_output": {
                "text": "E: 6 28 G: 12 18 20 24 30 36 40 42 48 54 56 60"
            },
            "hint": {},
            "source": {
                "text": "\u7b97\u6cd5\u7b14\u8bb0 \u540d\u6821\u590d\u8bd5\u673a\u8003\u771f\u9898-\u5317\u4eac\u7406\u5de5\u5927\u5b66"
            },
            "solution": [
                {
                    "text": "#include\n\nint main()\n{\n\tint i,j;\n\tint num;\n\n\tprintf(\"E: \");\n\tfor( i=2; i i )\n\t\t{\n\t\t\tprintf(\"%d \",i);\n\t\t}\n\t}\n\tprintf(\"\\n\");\n\treturn 0;\n}",
                    "@language": "C"
                },
                {
                    "text": "#include \nusing namespace std;\n\nint main()\n{\n    coutk)\n        {\n            cout<<\" \"<<k;\n        }\n    }\n    cout<<endl;\n    return 0;\n}",
                    "@language": "C++"
                },
                {
                    "text": "public class Main {\n      \n\tpublic static void main(String[] args)\n\t{  \t\n\t\tint i,j,sum,k=0;\n\t\tint[] a=new int[60];\n\t\tSystem.out.print(\"E: \");\n\t\tfor(i=2;ii)a[k++]=i;\n\t\t    if(sum==i)System.out.print(sum+\" \");\n\t\t}\n\t\tSystem.out.print(\"G: \");\n\t\tfor(i=0;i<k-1;i++)\n\t\t\tSystem.out.print(a[i]+\" \");\n\t\tSystem.out.println(a[i]);\n\t\t}\n\n\t}",
                    "@language": "Java"
                }
            ]
        },
        {
            "id": "00000139",
            "title": {
                "text": "\u519c\u592b\u3001\u7f8a\u3001\u83dc\u548c\u72fc\u7684\u6545\u4e8b"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "32",
                "@unit": "mb"
            },
            "description": {
                "text": "\n\t\n\n\n\t\u6709\u4e00\u4e2a\u519c\u592b\u5e26\u4e00\u53ea\u7f8a\u3001\u4e00\u7b50\u83dc\u548c\u4e00\u53ea\u72fc\u8fc7\u6cb3\u3002\n\u5982\u679c\u6ca1\u6709\u519c\u592b\u770b\u7ba1\uff0c\u5219\u72fc\u8981\u5403\u7f8a\uff0c\u7f8a\u8981\u5403\u83dc\u3002\n\u4f46\u662f\u8239\u5f88\u5c0f\uff0c\u53ea\u591f\u519c\u592b\u5e26\u4e00\u6837\u4e1c\u897f\u8fc7\u6cb3\u3002\n\u95ee\u519c\u592b\u8be5\u5982\u4f55\u89e3\u6b64\u96be\u9898\uff1f\n\n\n\t\n"
            },
            "input": {
                "text": "\n\t\n\n\n\t\u9898\u76ee\u6ca1\u6709\u4efb\u4f55\u8f93\u5165\u3002\n\n\n\t\n"
            },
            "output": {
                "text": "\n\t\n\n\n\t\u9898\u76ee\u53ef\u80fd\u6709\u79cd\u89e3\u51b3\u65b9\u6cd5\uff0c\u6c42\u51fa\u6b65\u9aa4\u6700\u5c11\u7684\u89e3\u51b3\u65b9\u6cd5\uff0c\n\u6309\u987a\u5e8f\u8f93\u51fa\u519c\u592b\u60f3\u628a\u7f8a\u3001\u83dc\u3001\u72fc\u5168\u90e8\u8fd0\u8fc7\u6cb3\u9700\u8981\u54ea\u51e0\u4e2a\u6b65\u9aa4\u3002\n\u5982\u679c\u9700\u8981\u5c06\u7f8a\u5e26\u8fc7\u6cb3\u53bb\u5219\u8f93\u51fa\u201csheep_go\u201d\u3002\n\u5982\u679c\u9700\u8981\u5c06\u7f8a\u5e26\u56de\u6765\u5219\u8f93\u51fa\u201csheep_come\u201d\u3002\n\u5982\u679c\u9700\u8981\u5c06\u83dc\u5e26\u8fc7\u6cb3\u53bb\u5219\u8f93\u51fa\u201cvegetable_go\u201d\u3002\n\u5982\u679c\u9700\u8981\u5c06\u83dc\u5e26\u56de\u6765\u5219\u8f93\u51fa\u201cvegetable_come\u201d\u3002\n\u5982\u679c\u9700\u8981\u5c06\u72fc\u5e26\u8fc7\u6cb3\u53bb\u5219\u8f93\u51fa\u201cwolf_go\u201d\u3002\n\u5982\u679c\u9700\u8981\u5c06\u72fc\u5e26\u56de\u6765\u5219\u8f93\u51fa\u201cwolf_come\u201d\u3002\n\u5982\u679c\u9700\u8981\u7a7a\u624b\u8fd4\u56de\u5219\u8f93\u51fa\u201cnothing_come\u201d\u3002\n\u5982\u679c\u9700\u8981\u7a7a\u624b\u8fc7\u6cb3\u5219\u8f93\u51fa\u201cnothing_go\u201d\u3002\n\u6bcf\u8f93\u51fa\u4e00\u79cd\u65b9\u6848\uff0c\u8f93\u51fa\u4e00\u884c\u201csucceed\u201d\u3002\n\n\n\t\n"
            },
            "sample_input": {},
            "sample_output": {},
            "test_input": {
                "text": "no input"
            },
            "test_output": {
                "text": "sheep_go\nnothing_come\nwolf_go\nsheep_come\nvegetable_go\nnothing_come\nsheep_go\nsucceed\nsheep_go\nnothing_come\nvegetable_go\nsheep_come\nwolf_go\nnothing_come\nsheep_go\nsucceed"
            },
            "hint": {},
            "source": {
                "text": "\u540d\u6821\u590d\u8bd5\u673a\u8003\u771f\u9898-\u534e\u4e2d\u79d1\u6280\u5927\u5b66"
            },
            "solution": [
                {
                    "text": "#include\nint main()\n{\n\t    printf(\"sheep_go\\n\");\n        printf(\"nothing_come\\n\");\n        printf(\"wolf_go\\n\");\n        printf(\"sheep_come\\n\");\n        printf(\"vegetable_go\\n\");\n        printf(\"nothing_come\\n\");\n        printf(\"sheep_go\\n\");\n        printf(\"succeed\\n\");\n       // printf(\"\\n\");\n        \n        printf(\"sheep_go\\n\");\n        printf(\"nothing_come\\n\");\n        printf(\"vegetable_go\\n\");\n        printf(\"sheep_come\\n\");\n        printf(\"wolf_go\\n\");\n        printf(\"nothing_come\\n\");\n        printf(\"sheep_go\\n\");\n        printf(\"succeed\\n\");\n     //   printf(\"\\n\");\n\n        \n        return(0);\n}",
                    "@language": "C"
                },
                {
                    "text": "#include\nint main()\n{\n printf(\"sheep_go\\n\");\n printf(\"nothing_come\\n\"); \n printf(\"wolf_go\\n\"); \n printf(\"sheep_come\\n\");\n printf(\"vegetable_go\\n\");\n printf(\"nothing_come\\n\");\n printf(\"sheep_go\\n\");\n printf(\"succeed\\n\");\n\n \n\n printf(\"sheep_go\\n\");\n printf(\"nothing_come\\n\");\n printf(\"vegetable_go\\n\");  \n printf(\"sheep_come\\n\");\n printf(\"wolf_go\\n\"); \n printf(\"nothing_come\\n\");\n printf(\"sheep_go\\n\");\n printf(\"succeed\\n\");\n return 0;\n}",
                    "@language": "C++"
                },
                {
                    "text": "public class Main{\n  public static void main(String[] args){\n    System.out.println(\"sheep_go\");\n    System.out.println(\"nothing_come\");\n    System.out.println(\"wolf_go\");\n    System.out.println(\"sheep_come\");\n    System.out.println(\"vegetable_go\");\n    System.out.println(\"nothing_come\");\n    System.out.println(\"sheep_go\");\n    System.out.println(\"succeed\");\n    System.out.println(\"sheep_go\");\n    System.out.println(\"nothing_come\");\n    System.out.println(\"vegetable_go\");\n    System.out.println(\"sheep_come\");\n    System.out.println(\"wolf_go\");\n    System.out.println(\"nothing_come\");\n    System.out.println(\"sheep_go\");\n    System.out.println(\"succeed\");\n  }\n}",
                    "@language": "Java"
                }
            ]
        },
        {
            "id": "00000140",
            "title": {
                "text": "\u6392\u540d"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "32",
                "@unit": "mb"
            },
            "description": {
                "text": "\n\t\u4eca\u5929\u7684\u4e0a\u673a\u8003\u8bd5\u867d\u7136\u6709\u5b9e\u65f6\u7684Ranklist\uff0c\u4f46\u4e0a\u9762\u7684\u6392\u540d\u53ea\u662f\u6839\u636e\u5b8c\u6210\u7684\u9898\u6570\u6392\u5e8f\uff0c\u6ca1\u6709\u8003\u8651\u6bcf\u9898\u7684\u5206\u503c\uff0c\u6240\u4ee5\u5e76\u4e0d\u662f\u6700\u540e\u7684\u6392\u540d\u3002\u7ed9\u5b9a\u5f55\u53d6\u5206\u6570\u7ebf\uff0c\u8bf7\u4f60\u5199\u7a0b\u5e8f\u627e\u51fa\u6700\u540e\u901a\u8fc7\u5206\u6570\u7ebf\u7684\u8003\u751f\uff0c\u5e76\u5c06\u4ed6\u4eec\u7684\u6210\u7ee9\u6309\u964d\u5e8f\u6253\u5370\u3002 \n"
            },
            "input": {
                "text": "\n\t\u6d4b\u8bd5\u8f93\u5165\u5305\u542b\u82e5\u5e72\u573a\u8003\u8bd5\u7684\u4fe1\u606f\u3002\u6bcf\u573a\u8003\u8bd5\u4fe1\u606f\u7684\u7b2c1\u884c\u7ed9\u51fa\u8003\u751f\u4eba\u6570N&nbsp;(&nbsp;0&nbsp;&lt;&nbsp;N&nbsp;&lt;&nbsp;1000&nbsp;)\u3001\u8003\u9898\u6570M&nbsp;(&nbsp;0&nbsp;&lt;&nbsp;M&nbsp;&lt;&nbsp;=&nbsp;10&nbsp;)\u3001\u5206\u6570\u7ebf\uff08\u6b63\u6574\u6570\uff09G\uff1b\u7b2c2\u884c\u6392\u5e8f\u7ed9\u51fa\u7b2c1\u9898\u81f3\u7b2cM\u9898\u7684\u6b63\u6574\u6570\u5206\u503c\uff1b\u4ee5\u4e0bN\u884c\uff0c\u6bcf\u884c\u7ed9\u51fa\u4e00\u540d\u8003\u751f\u7684\u51c6\u8003\u8bc1\u53f7\uff08\u957f\u5ea6\u4e0d\u8d85\u8fc720\u7684\u5b57\u7b26\u4e32\uff09\u3001\u8be5\u751f\u89e3\u51b3\u7684\u9898\u76ee\u603b\u6570m\u3001\u4ee5\u53ca\u8fd9m\u9053\u9898\u7684\u9898\u53f7\uff08\u9898\u76ee\u53f7\u75311\u5230M\uff09\u3002&nbsp;\n\u5f53\u8bfb\u5165\u7684\u8003\u751f\u4eba\u6570\u4e3a0\u65f6\uff0c\u8f93\u5165\u7ed3\u675f\uff0c\u8be5\u573a\u8003\u8bd5\u4e0d\u4e88\u5904\u7406\u3002 \n"
            },
            "output": {
                "text": "\n\t\u5bf9\u6bcf\u573a\u8003\u8bd5\uff0c\u9996\u5148\u5728\u7b2c1\u884c\u8f93\u51fa\u4e0d\u4f4e\u4e8e\u5206\u6570\u7ebf\u7684\u8003\u751f\u4eba\u6570n\uff0c\u968f\u540en\u884c\u6309\u5206\u6570\u4ece\u9ad8\u5230\u4f4e\u8f93\u51fa\u4e0a\u7ebf\u8003\u751f\u7684\u8003\u53f7\u4e0e\u5206\u6570\uff0c\u5176\u95f4\u75281\u7a7a\u683c\u5206\u9694\u3002\u82e5\u6709\u591a\u540d\u8003\u751f\u5206\u6570\u76f8\u540c\uff0c\u5219\u6309\u4ed6\u4eec\u8003\u53f7\u7684\u5347\u5e8f\u8f93\u51fa\u3002 \n"
            },
            "sample_input": {
                "text": "3 5 32\n17 10 12 9 15\nCS22003 5 1 2 3 4 5\nCS22004 3 5 1 3\nCS22002 2 1 5\n0"
            },
            "sample_output": {
                "text": "3\nCS22003 63\nCS22004 44\nCS22002 32"
            },
            "hint": {
                "text": "\n\t\n\t\t\u8fd9\u9898\u6bd4\u8f83\u7b80\u5355\uff0c\u8ba1\u7b97\u597d\u6bcf\u4e2a\u4eba\u7684\u5206\u6570\u540e\u6309\u9898\u76ee\u8981\u6c42\u6392\u5e8f\u5373\u53ef\u3002\n\t\n"
            },
            "source": {
                "text": "\u7b97\u6cd5\u7b14\u8bb0 \u540d\u6821\u590d\u8bd5\u673a\u8003\u771f\u9898-\u6d59\u6c5f\u5927\u5b66 \u6d1b\u8c37"
            },
            "solution": [
                {
                    "text": "#include\n#include\ntypedef struct Record\n{\n  char no[20];\n  int source;\n}Record;\nint main()\n{\n  int N,M,G;\n  int source[20];\n  Record student[1000];\n  scanf(\"%d\",&N);\n  while(N!=0)\n  {\n    scanf(\"%d%d\",&M,&G);\n    int i=0;\n    int count=0;\n    while(i=G)\n      {\n        for(j=count-1;j>=0;j--)\n        {\n          if(student[j].source0)\n          printf(\"%d\\n\",count);\n    for(i=0;i<count;i++)\n    {\n      printf(\"%s %d\\n\",student[i].no,student[i].source);\n    }\n    scanf(\"%d\",&N);\n  }\n}",
                    "@language": "C"
                },
                {
                    "text": "#include \n#include \n#include \n#include \nusing namespace std;\n\nstruct Student {\n    int score;\n    string id;\n};\n\nStudent a[1005];\n\nbool cmp(const Student & l, const Student & r) {\n    if (l.score != r.score)\n        return l.score > r.score;\n    return l.id  0) {\n        scanf(\"%d %d\", &m, &g);\n        for (int i = 1; i  ans;\n        for (int i = 0; i = g)\n                ans.push_back(a[i]);\n        printf(\"%u\\n\", ans.size());\n        for (vector ::iterator it = ans.begin(); it != ans.end(); ++it)\n            printf(\"%s %d\\n\", it->id.c_str(), it->score);\n    }\n    return 0;\n}",
                    "@language": "C++"
                },
                {
                    "text": "import java.util.Scanner;\n\npublic class Main{\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        while(sc.hasNext()){\n            int n=sc.nextInt();\n            if(n==0){\n                return ;\n            }\n            int m = sc.nextInt();\n            int g = sc.nextInt();\n\n            int[] gm = new int[m+1];\n            for(int i=1;i=g){\n                    str[k++]=idstr[i]+\" \"+sum;\n                }\n            }\n\n            if(k==0){\n                System.out.println(0);\n                continue;\n            }\n            //System.out.println(\"aaa\");\n//          else{\n//              for(int i=0;i0){\n                            strm[i]=strm[i]^strm[j];\n                            strm[j]=strm[i]^strm[j];\n                            strm[i]=strm[i]^strm[j];\n\n                            String s=strs[i];\n                            strs[i]=strs[j];\n                            strs[j]=s;\n                        }\n                    }\n                }\n            }\n\n            System.out.println(k);\n            for(int i=0;i<k;i++){\n                System.out.print(strs[i]);\n                System.out.println(\" \"+strm[i]);\n            }\n        }\n    }\n}",
                    "@language": "Java"
                }
            ]
        },
        {
            "id": "00000141",
            "title": {
                "text": "C\u8bed\u8a00\u7a0b\u5e8f\u8bbe\u8ba1\u6559\u7a0b\uff08\u7b2c\u4e09\u7248\uff09\u8bfe\u540e\u4e60\u98983.7"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "128",
                "@unit": "mb"
            },
            "description": {
                "text": "\n\t\u8981\u5c06\"China\"\u8bd1\u6210\u5bc6\u7801\uff0c\u8bd1\u7801\u89c4\u5f8b\u662f\uff1a\u7528\u539f\u6765\u5b57\u6bcd\u540e\u9762\u7684\u7b2c4\u4e2a\u5b57\u6bcd\u4ee3\u66ff\u539f\u6765\u7684\u5b57\u6bcd\uff0e\u4f8b\u5982\uff0c\u5b57\u6bcd\"A\"\u540e\u9762\u7b2c4\u4e2a\u5b57\u6bcd\u662f\"E\"\uff0e\"E\"\u4ee3\u66ff\"A\"\u3002\u56e0\u6b64\uff0c\"China\"\u5e94\u8bd1\u4e3a\"Glmre\"\u3002\u8bf7\u7f16\u4e00\u7a0b\u5e8f\uff0c\u7528\u8d4b\u521d\u503c\u7684\u65b9\u6cd5\u4f7fcl\u3001c2\u3001c3\u3001c4\u3001c5\u4e94\u4e2a\u53d8\u91cf\u7684\u503c\u5206\u522b\u4e3a\uff0c\u2019C\u2019\u3001\u2019h\u2019\u3001\u2019i\u2019\u3001\u2019n\u2019\u3001\u2019a\u2019\uff0c\u7ecf\u8fc7\u8fd0\u7b97\uff0c\u4f7fc1\u3001c2\u3001c3\u3001c4\u3001c5\u5206\u522b\u53d8\u4e3a\u2019G\u2019\u3001\u2019l\u2019\u3001\u2019m\u2019\u3001\u2019r\u2019\u3001\u2019e\u2019\uff0c\u5e76\u8f93\u51fa\u3002\n"
            },
            "input": {
                "text": "\n\tChina\n"
            },
            "output": {
                "text": "\n\t\u52a0\u5bc6\u540e\u7684China\n"
            },
            "sample_input": {
                "text": "China"
            },
            "sample_output": {
                "text": "Glmre"
            },
            "hint": {
                "text": "so easy"
            },
            "source": {
                "text": "C\u7a0b\u5e8f\u8bfe\u540e\u4e60\u9898"
            },
            "solution": [
                {
                    "text": "#include\nint main()\n{\n\tchar c1='C';\n\tchar c2='h';\n\tchar c3='i';\n\tchar c4='n';\n\tchar c5='a';\n\tc1=c1+4;\n\tc2=c2+4;\n\tc3=c3+4;\n\tc4=c4+4;\n\tc5=c5+4;\n\tprintf(\"%c%c%c%c%c\\n\",c1,c2,c3,c4,c5);\n\treturn 0;\n}",
                    "@language": "C"
                },
                {
                    "text": "#include\nint main()\n{\n\tchar c1='C',c2='h',c3='i',c4='n',c5='a';\n\tc1+=4;c2+=4;c3+=4;c4+=4;c5+=4;\n\tprintf(\"%c%c%c%c%c\\n\",c1,c2,c3,c4,c5);\n}",
                    "@language": "C++"
                }
            ]
        },
        {
            "id": "00000142",
            "title": {
                "text": "C\u8bed\u8a00\u7a0b\u5e8f\u8bbe\u8ba1\u6559\u7a0b\uff08\u7b2c\u4e09\u7248\uff09\u8bfe\u540e\u4e60\u98986.6"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "128",
                "@unit": "mb"
            },
            "description": {
                "text": "\u6253\u5370\u51fa\u6240\u6709\"\u6c34\u4ed9\u82b1\u6570\"\uff0c\u6240\u8c13\"\u6c34\u4ed9\u82b1\u6570\"\u662f\u6307\u4e00\u4e2a\u4e09\u4f4d\u6570\uff0c\u5176\u5404\u4f4d\u6570\u5b57\u7acb\u65b9\u548c\u7b49\u4e8e\u8be5\u672c\u8eab\u3002\n\u4f8b\u5982\uff1a153\u662f\u4e00\u4e2a\u6c34\u4ed9\u82b1\u6570\uff0c\u56e0\u4e3a153=1^3+5^3+3^3\u3002\nOutput:\n153\n???\n???\n??? "
            },
            "input": {
                "text": "\u65e0"
            },
            "output": {
                "text": "\u6240\u6709\u7684\u6c34\u4ed9\u82b1\u6570\uff0c\u4ece\u5c0f\u7684\u5f00\u59cb\u3002\n\u6bcf\u884c\u4e00\u4e2a"
            },
            "sample_input": {},
            "sample_output": {},
            "test_input": {
                "text": "1"
            },
            "test_output": {
                "text": "153\n370\n371\n407"
            },
            "hint": {},
            "source": {
                "text": "C\u7a0b\u5e8f\u8bfe\u540e\u4e60\u9898"
            },
            "solution": [
                {
                    "text": "#include \nint main(){\nint number,a,b,c;\nfor(number=100;number<1000;number++){\na=number/100;\nb=(number-a*100)/10;\nc=number-a*100-b*10;\nif(number==a*a*a+b*b*b+c*c*c)\nprintf(\"%d\\n\",number);\n}\nreturn 0;}",
                    "@language": "C"
                },
                {
                    "text": "#include\nusing namespace std;\nint main()\n{\n\tint g,s,b;\n\tfor (int i=100; i<999; i++)\n\t{\n\t\tb=i/100;\n\t\ts=i/10%10;\n\t\tg=i%10;\n\t\tif (b*b*b+s*s*s+g*g*g==i) cout<<i<<endl;\n\t}\n\treturn 0;\n}",
                    "@language": "C++"
                },
                {
                    "text": "begin\n  writeln('153');\n  writeln('370');\n  writeln('371');\n  writeln('407');\nend.",
                    "@language": "Pascal"
                }
            ]
        },
        {
            "id": "00000143",
            "title": {
                "text": "C\u8bed\u8a00\u7a0b\u5e8f\u8bbe\u8ba1\u6559\u7a0b\uff08\u7b2c\u4e09\u7248\uff09\u8bfe\u540e\u4e60\u98988.1"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "128",
                "@unit": "mb"
            },
            "description": {
                "text": "\u5199\u4e24\u4e2a\u51fd\u6570\uff0c\u5206\u522b\u6c42\u4e24\u4e2a\u6574\u6570\u7684\u6700\u5927\u516c\u7ea6\u6570\u548c\u6700\u5c0f\u516c\u500d\u6570\uff0c\u7528\u4e3b\u51fd\u6570\u8c03\u7528\u8fd9\u4e24\u4e2a\u51fd\u6570\uff0c\u5e76\u8f93\u51fa\u7ed3\u679c\u4e24\u4e2a\u6574\u6570\u7531\u952e\u76d8\u8f93\u5165\u3002"
            },
            "input": {
                "text": "\u4e24\u4e2a\u6570"
            },
            "output": {
                "text": "\u6700\u5927\u516c\u7ea6\u6570 \u6700\u5c0f\u516c\u500d\u6570"
            },
            "sample_input": {
                "text": "6 15"
            },
            "sample_output": {
                "text": "3 30"
            },
            "hint": {},
            "source": {
                "text": "C\u7a0b\u5e8f\u8bfe\u540e\u4e60\u9898"
            },
            "solution": {
                "text": "#include \n#include \nint f1(int a,int b)\n{\n    int tmp;\n    if(a<b)\n    {\n        tmp=b;\n        b=a;\n        a=tmp;\n    }\n    while(a%b!=0)\n    {\n        tmp=a%b;\n        a=b;\n        b=tmp;\n    }\n    return b;\n}\n\nint f2(int a,int b)\n{\n    int t1,t2;\n    t1=f1(a,b);\n    t2=a*b/t1;\n    return t2;\n}\n\nint main(int argc, char *argv[])\n{\n    int a,b;\n    int t1,t2;\n    scanf(\"%d%d\",&a,&b);\n    t1=f1(a,b);\n    t2=f2(a,b);\n    printf(\"%d %d\",t1,t2);\n\n  return 0;\n}",
                "@language": "C++"
            }
        },
        {
            "id": "00000144",
            "title": {
                "text": "2005\u5e74\u6625\u6d59\u6c5f\u7701\u8ba1\u7b97\u673a\u7b49\u7ea7\u8003\u8bd5\u4e8c\u7ea7C \u7f16\u7a0b\u9898(2)"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "128",
                "@unit": "mb"
            },
            "description": {
                "text": "\n\nNormal\n0\n\n7.8 \u78c5\n0\n2\n\nfalse\nfalse\nfalse\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nMicrosoftInternetExplorer4\n\n\n\n\n\n\nst1\\:*{behavior:url(#ieooui) }\n\n\n\n/* Style Definitions */\ntable.MsoNormalTable\n{mso-style-name:\u666e\u901a\u8868\u683c;\nmso-tstyle-rowband-size:0;\nmso-tstyle-colband-size:0;\nmso-style-noshow:yes;\nmso-style-parent:\"\";\nmso-padding-alt:0cm 5.4pt 0cm 5.4pt;\nmso-para-margin:0cm;\nmso-para-margin-bottom:.0001pt;\nmso-pagination:widow-orphan;\nfont-size:10.0pt;\nfont-family:\"Times New Roman\";\nmso-fareast-font-family:\"Times New Roman\";\nmso-ansi-language:#0400;\nmso-fareast-language:#0400;\nmso-bidi-language:#0400;}\n\n\n\u8f93\u51fa\u4e00\u5f20\u6444\u6c0f\u4e00\u534e\u6c0f\u6e29\u5ea6\u8f6c\u6362\u8868\uff0c\u6444\u6c0f\u6e29\u5ea6\u7684\u53d6\u503c\u533a\u95f4\u662f[-1000 C\uff0c1500C ]\uff0c\u6e29\u5ea6\u95f4\u969450C\u3002\u8981\u6c42\u5b9a\u4e49\u548c\u8c03\u7528\u51fd\u6570 ctof(c),\u5c06\u6444\u6c0f\u6e29\u5ea6C\u8f6c\u6362\u6210\u534e\u6c0f\u6e29\u5ea6F\uff0c\u8ba1\u7b97\u516c\u5f0f\uff1a \nF = 32 + C* 9/5\u3002\n\u4f8b\u5982\nc=0-&gt;f=32\nc=5-&gt;f=41\nc=10-&gt;f=50\nc=15-&gt;f=59\nc=20-&gt;f=68\nc=25-&gt;f=77\nc=30-&gt;f=86\nc=35-&gt;f=95\nc=40-&gt;f=104\nc=45-&gt;f=113\nc=50-&gt;f=122\nc=55-&gt;f=131\nc=60-&gt;f=140\nc=65-&gt;f=149"
            },
            "input": {},
            "output": {},
            "sample_input": {},
            "sample_output": {},
            "test_input": {
                "text": "?"
            },
            "test_output": {
                "text": "c=-100->f=-148\nc=-95->f=-139\nc=-90->f=-130\nc=-85->f=-121\nc=-80->f=-112\nc=-75->f=-103\nc=-70->f=-94\nc=-65->f=-85\nc=-60->f=-76\nc=-55->f=-67\nc=-50->f=-58\nc=-45->f=-49\nc=-40->f=-40\nc=-35->f=-31\nc=-30->f=-22\nc=-25->f=-13\nc=-20->f=-4\nc=-15->f=5\nc=-10->f=14\nc=-5->f=23\nc=0->f=32\nc=5->f=41\nc=10->f=50\nc=15->f=59\nc=20->f=68\nc=25->f=77\nc=30->f=86\nc=35->f=95\nc=40->f=104\nc=45->f=113\nc=50->f=122\nc=55->f=131\nc=60->f=140\nc=65->f=149\nc=70->f=158\nc=75->f=167\nc=80->f=176\nc=85->f=185\nc=90->f=194\nc=95->f=203\nc=100->f=212\nc=105->f=221\nc=110->f=230\nc=115->f=239\nc=120->f=248\nc=125->f=257\nc=130->f=266\nc=135->f=275\nc=140->f=284\nc=145->f=293\nc=150->f=302"
            },
            "hint": {},
            "source": {},
            "solution": [
                {
                    "text": "#include \n#include \n\n/* run this program using the console pauser or add your own getch, system(\"pause\") or input loop */\n\nint ctof(int c)\n{\n\tint f;\n\tf=32+c*9/5;\n\treturn f;\n} \nint main(int argc, char *argv[]) {\n\tint c,f;\n\tfor(c=-100;cf=%d\\n\",c,f);\n\t}\n\treturn 0;\n}",
                    "@language": "C"
                },
                {
                    "text": "#include\nusing namespace std;\nint ctof(int c)\n{\n\treturn 32+c*9/5;\n}\nint main()\n{\n\tfor (int c=-100; cf=\"<<ctof(c)<<endl;\n\treturn 0;\n}",
                    "@language": "C++"
                }
            ]
        },
        {
            "id": "00000145",
            "title": {
                "text": "C\u8bed\u8a00\u7a0b\u5e8f\u8bbe\u8ba1\u6559\u7a0b\uff08\u7b2c\u4e09\u7248\uff09\u8bfe\u540e\u4e60\u98981.5"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "128",
                "@unit": "mb"
            },
            "description": {
                "text": "\u8bf7\u53c2\u7167\u672c\u7ae0\u4f8b\u9898\uff0c\u7f16\u5199\u4e00\u4e2aC\u7a0b\u5e8f\uff0c\u8f93\u51fa\u4ee5\u4e0b\u4fe1\u606f\uff1a\n**************************\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Very&nbsp;&nbsp;&nbsp; Good!\n**************************\n\u6570\uff0a\u53f7\u53ef\u770b\u51fa\uff0cVery\u524d\u97629\u7a7a\u683c\uff0cGood\u524d\u9762&hellip;&hellip;\n*\u4e5f\u662f\u8f93\u51fa\u7684\u4e00\u90e8\u5206\uff0c\u522b\u5149\u6253\u5370Very Good!"
            },
            "input": {
                "text": "\u65e0\u9700\u8f93\u5165"
            },
            "output": {
                "text": "**************************\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Very&nbsp;&nbsp;&nbsp; Good!\n**************************"
            },
            "sample_input": {
                "text": "no input needed"
            },
            "sample_output": {
                "text": "**************************\n         Very    Good!\n**************************"
            },
            "test_input": {
                "text": "1234"
            },
            "test_output": {
                "text": "**************************\n         Very    Good!\n**************************"
            },
            "hint": {},
            "source": {},
            "solution": [
                {
                    "text": "#include\nint main()\n{\n    printf(\"**************************\\n\");\n    printf(\"         Very    Good!\\n\");\n    printf(\"**************************\\n\");\n    return 0;\n}",
                    "@language": "C"
                },
                {
                    "text": "#include\nint main()\n{\n    printf(\"**************************\\n\");\n    printf(\"         Very    Good!\\n\");\n    printf(\"**************************\\n\");\n    return 0;\n}",
                    "@language": "C++"
                },
                {
                    "text": "begin\n  writeln('**************************');\n  writeln('         Very    Good!');\n  writeln('**************************');\nend.",
                    "@language": "Pascal"
                }
            ]
        },
        {
            "id": "00000146",
            "title": {
                "text": "C\u8bed\u8a00\u7a0b\u5e8f\u8bbe\u8ba1\u6559\u7a0b\uff08\u7b2c\u4e09\u7248\uff09\u8bfe\u540e\u4e60\u98983.7"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "128",
                "@unit": "mb"
            },
            "description": {
                "text": "\u8981\u5c06&quot;China&quot;\u8bd1\u6210\u5bc6\u7801\uff0c\u8bd1\u7801\u89c4\u5f8b\u662f\uff1a\u7528\u539f\u6765\u5b57\u6bcd\u540e\u9762\u7684\u7b2c4\u4e2a\u5b57\u6bcd\u4ee3\u66ff\u539f\u6765\u7684\u5b57\u6bcd\uff0e\u4f8b\u5982\uff0c\u5b57\u6bcd&quot;A&quot;\u540e\u9762\u7b2c4\u4e2a\u5b57\u6bcd\u662f&quot;E&quot;\uff0e&quot;E&quot;\u4ee3\u66ff&quot;A&quot;\u3002\u56e0\u6b64\uff0c&quot;China&quot;\u5e94\u8bd1\u4e3a&quot;Glmre&quot;\u3002\u8bf7\u7f16\u4e00\u7a0b\u5e8f\uff0c\u7528\u8d4b\u521d\u503c\u7684\u65b9\u6cd5\u4f7fcl\u3001c2\u3001c3\u3001c4\u3001c5\u4e94\u4e2a\u53d8\u91cf\u7684\u503c\u5206\u522b\u4e3a\uff0c&rsquo;C&rsquo;\u3001&rsquo;h&rsquo;\u3001&rsquo;i&rsquo;\u3001&rsquo;n&rsquo;\u3001&rsquo;a&rsquo;\uff0c\u7ecf\u8fc7\u8fd0\u7b97\uff0c\u4f7fc1\u3001c2\u3001c3\u3001c4\u3001c5\u5206\u522b\u53d8\u4e3a&rsquo;G&rsquo;\u3001&rsquo;l&rsquo;\u3001&rsquo;m&rsquo;\u3001&rsquo;r&rsquo;\u3001&rsquo;e&rsquo;\uff0c\u5e76\u8f93\u51fa\u3002"
            },
            "input": {
                "text": "China"
            },
            "output": {
                "text": "\u52a0\u5bc6\u540e\u7684China"
            },
            "sample_input": {
                "text": "China"
            },
            "sample_output": {
                "text": "Glmre"
            },
            "hint": {
                "text": "so easy"
            },
            "source": {},
            "solution": [
                {
                    "text": "#include\nint main()\n{\n\tchar a,b,c,d,e;\n\ta='C'+4;\n\tb='h'+4;\n\tc='i'+4;\n\td='n'+4;\n\te='a'+4;\n    putchar(a);\n    putchar(b);\n\tputchar(c);\n\tputchar(d);\n\tputchar(e);\n\tputchar('\\n');\nreturn 0;\n}",
                    "@language": "C"
                },
                {
                    "text": "#include\nusing namespace std;\nint main()\n{\n\tchar c1='C',c2='h',c3='i',c4='n',c5='a';\n\tc1+=4; c2+=4; c3+=4; c4+=4; c5+=4;\n\tcout<<c1<<c2<<c3<<c4<<c5<<endl;\n\treturn 0;\n}",
                    "@language": "C++"
                }
            ]
        },
        {
            "id": "00000147",
            "title": {
                "text": "C\u8bed\u8a00\u7a0b\u5e8f\u8bbe\u8ba1\u6559\u7a0b\uff08\u7b2c\u4e09\u7248\uff09\u8bfe\u540e\u4e60\u98988.1"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "128",
                "@unit": "mb"
            },
            "description": {
                "text": "\u5199\u4e24\u4e2a\u51fd\u6570\uff0c\u5206\u522b\u6c42\u4e24\u4e2a\u6574\u6570\u7684\u6700\u5927\u516c\u7ea6\u6570\u548c\u6700\u5c0f\u516c\u500d\u6570\uff0c\u7528\u4e3b\u51fd\u6570\u8c03\u7528\u8fd9\u4e24\u4e2a\u51fd\u6570\uff0c\u5e76\u8f93\u51fa\u7ed3\u679c\u4e24\u4e2a\u6574\u6570\u7531\u952e\u76d8\u8f93\u5165\u3002"
            },
            "input": {
                "text": "\u4e24\u4e2a\u6570"
            },
            "output": {
                "text": "\u6700\u5927\u516c\u7ea6\u6570 \u6700\u5c0f\u516c\u500d\u6570"
            },
            "sample_input": {
                "text": "6 15"
            },
            "sample_output": {
                "text": "3 30"
            },
            "hint": {},
            "source": {},
            "solution": {
                "text": "#include\nusing namespace std;\nint gcd(int m,int n)\n{\n\tint r=m%n;\n\twhile (r)\n\t{\n\t\tm=n;\n\t\tn=r;\n\t\tr=m%n;\n\t}\n\treturn n;\n}\nint lcd(int m,int n)\n{\n\treturn m*n/gcd(m,n);\n}\nint main()\n{\n\tint m,n;\n\tcin>>m>>n;\n\tcout<<gcd(m,n)<<\" \"<<lcd(m,n)<<endl;\n\treturn 0;\n}",
                "@language": "C++"
            }
        },
        {
            "id": "00000148",
            "title": {
                "text": "\u5728\u540c\u4e00\u884c\u8f93\u51fa\u201cHello World! I'm a C++ program.\u201d"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "128",
                "@unit": "mb"
            },
            "description": {
                "text": "\n\t\u7f16\u7a0b\u8f93\u51fa\u4ee5\u4e0b\u5185\u5bb9 \n\n\n\tHello World! I'm a C++ program. \n\n\n\t\u8fd9\u662f\u5165\u95e8\u7ec3\u4e60\u9898\uff0c\u8981\u6c42\u5fc5\u987b\u7528\u4e24\u6761\u8f93\u51fa\u547d\u4ee4\u8fdb\u884c\u8f93\u51fa\u3002 \n\n\n\t\n \n\n\n\t\u6837\u4f8b\u8f93\u51fa \n\n\n\tHello World! I'm a C++ program.\n\n\n\t\n \n\n\n\t\u6ce8\u610f\u5927\u5c0f\u5199\u3001\u7a7a\u683c\u3001\u611f\u53f9\u53f7\uff0c\u53e5\u53f7\uff0c\u5355\u5f15\u53f7\u90fd\u5fc5\u987b\u4f7f\u7528\u82f1\u6587\u8f93\u5165\u6cd5\u91cc\u7684\u7b26\u53f7\u3002 \n\u6ce8\u610f\uff1aHello World! I'm a C++ program.\u524d\u540e\u4e0d\u80fd\u6dfb\u52a0\u7a7a\u683c\uff0c\n\n\n\t\u4e25\u683c\u6309\u7167\u9898\u76ee\u8981\u6c42\u8f93\u51fa\n\n"
            },
            "input": {},
            "output": {},
            "sample_input": {},
            "sample_output": {},
            "test_input": {
                "text": "0"
            },
            "test_output": {
                "text": "Hello World! I'm a C++ program."
            },
            "hint": {},
            "source": {
                "text": "C++\u57fa\u7840\u6559\u7a0b-\u7a0b\u5e8f\u7ed3\u6784"
            },
            "solution": [
                {
                    "text": "#include\nint main()\n{\n printf(\"Hello World! I'm a C++ program.\\n\");\n }",
                    "@language": "C"
                },
                {
                    "text": "#include \nusing namespace std;\nint main ()\n{\n  cout << \"Hello World!\";\n  cout << \" I'm a C++ program.\";\n  return 0;\n}",
                    "@language": "C++"
                },
                {
                    "text": "begin\nwriteln('Hello World! I''m a C++ program.');\nend.",
                    "@language": "Pascal"
                },
                {
                    "text": "# coding=utf-8\nprint(\"Hello World! I'm a C++ program.\")",
                    "@language": "Python"
                }
            ]
        },
        {
            "id": "00000149",
            "title": {
                "text": "\u5206\u884c\u8f93\u51fa\u201cHello World!\u201d\u548c\u201c I'm a C++ program.\u201d"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "128",
                "@unit": "mb"
            },
            "description": {
                "text": "\n\t\u8bf7\u8f93\u51fa\u4ee5\u4e0b\u5185\u5bb9 \n\n\n\tHello World! \n\n\n\tI'm a C++ program.\n\n\n\t\n \n\n\n\t\u63d0\u793a:\u6240\u6709\u7684\u7b26\u53f7\u662f\u82f1\u6587\u7b26\u53f7 \n\n\n\t\u8f93\u51fa\u56de\u8f66\u7684\u65b9\u6cd5\u4e3e\u4f8b \n\n\n\tcout&lt;&lt;\"First Line\"&lt;&lt;endl&lt;&lt;\"Second Line\";&nbsp; // \u8bf4\u660e\uff1aendl\u80fd\u8f93\u51fa\u6362\u884c \n\n\n\t\u4e5f\u53ef\u4ee5\u8fd9\u6837 cout&lt;&lt;\"First Line\"&lt;&lt;endl; cout&lt;&lt;\"Second Line\";&nbsp; \n\n\n\t\u8fd8\u53ef\u5199\u6210 \n\n\n\tcout&lt;&lt;\"First Line\"; cout&lt;&lt;endl; cout&lt;&lt;\"Second Line\"; \n\n\n\n\t\n \n\n\n\t\u4eca\u540e\u5c31\u4e0d\u518d\u91cd\u590d\u63d0\u9192\u5fc5\u987b\u6ce8\u610f\u8f93\u51fa\u7684\u5927\u5c0f\u5199\u53ca\u82f1\u6587\u5b57\u7b26\uff0c\u8f93\u51fa\u5185\u5bb9\u4e2d\u8be5\u6709\u7684\u7a7a\u683c\u4ee5\u53ca\u8f93\u51fa\u6bcf\u884c\u9996\u5c3e\u4e0d\u8be5\u6709\u7a7a\u683c\u3002\n\n\n\t\n\n\n\n\t\n \n"
            },
            "input": {},
            "output": {},
            "sample_input": {},
            "sample_output": {},
            "test_input": {
                "text": "0"
            },
            "test_output": {
                "text": "Hello World!\nI'm a C++ program."
            },
            "hint": {},
            "source": {
                "text": "C++\u57fa\u7840\u6559\u7a0b-\u7a0b\u5e8f\u7ed3\u6784"
            },
            "solution": [
                {
                    "text": "#include\nint main()\n{\n\tprintf(\"Hello World!\\n\");\n\tprintf(\"I'm a C++ program.\\n\");\n}",
                    "@language": "C"
                },
                {
                    "text": "#include\n\nusing namespace std;\nint main()\n{\n  cout<<\"Hello World!\"<<endl<<\"I'm a C++ program.\";\n  //system(\"pause\");\n  return 0;\n   \n\n\n}",
                    "@language": "C++"
                },
                {
                    "text": "begin\nwriteln('Hello World!');\nwriteln('I''m a C++ program.')\nend.",
                    "@language": "Pascal"
                }
            ]
        },
        {
            "id": "00000150",
            "title": {
                "text": "\u6574\u578b\u53d8\u91cf\u6570\u503c\u8303\u56f4\u7ec3\u4e60"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "128",
                "@unit": "mb"
            },
            "description": {
                "text": "\n\t\u8bf7\u6309\u4ee5\u4e0b\u8981\u6c42\u7f16\u7a0b\uff0c\u4f53\u4f1a\u6574\u578b\u53d8\u91cf\u80fd\u5b58\u653e\u6570\u636e\u7684\u5927\u5c0f\u8303\u56f4 \n\n\n\t\n\t\t\n\t\t\t\n\t\t\t\t\n\t\t\t\t\t&nbsp;\u5b9a\u4e49a b c d e f g \u4e03\u4e2a\u6574\u5f62\u53d8\u91cf\u3002\uff08int\u7c7b\u578b\uff09 \n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\t\u5c06\u5e38\u65701234567890\u4fdd\u5b58\u5230\u53d8\u91cfa \n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\t\u5c06\u5e38\u65702147483646\u4fdd\u5b58\u5230\u53d8\u91cfb \n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\t\u8ba1\u7b97b+1\u5e76\u5c06\u7ed3\u679c\u4fdd\u5b58\u5230\u53d8\u91cfc \n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\t\u8ba1\u7b97c+1\u5e76\u5c06\u7ed3\u679c\u4fdd\u5b58\u5230\u53d8\u91cfd \n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\t\u5c06\u5e38\u6570-2147483647\u4fdd\u5b58\u5230\u53d8\u91cfe \n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\t\u8ba1\u7b97e-1\u5e76\u5c06\u7ed3\u679c\u4fdd\u5b58\u5230\u53d8\u91cff \n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\t\u8ba1\u7b97f-1\u5e76\u5c06\u7ed3\u679c\u4fdd\u5b58\u5230\u53d8\u91cfg \n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\t\u8f93\u51fa\"a=\"\u4ee5\u53ca\u53d8\u91cfa\u7684\u503c \n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\t\u8f93\u51fa\"b=\"\u4ee5\u53ca\u53d8\u91cfb\u7684\u503c \n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\t\u8f93\u51fa\"c=\"\u4ee5\u53ca\u53d8\u91cfc\u7684\u503c \n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\t\u8f93\u51fa\"d=\"\u4ee5\u53ca\u53d8\u91cfd\u7684\u503c \n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\t\u8f93\u51fa\"e=\"\u4ee5\u53ca\u53d8\u91cfe\u7684\u503c \n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\t\u8f93\u51fa\"f=\"\u4ee5\u53ca\u53d8\u91cff\u7684\u503c \n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\t\u8f93\u51fa\"g=\"\u4ee5\u53ca\u53d8\u91cfg\u7684\u503c \n\t\t\t\t\n\t\t\t\n\t\t\n\t\n\n\n\t&nbsp; \n\n\n\t\u63d0\u793a\uff1a\u90e8\u5206\u6837\u4f8b\u8f93\u51fa\na=1234567890\nb=2147483646 \n\n\n\t&nbsp;\n\n\n\t\u547d\u4ee4 k=5+j;&nbsp; \u8868\u793a\u8ba1\u7b975+\u53d8\u91cfj\u7684\u503c\uff0c\u5e76\u5c06\u8ba1\u7b97\u7ed3\u679c\u4fdd\u5b58\u5230\u53d8\u91cfk \n\n\n\t\u547d\u4ee4 cout&lt;&lt;\"k=\"&lt;&lt;k&lt;&lt;endl; \u5c06\u8f93\u51fa k=\u4ee5\u53ca\u53d8\u91cfk\u7684\u503c \n\n\n\tint\u7c7b\u578b\u7684\u53d8\u91cf\u53ea\u80fd\u5b58\u653e-2147483648\u52302147483647\u4e4b\u95f4\u7684\u6574\u6570\uff0c \n\n\n\t\u5927\u4e8e2147483647\u7684\u6570\u5b58\u5165int\u7c7b\u578b\u53d8\u91cf\u5c06\u51fa\u73b0\u6ea2\u51fa \n\n\n\t\u5c0f\u4e8e--2147483648\u7684\u6570\u5b58\u5165int\u7c7b\u578b\u53d8\u91cf\u5c06\u51fa\u73b0\u6ea2\u51fa \n\n\n\t\u8bf7\u89c2\u5bdf\u6570\u636e\u6ea2\u51fa\u540e\u7684\u6570\u503c\u5927\u5c0f\uff08\u53d8\u91cfd\uff0c\u53d8\u91cfg\u7684\u503c\uff09 \n\n\n\t&nbsp; \n"
            },
            "input": {},
            "output": {},
            "sample_input": {},
            "sample_output": {},
            "test_input": {
                "text": "0"
            },
            "test_output": {
                "text": "a=1234567890\nb=2147483646\nc=2147483647\nd=-2147483648\ne=-2147483647\nf=-2147483648\ng=2147483647"
            },
            "hint": {},
            "source": {
                "text": "C++\u57fa\u7840\u6559\u7a0b-\u53d8\u91cf\u548c\u6570\u636e\u7c7b\u578b"
            },
            "solution": {
                "text": "#include\nusing namespace std;\nint a,b,c,d,e,f,g;\nint main()\n{\n    a=1234567890;\n    b=2147483646;\n    c=b+1;\n    d=c+1;\n    e=-2147483647;\n    f=e-1;\n    g=f-1;\n    cout<<\"a=\"<<a<<endl;\n    cout<<\"b=\"<<b<<endl;\n    cout<<\"c=\"<<c<<endl;\n    cout<<\"d=\"<<d<<endl;\n    cout<<\"e=\"<<e<<endl;\n    cout<<\"f=\"<<f<<endl;\n    cout<<\"g=\"<<g<<endl;\n    return 0;\n}",
                "@language": "C++"
            }
        },
        {
            "id": "00000151",
            "title": {
                "text": "\u53cc\u7cbe\u5ea6\u5b9e\u6570\u7684\u6709\u6548\u6570\u4f4d\u548c\u7cbe\u5ea6\u8bef\u5dee\u5b9e\u9a8c"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "128",
                "@unit": "mb"
            },
            "description": {
                "text": "\n\t\u4f53\u9a8c\u53cc\u7cbe\u5ea6\u578b\u53d8\u91cf\u80fd\u5b58\u653e\u542b\u5c0f\u6570\u7684\u5b9e\u6570\u3001\u5b58\u653e\u5b9e\u6570\u65f6\u4f1a\u51fa\u73b0\u8bef\u5dee\u3001\u867d\u7136\u80fd\u8868\u793a\u5f88\u5927\u7684\u6570\u4f46\u6709\u771f\u6b63\u51c6\u786e\u7684\u6709\u6548\u6570\u4f4d\u662f\u6709\u9650\u7684\n\n\n\t\u6309\u4ee5\u4e0b\u8981\u6c42\u7f16\u7a0b\n\n\n\t\n\t\t\n\t\t\t\n\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\t&nbsp;\u5b9a\u4e49d1 d2 d3 d4&nbsp;\u56db\u4e2a\u53cc\u7cbe\u5ea6\u578b\u53d8\u91cf\u3002\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\t&nbsp;\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\t\u5c06\u5e38\u657043211234\u4fdd\u5b58\u5230\u53d8\u91cfd1\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\t\u8ba1\u7b97d1*d1*d1\u5e76\u5c06\u7ed3\u679c\u4fdd\u5b58\u5230\u53d8\u91cfd2\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\t\u8ba1\u7b971.0/11\u5e76\u5c06\u7ed3\u679c\u4fdd\u5b58\u5230\u53d8\u91cfd3\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\t\u5c06\u5e38\u65701.9\u4fdd\u5b58\u5230\u53d8\u91cfd4\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\t&nbsp;\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\t\u8f93\u51fa\"d1=\"\u4ee5\u53ca\u53d8\u91cfd1\u7684\u503c\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\t\u8f93\u51fa\"d1*d1*d1=\"\u4ee5\u53ca\u53d8\u91cfd2\u7684\u503c\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\t\u8f93\u51fa\"1.0/11=\"\u4ee5\u53ca\u53d8\u91cfd3\u7684\u503c\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\t\u8f93\u51fa\"1.9=\"\u4ee5\u53ca\u53d8\u91cfd4\u7684\u503c\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\t&nbsp;\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\t\u8bbe\u7f6e\u8f93\u51fa\u4f4d\u6570\u4e3a25\u4f4d\uff08cout.precision(25);\uff09\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\t\u8f93\u51fa\"d1=\"\u4ee5\u53ca\u53d8\u91cfd1\u7684\u503c\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\t\u8f93\u51fa\"d1*d1*d1=\"\u4ee5\u53ca\u53d8\u91cfd2\u7684\u503c\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\t\u8f93\u51fa\"1.0/11=\"\u4ee5\u53ca\u53d8\u91cfd3\u7684\u503c\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\t\u8f93\u51fa\"1.9=\"\u4ee5\u53ca\u53d8\u91cfd4\u7684\u503c\n\t\t\t\t\t\n\t\t\t\t\n\t\t\t\n\t\t\n\t\n\n\n\t&nbsp;\u90e8\u5206\u6837\u4f8b\u8f93\u51fa\nd1=4.32112e+07\nd1*d1*d1=8.06845e+22 \n\n\n\t&nbsp;\n\n\n\t\u63d0\u793a\uff1a\n\n\n\t\u7ed3\u679c\u51fa\u73b0\u7c7b\u4f3c 1.23e+05 \u8868\u793a 1.23*105 \u5373\u7b49\u4e8e 123000\n\n\n\t\u6ce8\u610f\uff1a43211234\u7684\u7acb\u65b9\u5e94\u8be5\u662f80684480377774939360904\uff0c\u89c2\u5bdf\u53cc\u7cbe\u5ea6\u6570\u5728\u7b2c\u51e0\u4f4d\u5f00\u59cb\u51fa\u73b0\u8bef\u5dee\u3002\uff08\u8bef\u5dee\u662f\u6b63\u5e38\u7684\uff09\n\n\n\t\u5bf9\u6bd4 1 / 11 \u4e0e 1.0 / 11\u7ed3\u679c\u7684\u4e0d\u540c\u30021 / 11\u662f\u6574\u9664\u7ed3\u679c\u4e3a\u6574\u6570\u90e8\u5206\uff0c1.0 / 11\u662f\u5b9e\u6570\u9664\u7ed3\u679c\u4e3a\u5b9e\u6570\n\n\n\t\u89c2\u5bdf1.9\u4fdd\u5b58\u5230\u53cc\u7cbe\u5ea6\u53d8\u91cf\u7684\u7cbe\u5ea6\u8bef\u5dee\u3002\n\n\n\t\u6570\u4e00\u6570\uff0c\u53cc\u7cbe\u5ea6\u7c7b\u578b\u7684\u6709\u6548\u6570\u4f4d\u662f\u51e0\u4f4d\uff1f\u548c\u8bb2\u4e49\u4e0d\u592a\u4e00\u6837\n\n\n\t&nbsp;\n"
            },
            "input": {},
            "output": {},
            "sample_input": {},
            "sample_output": {},
            "test_input": {
                "text": "0"
            },
            "test_output": {
                "text": "d1=4.32112e+07\nd1*d1*d1=8.06845e+22\n1.0/11=0.0909091\n1.9=1.9\nd1=43211234\nd1*d1*d1=80684480377774931968000\n1.0/11=0.09090909090909091161414324\n1.9=1.899999999999999911182158"
            },
            "hint": {},
            "source": {
                "text": "C++\u57fa\u7840\u6559\u7a0b-\u53d8\u91cf\u548c\u6570\u636e\u7c7b\u578b"
            },
            "solution": {
                "text": "#include \n// #include \n\nusing namespace std;\nint main()\n{  \n     double d1,d2,d3,d4,d5;\n     d1=43211234;\n     d2=d1*d1*d1;\n     d3=1.0/11 ;\n     d4=1.9;\n\n     cout<<\"d1=\"<<d1<<endl;\n     cout<<\"d1*d1*d1=\"<<d2<<endl;\n     cout<<\"1.0/11=\"<<d3<<endl;\n     cout<<\"1.9=\"<<d4<<endl;\n          \n     cout.precision(25); \n     cout<<\"d1=\"<<d1<<endl;\n     cout<<\"d1*d1*d1=\"<<d2<<endl;\n     cout<<\"1.0/11=\"<<d3<<endl;\n     cout<<\"1.9=\"<<d4<<endl;\n         \n//     system(\"pause\");\n     return 0; \n}",
                "@language": "C++"
            }
        },
        {
            "id": "00000152",
            "title": {
                "text": "\u5b57\u7b26\u578b\u6570\u636e\u4e0eASCII\u7801\u5b9e\u9a8c"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "128",
                "@unit": "mb"
            },
            "description": {
                "text": "\n\t\u4f53\u9a8c\u5b57\u7b26\u578b\u6570\u636e\u4ee5\u53caASCII\u7801 \n\n\n\t\u8bf7\u6839\u636e\u4ee5\u4e0b\u8981\u6c42\u7f16\u7a0b \n\n\n\t\n\t\t\n\t\t\t\n\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\t\u5b9a\u4e49 c1 c2 c3 c4 c5 \u4e94\u4e2a\u5b57\u7b26\u578b\u53d8\u91cf \n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\t\u5c06\u5927\u5199\u7b26\u201cZ\u201d\u4fdd\u5b58\u5230\u53d8\u91cfc1 \n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\t\u5c06\u6570\u503c65\u4fdd\u5b58\u5230\u53d8\u91cfc2 \n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\t\u8ba1\u7b97c2+1\u7684\u503c\u5e76\u4fdd\u5b58\u5230\u53d8\u91cfc3 \n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\t\u5c06\u6570\u503c97\u4fdd\u5b58\u5230\u53d8\u91cfc4 \n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\t\u5c06\u6570\u503c48\u4fdd\u5b58\u5230\u53d8\u91cfc5 \n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\t\u4e0d\u6362\u884c\u8fde\u7eed\u8f93\u51fac1\uff0cc2\uff0cc3\uff0cc4\uff0cc5\u53d8\u91cf\u7684\u503c \n\t\t\t\t\t\n\t\t\t\t\n\t\t\t\n\t\t\n\t\n\n\n\t\u90e8\u5206\u6837\u4f8b\u8f93\u51fa \n\n\n\tZAB \n\n\n\t\u63d0\u793a\uff1a \n\n\n\t\u5b57\u7b26\u5e38\u91cf\u5fc5\u987b\u7528\u4e00\u5bf9\u82f1\u6587\u5355\u5f15\u53f7\u62ec\u8d77\u6765\u3002\u4f8b\u5982 a='i'; b='J';\u7b49 \n\n\n\t\u601d\u8003\uff1a\u5927\u5199\u5b57\u7b26A\u7684\u7f16\u7801\u662f\u591a\u5c11\uff1f\u5c0f\u5199\u5b57\u7b26a\u7684\u7f16\u7801\u662f\u591a\u5c11\uff1f\u5927\u5199\u7f16\u53f7\u5728\u524d\u8fd8\u662f\u5c0f\u5199\u7f16\u53f7\u5728\u524d\uff1f\u6570\u5b571\u7684\u7f16\u7801\u662f\u591a\u5c11\uff1f \n\n\n\t\u5b57\u7b26\u578b\u53d8\u91cf\u80fd\u5b58\u653e\u591a\u4e2a\u5b57\u7b26\u5417\uff1f\u4f8b\u5982&nbsp;c1='abc';&nbsp; \n"
            },
            "input": {},
            "output": {},
            "sample_input": {},
            "sample_output": {},
            "test_input": {
                "text": "0"
            },
            "test_output": {
                "text": "ZABa0"
            },
            "hint": {
                "text": "\n\t&nbsp;\n"
            },
            "source": {
                "text": "C++\u57fa\u7840\u6559\u7a0b-\u53d8\u91cf\u548c\u6570\u636e\u7c7b\u578b"
            },
            "solution": {
                "text": "#include \nusing namespace std;\n\nint main()\n{\n    char c1,c2,c3,c4,c5;\n    c1='Z'; \n    c2=65;\n    c3=c2+1;\n    c4=97;\n    c5=48;\n    \n    cout<<c1<<c2<<c3<<c4<<c5;\n //   system(\"pause\");\n    return 0;   \n    \n}",
                "@language": "C++"
            }
        },
        {
            "id": "00000153",
            "title": {
                "text": "\u67e5\u627e\u5143\u7d20(\u7ebf\u6027\u8868)"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "128",
                "@unit": "mb"
            },
            "description": {
                "text": "\uff08\u7ebf\u6027\u8868\uff09\u8bd5\u7f16\u5199\u4e00\u4e2a\u7b97\u6cd5\uff0c\u5728\u5e26\u8868\u5934\u7ed3\u70b9\u7684\u5355\u94fe\u8868\u4e2d\u5bfb\u627e\u4e00\u4e2a\u6570\u3002\n\u82e5\u627e\u5230\uff0c\u5219\u51fd\u6570\u8fd4\u56de\u8be5\u6570\u5728\u5217\u8868\u4e2d\u7684\u5730\u5740(i [1~n])\uff1b\n\u82e5\u627e\u4e0d\u5230\uff0c\u5219\u51fd\u6570\u8fd4\u56de0\u3002"
            },
            "input": {
                "text": "\u7b2c\u4e00\u884c \u539f\u59cb\u6570\u5217\uff1a\n2 3 4 5 6 7 8 9\n\u7b2c\u4e8c\u884c \u9700\u8981\u627e\u7684\u6570\uff1a\n1"
            },
            "output": {
                "text": "\u627e\u5230\u5219\u8f93\u51fa\u6570\u5728\u6570\u5217\u4e2d\u7684\u4f4d\u7f6e\uff0c\u7b2c\u4e00\u4e2a\u4f4d\u7f6e\u8f93\u51fa1\u4f9d\u6b21\u7c7b\u63a8\n\u82e5\u6ca1\u6709\u627e\u5230\u8f93\u51fa0"
            },
            "sample_input": {
                "text": "2 3 4 5 6 7 8 9\n5"
            },
            "sample_output": {
                "text": "4"
            },
            "hint": {},
            "source": {},
            "solution": [
                {
                    "text": "#include\n#include\n#define ElemType int\ntypedef struct LNode{\n\tElemType data;\n\tstruct LNode *next;\n}LNode,*LinkList;\nvoid initial(LinkList L){\n\tchar temp;\n\tElemType data;\n\tLNode *p = L;\n\twhile(scanf(\"%d\",&data)!=NULL){\n\t\tLNode *s = (LNode *)malloc(sizeof(LNode));\n\t\ts->data = data;\n\t\tp->next = s;\n\t\tp = p->next;\n\t\ttemp=getchar();\n\t\tif(temp=='\\n'||temp==NULL)\n\t\t\tbreak;\n\t}\n\tp->next = NULL;\n}\n\nint find(LinkList L,ElemType data){\n\tint no = 0;\n\tLNode *p = L->next;\n\twhile(p){\n\t\tno++;\n\t\tif(p->data==data)\n\t\t\tbreak;\n\t\telse\n\t\t\tp=p->next;\n\t}\n\treturn no;\n}\n\nint main(){\n\tElemType data;\n\tLinkList L = (LNode *)malloc(sizeof(LNode));\n\tinitial(L);\n\tscanf(\"%d\",&data);\n\tprintf(\"%d\",find(L,data));\n\treturn 0;\n}",
                    "@language": "C"
                },
                {
                    "text": "#include\n#include\nusing namespace std;\n//\u5b9a\u4e49\u4e00\u4e2a\u94fe\u8868\u8282\u70b9 \n\n\ntypedef struct BNode{\n\tint data;\n\tstruct BNode *next;\n}BNode;\nint Sort(int e,BNode *C);\nint main(){\n\tBNode *s,*r;\n\tBNode *C;\n\tint e;\n\tint a[9];\n\tC=(BNode*)malloc(sizeof(BNode));\n\tC->next=NULL;\n\tr=C;\n\tfor(int i=1;i>a[i];\n\t\ts->data=a[i];\n\t\tr->next=s; \n\t\tr=r->next;\n\t\t\n\t}\n\tr->next=NULL;\n\tcin>>e;\n\tint t=Sort(e,C);\n\tcoutnext=NULL;\n\tr=C;\n\tint i=1;\n\twhile(r->next!=NULL){\n\t\tr=r->next;\n\t\tif(r->data==e){\n\t\t\treturn i;\n\t\t}\n\t\ti++;\n\t} \n}",
                    "@language": "C++"
                },
                {
                    "text": "# coding=utf-8\nlist1 = input().split(\" \")\nnum = input()\nif num not in list1:\n    print(0)\nelse:\n    for i in list1:\n        if i == num:\n            print(list1.index(i) + 1)\n            break",
                    "@language": "Python"
                }
            ]
        },
        {
            "id": "00000154",
            "title": {
                "text": "\u8282\u70b9\u63d2\u5165(\u7ebf\u6027\u8868)"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "128",
                "@unit": "mb"
            },
            "description": {
                "text": "\u6709\u4e00\u4e2a\u6709\u5e8f\u5355\u94fe\u8868\uff08\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff09\uff0c\u8868\u5934\u6307\u9488\u4e3ahead\uff0c\u7f16\u5199\u4e00\u4e2a\u51fd\u6570\u5411\u8be5\u5355\u94fe\u8868\u4e2d\u63d2\u5165\u4e00\u4e2a\u5143\u7d20\u4e3ax\u7684\u7ed3\u70b9\uff0c\u4f7f\u63d2\u5165\u540e\u8be5\u94fe\u8868\u4ecd\u7136\u6709\u5e8f\u3002\n\n"
            },
            "input": {
                "text": "\u8f93\u5165\u957f\u5ea6n\uff1a5\n\u8f93\u5165\u6570\u636e\uff1a1 6 8 9 10\n\u8f93\u5165\u63d2\u5165\u6570\u636e\uff1a7"
            },
            "output": {
                "text": "\u8f93\u51fa\uff1a1 6 7 8 9 10"
            },
            "sample_input": {
                "text": "4\n1 2 3 4\n6"
            },
            "sample_output": {
                "text": "1 2 3 4 6"
            },
            "hint": {},
            "source": {},
            "solution": [
                {
                    "text": "#include\n#include\n#define ElemType int\ntypedef struct LNode{\n\tElemType data;\n\tstruct LNode *next;\n}LNode,*LinkList;\nvoid initial(LinkList L){\n\tint n;\n\tElemType data;\n\tLNode *p = L;\n\tscanf(\"%d\",&n);\n\tfor(int i=0;idata = data;\n\t\tp->next = s;\n\t\tp = p->next;\n\t}\n\tp->next = NULL;\n}\nvoid insert(LinkList L,ElemType elem){\n\tLNode *p = L;\n\twhile(p->next){\n\t\tif(p->next->data>=elem){\n\t\t\tLNode *s = (LNode *)malloc(sizeof(LNode));\n\t\t\ts->data = elem;\n\t\t\ts->next = p->next;\n\t\t\tp->next = s;\n\t\t\treturn;\n\t\t}\n\t\tp = p->next;\n\t}\n\tLNode *s = (LNode *)malloc(sizeof(LNode));\n\ts->data = elem;\n\ts->next = p->next;\n\tp->next = s;\n}\n\nvoid print(LinkList L){\nint i=0;\n\tLNode *p;\n\tp = L->next;\n\twhile(p){\nif(i++)\nprintf(\" \");\n\t\tprintf(\"%d\",p->data);\n\t\tp = p->next;\n\t}\n}\nint main(){\n\tLinkList L = (LNode *)malloc(sizeof(LNode));\n\tElemType data;\n\tinitial(L);\n\tscanf(\"%d\",&data);\n\tinsert(L,data);\n\tprint(L);\n\treturn 0;\n}",
                    "@language": "C"
                },
                {
                    "text": "#include\n\nusing namespace std;\n\nstruct Node\n{\n\tint data;\n\tNode* pNext;\n};\n\nstruct LinkList\n{\n\tNode* pHead;\n\tNode* pTail;\n};\n\nvoid createList(LinkList *list)\n{\n\tlist->pHead=(Node*)malloc(sizeof(Node));\n\tlist->pTail=list->pHead;\n\tlist->pTail->pNext=NULL;\n\t\n\tint n;\n\tcin>>n;\n\twhile(n--)\n\t{\n\t\tint val;\n\t\tcin>>val;\n\t\tNode* pNewNode;\n\t\tpNewNode=(Node*)malloc(sizeof(Node));\n\t\tpNewNode->data=val;\n\t\tlist->pTail->pNext=pNewNode;\n\t\tpNewNode->pNext=NULL;\n\t\tlist->pTail=pNewNode;\n\t}\n}\n\nvoid traverseList(LinkList *list)\n{\n\tNode* p=list->pHead->pNext;\n\tfor(;p!=NULL;p=p->pNext)\n\t\tcoutdata>val;\n\t\n\tfor(Node* p=theList.pHead->pNext;p!=NULL;p=p->pNext)\n\t{\n\t\tif(val==(p->data))\n\t\t{\n\t\t\tNode* q;\n\t\t\tq=(Node*)malloc(sizeof(Node));\n\t\t\tq->data=val;\n\t\t\tq->pNext=p->pNext;\n\t\t\tp->pNext=q;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tNode* p=theList.pHead->pNext;\n\tfor(;(p->pNext)!=NULL;p=p->pNext)\n\t{\n\t\tif(p->datapNext->data)>val)\n\t\t{\n\t\t\tNode* q;\n\t\t\tq=(Node*)malloc(sizeof(Node));\n\t\t\tq->data=val;\n\t\t\tq->pNext=p->pNext;\n\t\t\tp->pNext=q;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tif(valpNext->data))\n\t{\n\t\tNode* q;\n\t\tq=(Node*)malloc(sizeof(Node));\n\t\tq->data=val;\n\t\tq->pNext=theList.pHead->pNext;\n\t\ttheList.pHead->pNext=q;\n\t}\n\t\n\tif(val>(theList.pTail->data))\n\t{\n\t\n\t\tNode* q;\n\t\tq=(Node*)malloc(sizeof(Node));\n\t\tq->data=val;\n\t\ttheList.pTail->pNext=q;\n\t\tq->pNext=NULL;\n\t\ttheList.pTail=q;\n\n\t}\n\n\t\n\n\ttraverseList(&theList);\n\t//system(\"pause\");\n}",
                    "@language": "C++"
                }
            ]
        },
        {
            "id": "00000155",
            "title": {
                "text": "\u5e38\u6570\u4e0e\u5e38\u91cf\u5b9e\u9a8c"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "128",
                "@unit": "mb"
            },
            "description": {
                "text": "\n\t\n\n\n\t\n\n\n\t\u4f53\u9a8c\u5e38\u91cf\u7684\u5b9a\u4e49\u65b9\u6cd5\u4ee5\u53ca\u7279\u6b8a\u5b57\u7b26\u7684\u4f7f\u7528\n\n\n\t\u8bf7\u6839\u636e\u4ee5\u4e0b\u8981\u6c42\u7f16\u7a0b&nbsp;&nbsp;\n\t\n\t\t\n\t\t\t\n\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\t\u7528define\u547d\u4ee4\u5b9a\u4e49\u5e38\u91cfoct1\uff0c\u5e76\u8bbe\u7f6e\u4e3a\u516b\u8fdb\u5236\u657077 \n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\t\u7528const\u547d\u4ee4\u5b9a\u4e49\u6574\u578b\u5e38\u91cfhex1\uff0c\u5e76\u8bbe\u7f6e\u4e3a\u5341\u516d\u8fdb\u5236\u6570FF \n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\t\u7528const\u547d\u4ee4\u5b9a\u4e49\u5b57\u7b26\u4e32\u5e38\u91cfstr1\uff0c\u5e76\u8bbe\u7f6e\u4e3a\u201cWelcome\u201d \n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\t\u7528const\u547d\u4ee4\u5b9a\u4e49\u5b57\u7b26\u5e38\u91cfdq1\uff0c\u5e76\u8bbe\u7f6e\u4e3a\u4e00\u4e2a\u53cc\u5f15\u53f7\u3002\uff08\u53c2\u8003\u7279\u6b8a\u5b57\u7b26\uff09 \n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\t\u7528define\u547d\u4ee4\u5b9a\u4e49\u5b57\u7b26\u5e38\u91cfnl1\uff0c\u5e76\u8bbe\u7f6e\u4e3a\u4e00\u4e2a\u6362\u884c\u7b26\u3002\uff08\u53c2\u8003\u7279\u6b8a\u5b57\u7b26\uff09 \n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\t\u7528define\u547d\u4ee4\u5b9a\u4e49\u5b57\u7b26\u4e32\u5e38\u91cfstr2\uff0c\u5e76\u8bbe\u7f6e\u4e3a\u201cGreat!\u201d \n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\t\u7528const\u547d\u4ee4\u5b9a\u4e49\u5e38\u91cfpi\uff0c\u5e76\u8bbe\u7f6e\u4e3a3.14159 \n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\t\u8f93\u51fa\u5e38\u91cfoct1\u7684\u503c\u5e76\u6362\u884c \n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\t\u8f93\u51fa\u5e38\u91cfhex1\u7684\u503c\u5e76\u6362\u884c\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\t\u8f93\u51fa\u5e38\u91cfstr1\u7684\u503c\u5e76\u6362\u884c \n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\t\u8f93\u51fa\u5e38\u91cfdq1\u7684\u503c\u5e76\u6362\u884c\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\t\u8f93\u51fa\u5e38\u91cfnl1\u7684\u503c\u5e76\u6362\u884c\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\t\u8f93\u51fa\u5e38\u91cfstr2\u7684\u503c\u5e76\u6362\u884c\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\t\u8f93\u51fa\u5e38\u91cfpi*100\u7684\u503c\u5e76\u6362\u884c \n\t\t\t\t\t\n\t\t\t\t\n\t\t\t\n\t\t\n\t\n\n\n\t\u90e8\u5206\u6837\u4f8b\u8f93\u51fa \n\n\n\t63 \n\n\n\t&nbsp;\n\n\n\t\u63d0\u793a\uff1a \n\n\n\t#define \u4e0d\u7528\u52a0\u7c7b\u578b\u8bf4\u660e\uff0c\u4e0d\u7528\u52a0\u7b49\u53f7\uff0c\u6700\u540e\u9762\u4e0d\u7528\u52a0\u5206\u53f7 \n\n\n\tconst \u8981\u52a0\u7c7b\u578b\u8bf4\u660e\uff0c\u8981\u7528\u7b49\u53f7\uff0c\u540e\u9762\u8981\u52a0\u82f1\u6587\u5206\u53f7 \n\n\n\t\u7279\u6b8a\u5b57\u7b26r '\\t'\u7b49\uff0c\u662f\u7528\u82f1\u6587\u5355\u5f15\u53f7\u62ec\u8d77\u6765&nbsp; \n\n\n\t\u5b57\u7b26\u4e32\u7528\u82f1\u6587\u53cc\u5f15\u53f7\u62ec\u8d77\u6765\uff0c \u5b57\u7b26\u4e32\u7684\u7c7b\u578b\u8bf4\u660e\u4e3a string\n\n\n\t\u5b57\u7b26\u7528\u82f1\u6587\u5355\u5f15\u53f7\u62ec\u8d77\u6765\u3002 \n"
            },
            "input": {},
            "output": {},
            "sample_input": {},
            "sample_output": {},
            "test_input": {
                "text": "0"
            },
            "test_output": {
                "text": "63\n255\nWelcome\n\"\n\n\nGreat!\n314.159"
            },
            "hint": {},
            "source": {
                "text": "C++\u57fa\u7840\u6559\u7a0b-\u5e38\u91cf"
            },
            "solution": {
                "text": "#include\nusing namespace std;\nint hex1,oct1;\nfloat pi;\nchar dp1,nl1;\nstring str1,str2;\nint main()\n{\n    oct1=63;\n    hex1=255;\n    str1='Welcome';\n    dp1='\"';\n    str2='Great!';\n    pi=3.1415926;\n    cout<<oct1<<endl;\n    cout<<hex1<<endl;\n    cout<<\"Welcome\"<<endl;\n    cout<<dp1<<endl;\n    cout<<endl<<endl;\n    cout<<\"Great!\"<<endl;\n    cout<<pi*100<<endl;\n    return 0;\n}\n\n\n//\u7528define\u547d\u4ee4\u5b9a\u4e49\u5e38\u91cfoct1\uff0c\u5e76\u8bbe\u7f6e\u4e3a\u516b\u8fdb\u5236\u657077\n//\u7528const\u547d\u4ee4\u5b9a\u4e49\u6574\u578b\u5e38\u91cfhex1\uff0c\u5e76\u8bbe\u7f6e\u4e3a\u5341\u516d\u8fdb\u5236\u6570FF\n//\u7528const\u547d\u4ee4\u5b9a\u4e49\u5b57\u7b26\u4e32\u5e38\u91cfstr1\uff0c\u5e76\u8bbe\u7f6e\u4e3a\u201cWelcome\u201d\n//\u7528const\u547d\u4ee4\u5b9a\u4e49\u5b57\u7b26\u5e38\u91cfdq1\uff0c\u5e76\u8bbe\u7f6e\u4e3a\u4e00\u4e2a\u53cc\u5f15\u53f7\u3002\uff08\u53c2\u8003\u7279\u6b8a\u5b57\u7b26\uff09\n//\u7528define\u547d\u4ee4\u5b9a\u4e49\u5b57\u7b26\u5e38\u91cfnl1\uff0c\u5e76\u8bbe\u7f6e\u4e3a\u4e00\u4e2a\u56de\u8f66\u7b26\u3002\uff08\u53c2\u8003\u7279\u6b8a\u5b57\u7b26\uff09\n//\u7528define\u547d\u4ee4\u5b9a\u4e49\u5b57\u7b26\u4e32\u5e38\u91cfstr2\uff0c\u5e76\u8bbe\u7f6e\u4e3a\u201cGreat!\u201d\n//\u7528const\u547d\u4ee4\u5b9a\u4e49\u5e38\u91cfpi\uff0c\u5e76\u8bbe\u7f6e\u4e3a3.14159",
                "@language": "C++"
            }
        },
        {
            "id": "00000156",
            "title": {
                "text": "\u94fe\u8868\u67e5\u627e(\u7ebf\u6027\u8868)"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "128",
                "@unit": "mb"
            },
            "description": {
                "text": "\n&nbsp;\u7ebf\u6027\u8868(a1,a2,a3,&hellip;,an)\u4e2d\u5143\u7d20\u9012\u589e\u6709\u5e8f\u4e14\u6309\u987a\u5e8f\u5b58\u50a8\u4e8e\u8ba1\u7b97\u673a\u5185\u3002\u8981\u6c42\u8bbe\u8ba1\u4e00\u7b97\u6cd5\u5b8c\u6210\uff1a\n\uff081\uff09 \u7528\u6700\u5c11\u65f6\u95f4\u5728\u8868\u4e2d\u67e5\u627e\u6570\u503c\u4e3ax\u7684\u5143\u7d20\u3002\n\uff082\uff09 \u82e5\u627e\u5230\u5c06\u5176\u4e0e\u540e\u7ee7\u5143\u7d20\u4f4d\u7f6e\u76f8\u4ea4\u6362\u3002\n\uff083\uff09 \u82e5\u627e\u4e0d\u5230\u5c06\u5176\u63d2\u5165\u8868\u4e2d\u5e76\u4f7f\u8868\u4e2d\u5143\u7d20\u4ecd\u9012\u589e\u6709\u5e8f\u3002"
            },
            "input": {
                "text": "\u8f93\u5165\uff1ax=3\n\u8f93\u5165\u957f\u5ea6\uff1a9\n\u8f93\u5165\u6570\u636e\uff1a2 3 5 7 12 15 17 23 45"
            },
            "output": {
                "text": "\u76f8\u540c\u5143\u7d20\u4e3a\uff1a3\n\u4ea4\u6362\u540e\u7684\u94fe\u8868\u4e3a\uff1a2 5 3 7 12 15 17 23 45"
            },
            "sample_input": {
                "text": "4\n9\n2 3 5 7 12 15 17 23 45"
            },
            "sample_output": {
                "text": "no\n2 3 4 5 7 12 15 17 23 45"
            },
            "hint": {},
            "source": {
                "text": "\u7b97\u6cd5\u7b14\u8bb0"
            },
            "solution": [
                {
                    "text": "#include\n#include\n#include\ntypedef struct Node{\n\tint n;\n\tstruct Node * next;\n}node,*LN;\nvoid print(LN list){\n\twhile(list){\n\t\tprintf(\"%d \",list->n);\n\t\tlist=list->next;\n\t}\n}\nint main(){\n\tLN list,p,t,q;\n\tint x,n;\n\tscanf(\"%d%d\",&x,&n);\n\tlist=(LN)malloc(sizeof(node));\n\tscanf(\"%d\",&list->n);\n\tp=list;\n\twhile(n>1){\n\t\tt=(LN)malloc(sizeof(node));\n\t\tscanf(\"%d\",&t->n);\n\t\tp->next=t;\n\t\tp=t;\n\t\tn--;\n\t}\n\tp->next=NULL;\n\tp=list;\n\tif(p==NULL || xn){\n\t\tprintf(\"no\\n\");\n\t\tprintf(\"%d \",x);\n\t\tprint(list);\n\t\treturn 0;\n\t}\n\tif(p->n==x){\n\t\tt=p->next;\n\t\tlist=t;\n\t\tp->next=t->next;\n\t\tt->next=p;\n\t\tprint(list);\n\t\treturn 0;\n\t}\n\tq=p;\n\twhile(p){\n\t\tif(p->n==x){\n\t\t\tprintf(\"%d\\n\",x);\n\t\t\tt=p->next;\n\t\t\tif(t==NULL)break;\n\t\t\tq->next=t;\n\t\t\tp->next=t->next;\n\t\t\tt->next=p;\n\t\t\tbreak;\n\t\t}\n\t\tif(p->n>x){\n\t\t\t/*t=(LN)malloc(sizeof(node));\n\t\t\tt->n=x;\n\t\t\tq->next=t;\n\t\t\tt->next=p;*/\n\t\t\tbreak;\n\t\t}\n\t\tq=p;\n\t\tp=p->next;\n\t\tcontinue;\n\t}\n\tif(p==NULL || p->n!=x){\n\t\tprintf(\"no\\n\");\n\t\tt=(LN)malloc(sizeof(node));\n\t\tt->n=x;\n\t\tq->next=t;\n\t\tt->next=p;\n\t}\n\tprint(list);\n\treturn 0;\n}",
                    "@language": "C"
                },
                {
                    "text": "#include \n#include \nusing namespace std;\nint a[10002];\nint main(){\n\t//freopen(\"cin.txt\",\"r\",stdin);\n   int x;\n   while(scanf(\"%d\",&x)!=EOF){\n     int n,i;\n\t scanf(\"%d\",&n);\n\t for(i=0;i=len;i--)\n\t\t\t  a[i+1]=a[i];\n\t\t   a[len]=x;\n\t\t  for(i=0;i<n+1;i++)\n\t\t  {\n\t\t\t  \n\t\t\t\t  printf(\"%d \",a[i]);\n\t\t  }\n\t\t  printf(\"\\n\");\n\t  }\n   }\n   return 0;\n}",
                    "@language": "C++"
                }
            ]
        },
        {
            "id": "00000157",
            "title": {
                "text": "\u67e5\u627e\u5143\u7d20(\u7ebf\u6027\u8868)"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "128",
                "@unit": "mb"
            },
            "description": {
                "text": "\uff08\u7ebf\u6027\u8868\uff09\u8bd5\u7f16\u5199\u4e00\u4e2a\u7b97\u6cd5\uff0c\u5728\u5e26\u8868\u5934\u7ed3\u70b9\u7684\u5355\u94fe\u8868\u4e2d\u5bfb\u627e\u4e00\u4e2a\u6570\u3002\n\u82e5\u627e\u5230\uff0c\u5219\u51fd\u6570\u8fd4\u56de\u8be5\u6570\u5728\u5217\u8868\u4e2d\u7684\u5730\u5740(i [1~n])\uff1b\n\u82e5\u627e\u4e0d\u5230\uff0c\u5219\u51fd\u6570\u8fd4\u56de0\u3002"
            },
            "input": {
                "text": "\u7b2c\u4e00\u884c \u539f\u59cb\u6570\u5217\uff1a\n2 3 4 5 6 7 8 9\n\u7b2c\u4e8c\u884c \u9700\u8981\u627e\u7684\u6570\uff1a\n1"
            },
            "output": {
                "text": "\u627e\u5230\u5219\u8f93\u51fa\u6570\u5728\u6570\u5217\u4e2d\u7684\u4f4d\u7f6e\uff0c\u7b2c\u4e00\u4e2a\u4f4d\u7f6e\u8f93\u51fa1\u4f9d\u6b21\u7c7b\u63a8\n\u82e5\u6ca1\u6709\u627e\u5230\u8f93\u51fa0"
            },
            "sample_input": {
                "text": "2 3 4 5 6 7 8 9\n5"
            },
            "sample_output": {
                "text": "4"
            },
            "hint": {},
            "source": {},
            "solution": [
                {
                    "text": "#include\nusing namespace std;\nint n,a[15];\nint main(){\n    for(int i=1;i>a[i];\n    cin>>n;\n    for(int i=1;i<=8;i++)\n    {\n        if(a[i]==n)\n        {\n            cout<<i<<endl;\n            return 0;\n        }\n    }\n    cout<<0;\n}",
                    "@language": "C++"
                },
                {
                    "text": "var\n s,n:string;\n a:array[1..10000] of string;\n i,j,k,b,c,f:integer;\n begin\n  readln(s);\n  readln(n); k:=1;b:=0;c:=0;f:=0;\n  i:=length(s);\n  for j:=1 to i do\n  if s[j]=' ' then begin\n                   c:=c+1;\n                   b:=j;\n                   a[c]:=copy(s,k,b-j+1);\n                   k:=j+1;\n                   end;\n                   a[c+1]:=copy(s,k,i-j+2); k:=1;\n while f=0 do\n if a[k]<>n then k:=k+1\n            else     begin\n                     write(k);\n                     f:=1;\n                     end;\n  end.",
                    "@language": "Pascal"
                },
                {
                    "text": "# coding=utf-8\nlst = list(map(int,input().split()))\nn = int(input())\nprint(4)",
                    "@language": "Python"
                }
            ]
        },
        {
            "id": "00000158",
            "title": {
                "text": "\u6570\u5b66\u8fd0\u7b97\u5b9e\u9a8c"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "128",
                "@unit": "mb"
            },
            "description": {
                "text": "\n\t\u6309\u8981\u6c42\u5b8c\u6210\u4ee5\u4e0b\u64cd\u4f5c\uff0c\u8bf7\u6839\u636e\u5b9e\u9645\u786e\u5b9a\u53d8\u91cf\u7684\u7c7b\u578b\u3002\u5b9e\u6570\u4f7f\u7528double\u7c7b\u578b\n\n\n\t\n\t\t\n\t\t\t\n\t\t\t\t\n\t\t\t\t\t&nbsp;\u5c06\u6574\u657017\u4fdd\u5b58\u5230\u53d8\u91cfa\uff0c\u5c06\u6574\u65706\u4fdd\u5b58\u5230\u53d8\u91cfb\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\t\u8ba1\u7b97a\u4e58\u4e8eb\u7684\u503c\u5e76\u4fdd\u5b58\u5230\u53d8\u91cfmul\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\t\u8ba1\u7b97a\u6574\u9664b\u7684\u503c\u5e76\u4fdd\u5b58\u5230\u53d8\u91cfdiv\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\t\u8ba1\u7b97a\u9664\u4ee5b\u7684\u4f59\u6570\u5e76\u4fdd\u5b58\u5230\u53d8\u91cfmod\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\t\u8ba1\u7b97a\u5b9e\u6570\u9664\u4ee5b\u7684\u5b9e\u6570\u7ed3\u679c\u5e76\u4fdd\u5b58\u5230\u53d8\u91cfrdiv \uff08\u63d0\u793a\uff1a1.0*a/b\uff09\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\t\u5c06\u53d8\u91cfb\u9012\u589e10\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\t\u7ee7\u7eed\u5c06\u53d8\u91cfb\u9012\u589e20\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\t\u5c06\u53d8\u91cfa\u9012\u51cf3\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\t\u7ee7\u7eed\u5c06\u53d8\u91cfa\u9012\u51cf5\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\t\u8f93\u51fa\u201ca*b=\u201d\u4ee5\u53ca\u53d8\u91cfmul\u7684\u503c\u5e76\u6362\u884c\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\t\u8f93\u51fa\u201ca/b=\u201d\u4ee5\u53ca\u53d8\u91cfdiv\u7684\u503c\u5e76\u6362\u884c\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\t\u8f93\u51fa\u201ca%b=\u201d\u4ee5\u53ca\u53d8\u91cfmod\u7684\u503c\u5e76\u6362\u884c\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\t\u8f93\u51fa\u201c1.0*a/b=\u201d\u4ee5\u53ca\u53d8\u91cfrdiv\u7684\u503c\u5e76\u6362\u884c\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\t\u8f93\u51fa\u201cb=\u201d\u4ee5\u53ca\u53d8\u91cfb\u7684\u503c\u5e76\u6362\u884c\n\t\t\t\t\n\u8f93\u51fa\u201ca=\u201d\u4ee5\u53ca\u53d8\u91cfa\u7684\u503c\u5e76\u6362\u884c\n\t\t\t\n\t\t\n\t\n\n\n\t&nbsp;\u63d0\u793a\uff1a\n\n\n\t\u6574\u6570\u548c\u6574\u6570\u7684\u7b97\u6570\u8fd0\u7b97\uff0c\u7ed3\u679c\u4e3a\u6574\u6570\n\n\n\t\u5982\u679ca\uff0cb\u662f\u6574\u6570\uff0c\u5219 a/b \u6267\u884c\u6574\u9664\uff0c\u5373\u4fdd\u7559\u5546\u7684\u6574\u6570\u90e8\u5206\n\n\n\t\u5b9e\u6570\u4e0e\u6574\u6570\u7684\u6df7\u5408\u8fd0\u7b97\uff0c\u7ed3\u679c\u4e3a\u5b9e\u6570\n\n\n\t\u5982\u679ca\uff0cb\u662f\u6574\u6570\uff0c\u52191.0 * a / b\u5c31\u662f\u5b9e\u6570\u7ed3\u679c\n\n\n\t\u6ce8\u610f\u4f53\u4f1a\u6c42 \u4f59\u6570\u3001\u6574\u9664\u3001\u5b9e\u6570\u9664\u3001\u9012\u589e\u3001\u9012\u51cf\u3002\n"
            },
            "input": {},
            "output": {},
            "sample_input": {},
            "sample_output": {},
            "test_input": {
                "text": "0"
            },
            "test_output": {
                "text": "a*b=102\na/b=2\na%b=5\n1.0*a/b=2.83333\nb=36\na=9"
            },
            "hint": {},
            "source": {
                "text": "C++\u57fa\u7840\u6559\u7a0b-\u64cd\u4f5c\u7b26/\u8fd0\u7b97\u7b26"
            },
            "solution": {
                "text": "#include\n#include\n#include\n#include\nusing namespace std;\nint a=17,b=6;\nint main(){\n    int mul,div,mod; double rdiv;\n    mul=a*b;\n    div=a/b;\n    mod=a%b;\n    rdiv=1.0*a/b;\n    b=b+10;\n    b=b+20;\n    a=a-3;\n    a=a-5;\n    cout<<\"a*b=\"<<mul<<endl;\n    cout<<\"a/b=\"<<div<<endl;\n    cout<<\"a%b=\"<<mod<<endl;\n    cout<<\"1.0*a/b=\"<<rdiv<<endl;\n    cout<<\"b=\"<<b<<endl;\n    cout<<\"a=\"<<a<<endl;\n    \n    // freopen(\"2465.out\",\"w\",stdout);\n    //printf(\"a*b=%d\\n\",a*b);\n    //printf(\"a/b=%d\\n\",a/b);\n    //printf(\"a%b=%d\\n\",a%b);\n    //printf(\"1.0*a/b=%lf\\n\",1.0*a/b);\n    //printf(\"b=%d\\n\",b+10+20);\n    //printf(\"a=%d\\n\",a-3-5);\n//    system(\"pause\");\n    return 0;\n}",
                "@language": "C++"
            }
        },
        {
            "id": "00000159",
            "title": {
                "text": "\u7ec4\u5408\u8fd0\u7b97\u7b26\uff08\u590d\u5408\u8fd0\u7b97\u7b26\uff09\u5b9e\u9a8c"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "128",
                "@unit": "mb"
            },
            "description": {
                "text": "\n\t\u6309\u4ee5\u4e0b\u8981\u6c42\u7f16\u7a0b\u3002\u8bf7\u4f7f\u7528\u5408\u9002\u7684\u53d8\u91cf\u7c7b\u578b \n\n\n\t\n\t\t\n\t\t\t\n\t\t\t\t\n\t\t\t\t\t\u628a10\u8d4b\u503c\u7ed9\u6574\u578b\u53d8\u91cfa \n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\t\u8f93\u51fa\u201ca: \u201d\u4ee5\u53ca\u53d8\u91cfa\u7684\u503c\u5e76\u6362\u884c \n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\t\u628a\u53d8\u91cfa\u589e\u52a05 \n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\t\u8f93\u51fa\u201ca+5: \u201d\u4ee5\u53ca\u53d8\u91cfa\u7684\u503c\u5e76\u6362\u884c \n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\t\u7528++\u547d\u4ee4\u628a\u53d8\u91cfa\u9012\u589e1 \n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\t\u8f93\u51fa\u201ca++: \u201d\u4ee5\u53ca\u53d8\u91cfa\u7684\u503c\u5e76\u6362\u884c \n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\t\u7528+=\u547d\u4ee4\u628a\u53d8\u91cfa\u9012\u589e5 \n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\t\u8f93\u51fa\u201ca+=5: \u201d\u4ee5\u53ca\u53d8\u91cfa\u7684\u503c\u5e76\u6362\u884c \n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\t&nbsp; \n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\t\u628a50\u8d4b\u503c\u7ed9\u6574\u578b\u53d8\u91cfb \n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\t\u8f93\u51fa\u201cb: \u201d\u4ee5\u53ca\u53d8\u91cfb\u7684\u503c\u5e76\u6362\u884c \n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\t\u5c06\u53d8\u91cfb\u7684\u503c\u51cf\u5c1110 \n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\t\u8f93\u51fa\u201cb-10: \u201d\u4ee5\u53ca\u53d8\u91cfb\u7684\u503c\u5e76\u6362\u884c \n\t\t\t\t\n \n\t\t\t\t\n\t\t\t\t\t\u7528--\u547d\u4ee4\u628a\u53d8\u91cfb\u9012\u51cf1 \n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\t\u8f93\u51fa\u201cb--: \u201d\u4ee5\u53ca\u53d8\u91cfb\u7684\u503c\u5e76\u6362\u884c \n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\t\u7528-=\u547d\u4ee4\u628a\u53d8\u91cfb\u9012\u51cf10 \n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\t\u8f93\u51fa\u201cb-=10: \u201d\u4ee5\u53ca\u53d8\u91cfb\u7684\u503c\u5e76\u6362\u884c \n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\n\t\t\t\n\t\t\n\t\n\n\n\t&nbsp; \u63d0\u793a\uff1a \n\n\n\t\u6ce8\u610f\u4f53\u4f1a ++ -- += -=\u7684\u4f5c\u7528 \n\n\n\t\u6ce8\u610f\u8f93\u51fa\u65f6\u201ca: \u201d \u5192\u53f7\u540e\u9762\u6709\u4e00\u4e2a\u7a7a\u683c \n"
            },
            "input": {},
            "output": {},
            "sample_input": {},
            "sample_output": {},
            "test_input": {
                "text": "0"
            },
            "test_output": {
                "text": "a: 10\na+5: 15\na++: 16\na+=5: 21\nb: 50\nb-10: 40\nb--: 39\nb-=10: 29"
            },
            "hint": {},
            "source": {
                "text": "C++\u57fa\u7840\u6559\u7a0b-\u64cd\u4f5c\u7b26/\u8fd0\u7b97\u7b26"
            },
            "solution": {
                "text": "#include\n#include\n#include\n#include\nusing namespace std;\nint a=10,b=50;\nint main(){\n    int mul,div,mod; double rdiv;\n    cout<<\"a: \"<<a<<endl;\n    a=a+5;\n    cout<<\"a+5: \"<<a<<endl;\n    a++;\n    cout<<\"a++: \"<<a<<endl;\n    a+=5;\n    cout<<\"a+=5: \"<<a<<endl;\n    \n    cout<<\"b: \"<<b<<endl;\n    b=b-10;\n    cout<<\"b-10: \"<<b<<endl;\n    b--;\n    cout<<\"b--: \"<<b<<endl;\n    b-=10;\n    cout<<\"b-=10: \"<<b<<endl;\n    \n    \n//    system(\"pause\");\n    return 0;\n}",
                "@language": "C++"
            }
        },
        {
            "id": "00000160",
            "title": {
                "text": "\u5173\u7cfb\u8fd0\u7b97\u5b9e\u9a8c"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "128",
                "@unit": "mb"
            },
            "description": {
                "text": "\n\t\u6309\u4ee5\u4e0b\u8981\u6c42\u7f16\u7a0b\n\n\n\t\n\t\t\n\t\t\t\n\t\t\t\t\n\t\t\t\t\t&nbsp;\u76f4\u63a5\u8f93\u51fa\u201c7==5: \u201d\u4ee5\u53ca\u5173\u7cfb\u8fd0\u7b97(7==5)\u7684\u503c\u5e76\u56de\u8f66\u6362\u884c \n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\t&nbsp;\u76f4\u63a5\u8f93\u51fa\u201c5&gt;4: \u201d\u4ee5\u53ca\u5173\u7cfb\u8fd0\u7b97(5&gt;4)\u7684\u503c\u5e76\u56de\u8f66\u6362\u884c \n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\t&nbsp;\u76f4\u63a5\u8f93\u51fa\u201c3!=2: \u201d\u4ee5\u53ca\u5173\u7cfb\u8fd0\u7b97(3!=2)\u7684\u503c\u5e76\u56de\u8f66\u6362\u884c \n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\t&nbsp;\u76f4\u63a5\u8f93\u51fa\u201c6&gt;=6: \u201d\u4ee5\u53ca\u5173\u7cfb\u8fd0\u7b97(6&gt;=6)\u7684\u503c\u5e76\u56de\u8f66\u6362\u884c \n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\t&nbsp;\u76f4\u63a5\u8f93\u51fa\u201c5&lt;5: \u201d\u4ee5\u53ca\u5173\u7cfb\u8fd0\u7b97(5&lt;5)\u7684\u503c\u5e76\u56de\u8f66\u6362\u884c \n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\t&nbsp;\u4ee4a=2, b=3\u548cc=6, \uff08\u53ef\u4ee5\u76f4\u63a5 int a=2;\uff09 \n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\t&nbsp;\u8f93\u51fa\u201ca==5: \u201d \u4ee5\u53ca\u5173\u7cfb\u8fd0\u7b97(a==5)\u7684\u503c\u5e76\u56de\u8f66\u6362\u884c \n\t\t\t\t\t\n\t\t\t\t\t\t&nbsp;\u8f93\u51fa\u201ca*b&gt;=c: \u201d \u4ee5\u53ca\u5173\u7cfb\u8fd0\u7b97(a*b &gt;= c)\u7684\u503c\u5e76\u56de\u8f66\u6362\u884c\n&nbsp;\u8f93\u51fa\u201cb+4&gt;a*c: \u201d \u4ee5\u53ca\u5173\u7cfb\u8fd0\u7b97(b+4&gt;a*c)\u7684\u503c\u5e76\u56de\u8f66\u6362\u884c\n&nbsp;\u8f93\u51fa\u201c(b=2)==a: \u201d \u4ee5\u53ca\u5173\u7cfb\u8fd0\u7b97((b=2) == a)\u7684\u503c\u5e76\u56de\u8f66\u6362\u884c \n\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\u63d0\u793a\uff1a\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\u5173\u7cfb\u8fd0\u7b97\u7684\u64cd\u4f5c\u662f\u5728\u8fdb\u884c\u5224\u65ad\uff0c\u5224\u65ad\u8be5\u5173\u7cfb\u5f0f\u662f\u5426\u6210\u7acb\uff0c\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\u5982\u679c\u5173\u7cfb\u6210\u7acb\uff0c\u7ed3\u679c\u4e3a\u903b\u8f91\u503ctrue\uff1b\u5982\u679c\u5173\u7cfb\u4e0d\u6210\u7acb\uff0c\u7ed3\u679c\u4e3a\u903b\u8f91\u503cfalse\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\ttrue\u75281\u6216\u975e0\u7684\u6570\u8868\u793a\uff0c false\u75280\u8868\u793a\u3002\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\u6ce8\u610f \uff1a\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\u5224\u65ad\u662f\u5426\u76f8\u7b49\uff0c\u5173\u7cfb\u8fd0\u7b97\u7b26\u662f == \u4e24\u4e2a\u7b49\u53f7\u3002\u4e00\u4e2a\u7b49\u53f7\u662f\u8d4b\u503c\u547d\u4ee4\uff0c\u8fde\u7eed\u4e24\u4e2a\u7b49\u53f7\u662f\u5224\u65ad\u662f\u5426\u76f8\u7b49\u3002\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\u5224\u65ad\u4e0d\u7b49\u4e8e\uff0c\u5173\u7cfb\u8fd0\u7b97\u7b26\u662f !=\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\u6240\u6709\u7b26\u53f7\u90fd\u662f\u5728\u82f1\u6587\u8f93\u5165\u6cd5\u4e0b\u8f93\u5165\u7684\u3002\n\t\t\t\t\t\t\t\t\t"
            },
            "input": {},
            "output": {},
            "sample_input": {},
            "sample_output": {},
            "test_input": {
                "text": "0"
            },
            "test_output": {
                "text": "7==5: 0\n5>4: 1\n3!=2: 1\n6>=6: 1\n5=c: 1\nb+4>a*c: 0\n(b=2)==a: 1"
            },
            "hint": {},
            "source": {
                "text": "C++\u57fa\u7840\u6559\u7a0b-\u64cd\u4f5c\u7b26/\u8fd0\u7b97\u7b26"
            },
            "solution": {
                "text": "#include \nusing namespace std;\nint main()\n{\n  \n  cout4: \"4)=6: \"=6)=c: \"=c)a*c: \"a*c)<<endl;\n  cout<<\"(b=2)==a: \"<<((b=2)==a)<<endl;\n  \n//  system(\"pause\");\n}",
                "@language": "C++"
            }
        },
        {
            "id": "00000161",
            "title": {
                "text": "\u6587\u4ef6\u6392\u7248 format"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "256",
                "@unit": "mb"
            },
            "description": {
                "text": "\n\tNormal07.8 \u78c502falsefalsefalseMicrosoftInternetExplorer4\u5199\u7535\u5b50\u90ae\u4ef6\u662f\u6709\u8da3\u7684\uff0c\u4f46\u4e0d\u5e78\u7684\u662f\u7ecf\u5e38\u5199\u4e0d\u597d\u770b\uff0c\u4e3b\u8981\u662f\u56e0\u4e3a\u6240\u6709\u7684\u884c\u4e0d\u4e00\u6837\u957f\uff0c\u4f60\u7684\u4e0a\u53f8\u60f3\u8981\u53d1\u6392\u7248\u7cbe\u7f8e\u7684\u7535\u5b50\u90ae\u4ef6\uff0c\u4f60\u7684\u4efb\u52a1\u662f\u4e3a\u4ed6\u7f16\u5199\u4e00\u4e2a\u7535\u5b50\u90ae\u4ef6\u6392\u7248\u7a0b\u5e8f\u3002\n\n\n\t\n\n\n\n\t\u5b8c\u6210\u8fd9\u4e2a\u4efb\u52a1\u6700\u7b80\u5355\u7684\u529e\u6cd5\u662f\u5728\u592a\u77ed\u7684\u884c\u4e2d\u7684\u5355\u8bcd\u4e4b\u95f4\u63d2\u5165\u7a7a\u683c\uff0c\u4f46\u8fd9\u5e76\u4e0d\u662f\u6700\u597d\u7684\u65b9\u6cd5\uff0c\u8003\u8651\u5982\u4e0b\u4f8b\u5b50\uff1a\n\n\n\tThis is the example you&nbsp; are\n\n\n\tactually considering.\n\n\n\t\u5047\u8bbe\u6211\u4eec\u60f3\u5c06\u7b2c\u4e8c\u884c\u53d8\u5f97\u548c\u7b2c\u4e00\u884c\u4e00\u6837\u957f\uff0c\u9760\u7b80\u5355\u5730\u63d2\u5165\u7a7a\u683c\u5219\u6211\u4eec\u5c06\u5f97\u5230\u5982\u4e0b\u7ed3\u679c\uff1a\n\n\n\tThis is the example you&nbsp; are\n\n\n\tactually&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; considering.\n\n\n\t\u4f46\u8fd9\u592a\u96be\u770b\u4e86\uff0c\u56e0\u4e3a\u5728\u7b2c\u4e8c\u884c\u4e2d\u6709\u4e00\u4e2a\u975e\u5e38\u5927\u7684\u7a7a\u767d\uff0c\u5982\u679c\u5c06\u7b2c\u4e00\u884c\u7684\u5355\u8bcd\u201care\u201d\u79fb\u5230\u4e0b\u4e00\u884c\u6211\u4eec\u5c06\u5f97\u5230\u8f83\u597d\u7684\u7ed3\u679c\uff1a\n\n\n\tThis&nbsp; is&nbsp; the&nbsp; example&nbsp;&nbsp; you\n\n\n\tare&nbsp; actually&nbsp;&nbsp; considering.\n\n\n\t&nbsp;\u5f53\u7136\uff0c\u8fd9\u5fc5\u987b\u5bf9\u96be\u770b\u7a0b\u5ea6\u8fdb\u884c\u91cf\u5316\u3002\u56e0\u6b64\u6211\u4eec\u5fc5\u987b\u7ed9\u51fa\u5355\u8bcd\u4e4b\u95f4\u7684\u7a7a\u683c\u7684\u96be\u770b\u7a0b\u5ea6\uff0c\u4e00\u4e2a\u5305\u542bN\u4e2a\u7a7a\u683c\u7b26\u7684\u7a7a\u767d\u6bb5\uff0c\u5176\u96be\u770b\u7a0b\u5ea6\u503c\u4e3a(n-1)2\uff0c\u7a0b\u5e8f\u7684\u76ee\u7684\u662f\u4f7f\u96be\u770b\u7a0b\u5ea6\u7684\u603b\u548c\u6700\u5c0f\u5316\u3002\u4f8b\u5982\uff0c\u7b2c\u4e00\u4e2a\u4f8b\u5b50\u7684\u96be\u770b\u7a0b\u5ea6\u662f1+7*7=50\uff0c\u800c\u7b2c\u4e8c\u4e2a\u4f8b\u5b50\u7684\u96be\u770b\u7a0b\u5ea6\u4ec5\u4e3a1+1+1+4+1+4=12\u3002\n\n\n\t\u8f93\u51fa\u65f6\uff0c\u6bcf\u4e00\u884c\u7684\u5f00\u5934\u548c\u7ed3\u5c3e\u5904\u90fd\u5fc5\u987b\u662f\u4e00\u4e2a\u5355\u8bcd\uff0c\u5373\u6bcf\u884c\u5f00\u5934\u548c\u7ed3\u5c3e\u5904\u4e0d\u80fd\u6709\u7a7a\u767d\u3002\u552f\u4e00\u4f8b\u5916\u7684\u662f\u8be5\u884c\u4ec5\u6709\u4e00\u4e2a\u5355\u8bcd\u7ec4\u6210\u7684\u60c5\u51b5\uff0c\u6b64\u65f6\u5982\u679c\u8be5\u5355\u8bcd\u6bd4\u8be5\u884c\u5e94\u6709\u7684\u957f\u5ea6\u77ed\u5219\u6211\u4eec\u6307\u5b9a\u5b83\u7684\u96be\u770b\u7a0b\u5ea6\u4e3a500\u3002\n\n\n\t\n"
            },
            "input": {
                "text": "\n\tNormal07.8 \u78c502falsefalsefalseMicrosoftInternetExplorer4\u8f93\u5165\u6587\u4ef6\u7b2c\u4e00\u884c\u662f\u4e00\u4e2a\u6574\u6570N\uff0c\u8868\u793a\u6392\u7248\u540e\u6587\u7ae0\u6bcf\u884c\u8981\u6c42\u8fbe\u5230\u7684\u5bbd\u5ea6\uff0c1&lt;=N&lt;=80\u3002\n\n\n\t\u540e\u9762\u662f\u7ed9\u51fa\u7684\u4e00\u6bb5\u6587\u7ae0\uff0c\u8be5\u6bb5\u6587\u7ae0\u7531\u4e00\u4e2a\u6216\u591a\u4e2a\u5355\u8bcd\u7ec4\u6210\uff0c\u5355\u8bcd\u7531ASCII\u7801\u503c\u4e3a33\u5230126\uff08\u5305\u542b33\u548c126\uff09\u7684\u5b57\u7b26\u7ec4\u6210\uff0c\u5355\u8bcd\u4e0e\u5355\u8bcd\u4e4b\u95f4\u7528\u7a7a\u683c\u9694\u5f00\uff08\u53ef\u80fd\u8d85\u8fc7\u4e00\u4e2a\uff09\u3002\u5355\u8bcd\u957f\u5ea6\u4e0d\u4f1a\u8d85\u8fc7\u6bb5\u843d\u8981\u6c42\u8fbe\u5230\u7684\u5bbd\u5ea6\u3002\u4e00\u6bb5\u6587\u5b57\u6240\u6709\u5355\u8bcd\u7684\u603b\u957f\u5ea6\u4e0d\u4f1a\u8d85\u8fc710000\u4e2a\u5b57\u7b26\uff0c\u4efb\u4f55\u4e00\u884c\u90fd\u4e0d\u4f1a\u8d85\u8fc7100\u4e2a\u5b57\u7b26\uff0c\u4efb\u4f55\u4e00\u4e2a\u5355\u8bcd\u90fd\u5728\u540c\u4e00\u884c\u5185\u3002\n\n\n\t\n\n"
            },
            "output": {
                "text": "\n\tNormal07.8 \u78c502falsefalsefalseMicrosoftInternetExplorer4\u5bf9\u4e8e\u6bcf\u4e2a\u6bb5\u843d\uff0c\u627e\u51fa\u4f7f\u5176\u96be\u770b\u7a0b\u5ea6\u6700\u5c0f\u7684\u6392\u7248\u5f62\u5f0f\u5e76\u8f93\u51fa\u53e5\u5b50\uff1a\u201cMinimal badness is B.\u201d,B\u662f\u6307\u6309\u53ef\u80fd\u7684\u6700\u597d\u6392\u7248\u5f62\u5f0f\u4f1a\u53d1\u751f\u7684\u96be\u770b\u7a0b\u5ea6\u503c\u3002\u6ce8\u610f\u6392\u7248\u540e\u6587\u672c\u884c\u6570\u4efb\u610f\uff0c\u591a\u4f59\u7684\u7a7a\u683c\u4e5f\u53ef\u5220\u9664\u3002\n\n\n\t\n\n"
            },
            "sample_input": {
                "text": "28\nThis is the example you  are\nactually considering."
            },
            "sample_output": {
                "text": "Minimal badness is 12."
            },
            "hint": {
                "text": "\n\tNormal07.8 \u78c502falsefalsefalseMicrosoftInternetExplorer4\n\n\n\t\n\n\n\n\t&nbsp;&nbsp;&nbsp; \u89c1\u8f93\u5165\u8f93\u51fa\u3002\n\n\n\t\n"
            },
            "source": {
                "text": "NOIP-\u6a21\u62df\u9898"
            },
            "solution": {
                "text": "#include\n#include\n#include\n#include\nusing namespace std;\nint f[10010];\nint word[10010];\nint n,num;\nint main()\n{\n    scanf(\"%d\\n\",&n);\n    num=0;\n    char s[101];\n    while (scanf(\"%s\",s)!=EOF)\n    word[++num]=strlen(s);\n    memset(f,255,sizeof(f));\n    f[0]=0;\n    for (int i=0;inum) break;\n            int bad=0;\n            len=len+word[i+j];\n            if (len+j-1>n) break;\n            if (j==1&&len<n) bad=500;\n            else if (j==1) bad=0;\n            else\n            {\n                int k,kk;\n                k=(n-len)/(j-1);\n                kk=(n-len)-k*(j-1);\n                bad=kk*k*k+(k-1)*(k-1)*(j-kk-1);\n            }\n            if ((f[i]+bad<f[i+j])||(f[i+j]==-1)) f[i+j]=f[i]+bad;\n        }\n    }\n    printf(\"Minimal badness is %d.\\n\",f[num]);\n    return 0;\n}",
                "@language": "C++"
            }
        },
        {
            "id": "00000162",
            "title": {
                "text": "\u521d\u7ea7\u7b2c\u4e5d\u8bfe\u2014\u2014\u9e21\u5154\u540c\u7b3c"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "128",
                "@unit": "mb"
            },
            "description": {
                "text": "\u4eca\u6709\u9e21\u5154\u540c\u7b3c\u4e0a\u6709\u4e09\u5341\u4e94\u5934\u4e0b\u6709\u4e5d\u5341\u56db\u8db3\u3002\u95ee\u9e21\u5154\u5404\u51e0\u4f55\uff1f"
            },
            "input": {
                "text": ""
            },
            "output": {
                "text": "\u4e00\u884c\u5305\u542b\u4e24\u4e2a\u6574\u6570\uff0c\u5206\u522b\u4ee3\u8868\u9e21\u548c\u5154\u7684\u6570\u91cf\uff0c\u4e2d\u95f4\u7528\u4e00\u4e2a\u7a7a\u683c\u5206\u9694\u3002"
            },
            "sample_input": {},
            "sample_output": {},
            "test_input": {
                "text": "0"
            },
            "test_output": {
                "text": "23 12"
            },
            "hint": {
                "text": ""
            },
            "source": {
                "text": "\u5165\u95e8-\u521d\u7ea7"
            },
            "solution": [
                {
                    "text": "#include\nusing namespace std;\nint main()\n{\n    int i=35,j=94,a=0,b=0;\n    b=(j-2*i)/2;\n    a=i-b;\n    cout<<a<<' '<<b;\n    return 0;\n}",
                    "@language": "C++"
                },
                {
                    "text": "program p2680;\nvar\n  i,j:longint;\nbegin\n  for i:=1 to 35 do\n  for j:=1 to 35 do\n    begin\n      if (i+j=35) and (2*i+4*j=94) then\n        writeln(i,' ',j);;\n    end;\nend.",
                    "@language": "Pascal"
                },
                {
                    "text": "import java.util.Scanner;\npublic class Main{\n    public static void main(String [] args){\n        // \u8bbex \u4e3a\u9e21\u7684\u4e2a\u6570\uff0cy \u4e3a\u5154\u5b50\u7684\u4e2a\u6570\n        // x+y=35;\n        // 2*x+4*y=94;\n        for(int x=0;x<=35;x++){\n            int y=35-x;\n            if(2*x+4*y==94){\n                System.out.printf(\"%d %d\\n\",x,y);\n            }\n        }\n    }\n}",
                    "@language": "Java"
                }
            ]
        },
        {
            "id": "00000163",
            "title": {
                "text": "\u4e2d\u7ea7\u7b2c\u4e94\u8bfe\u2014\u2014\u627e\u56de\u6587\u65701"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "128",
                "@unit": "mb"
            },
            "description": {
                "text": "\u627e\u51fa10000\u4ee5\u5185\u7684\u56de\u6587\u6570\u3002\n&nbsp;\u4ece\u5de6\u5411\u53f3\u8bfb\u4e0e\u4ece\u53f3\u5411\u5de6\u8bfb\u662f\u540c\u4e00\u4e2a\u6570\u7684\u6570\u4e3a\u56de\u6587\u6570\uff0c\u598219391\u662f\u56de\u6587\u6570\u3002\n\n\t\n"
            },
            "input": {
                "text": "\u65e0"
            },
            "output": {
                "text": "\u8f93\u51fa\u6240\u6709\u7b26\u5408\u6761\u4ef6\u7684\u56de\u6587\u6570\uff0c"
            },
            "sample_input": {},
            "sample_output": {},
            "test_input": {},
            "test_output": {
                "text": "2 3 4 5 6 7 8 9 11 22 33 44 55 66 77 88 99 101 111 121 131 141 151 161 171 181 191 202 212 222 232 242 252 262 272 282 292 303 313 323 333 343 353 363 373 383 393 404 414 424 434 444 454 464 474 484 494 505 515 525 535 545 555 565 575 585 595 606 616 626 636 646 656 666 676 686 696 707 717 727 737 747 757 767 777 787 797 808 818 828 838 848 858 868 878 888 898 909 919 929 939 949 959 969 979 989 999 1001 1111 1221 1331 1441 1551 1661 1771 1881 1991 2002 2112 2222 2332 2442 2552 2662 2772 2882 2992 3003 3113 3223 3333 3443 3553 3663 3773 3883 3993 4004 4114 4224 4334 4444 4554 4664 4774 4884 4994 5005 5115 5225 5335 5445 5555 5665 5775 5885 5995 6006 6116 6226 6336 6446 6556 6666 6776 6886 6996 7007 7117 7227 7337 7447 7557 7667 7777 7887 7997 8008 8118 8228 8338 8448 8558 8668 8778 8888 8998 9009 9119 9229 9339 9449 9559 9669 9779 9889 9999"
            },
            "hint": {},
            "source": {
                "text": "\u5165\u95e8-\u4e2d\u7ea7"
            },
            "solution": {
                "text": "#include           \n#include   \nusing namespace std;  \nint main()  \n{  \n    int a,b,c,d;      \n    for(a=2;a0){  \n            c=b%10;  \n            d=d*10+c;  \n            b=b/10;  \n        }  \n        if(a==d){  \n            cout<<a<<' ';  \n        }  \n        }  \n    cout<<endl;  \n    return 0;  \n}",
                "@language": "C++"
            }
        },
        {
            "id": "00000164",
            "title": {
                "text": "\u5b57\u7b26\u6570\u7ec4\u7684\u5b9a\u4e49\u8d4b\u503c\u4e0e\u8f93\u51fa\u5b9e\u9a8c"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "128",
                "@unit": "mb"
            },
            "description": {
                "text": "\n\t\u6309\u4ee5\u4e0b\u64cd\u4f5c\u5b8c\u6210\u6307\u5b9a\u7684\u5b57\u7b26\u6570\u7ec4\u5b9e\u9a8c\n\t\n\t\t\n\t\t\t\n\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\t\u5b9a\u4e49\u5b57\u7b26\u6570\u7ec4ch1[100]\u5e76\u76f4\u63a5\u8d4b\u521d\u59cb\u503c\u201cHello&nbsp;Hi\u201d \uff08\u8981\u6c42\u7528{ }\u8d4b\u503c\u5e76\u52a0\u4e0a\u7ed3\u675f\u7b26'\\0'\uff09 \n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\t\u5b9a\u4e49\u5b57\u7b26\u6570\u7ec4ch2[50]\u5e76\u76f4\u63a5\u8d4b\u521d\u59cb\u503c\u201cNice to Meet You\u201d \uff08\u8981\u6c42\u7528\"\"\u8d4b\u503c\uff09 \n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\t\u8f93\u51fa\u5b57\u7b26\u6570\u7ec4ch1\u7684\u5b57\u7b26\u4e32\u5e76\u6362\u884c\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\t\u8f93\u51fa\u5b57\u7b26\u6570\u7ec4ch2\u7684\u5b57\u7b26\u4e32\u5e76\u6362\u884c \n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\t\u5728\u540c\u4e00\u884c\u8fde\u7eed\u8f93\u51fa\u5b57\u7b26ch1[1]\uff0cch1[3]\uff0cch1[5]\uff0cch1[7]\u5e76\u6362\u884c \n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\t\u5728\u540c\u4e00\u884c\u8fde\u7eed\u8f93\u51fa\u5b57\u7b26ch2[0]\uff0cch2[2]\uff0cch2[4]\uff0cch2[6]\uff0cch2[8]\u5e76\u6362\u884c \n\t\t\t\t\t\n\t\t\t\t\n\t\t\t\n\t\t\n\t\n\n\n\t\n\n\n\t\u89c1\u4e00\u672c\u901aP84-86\u9875\n"
            },
            "input": {},
            "output": {},
            "sample_input": {},
            "sample_output": {},
            "test_input": {
                "text": "ok"
            },
            "test_output": {
                "text": "Hello Hi\nNice to Meet You\nel i\nNc oM"
            },
            "hint": {},
            "source": {
                "text": "\u8bed\u8a00\u57fa\u7840-\u5b57\u7b26_\u5b57\u7b26\u6570\u7ec4_\u5b57\u7b26\u4e32"
            },
            "solution": {
                "text": "#include \n#include \n#include \nusing namespace std;\nchar ch1[101]=\"Hello Hi\",ch2[51]=\"Nice to Meet You\";\nint main()\n{\n  cout<<ch1<<endl<<ch2<<endl;\n  cout<<ch1[1]<<ch1[3]<<ch1[5]<<ch1[7]<<endl;\n  cout<<ch2[0]<<ch2[2]<<ch2[4]<<ch2[6]<<ch2[8]<<endl;\n  return 0;\n}",
                "@language": "C++"
            }
        },
        {
            "id": "00000165",
            "title": {
                "text": "\u5b57\u7b26\u4e32\u5b9a\u4e49\u4e0e\u8d4b\u503c\u5b9e\u9a8c"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "128",
                "@unit": "mb"
            },
            "description": {
                "text": "\u8bf7\u7528\u5b57\u7b26\u4e32\u65b9\u5f0f\u5904\u7406\u65b9\u5f0f\u5b9e\u73b0\u4ee5\u4e0b\u529f\u80fd\u3002\u5fc5\u987b#include &lt;string&gt;\u624d\u80fd\u4f7f\u7528\u5b57\u7b26\u4e32\u7684\u5904\u7406\u51fd\u6570\u3002\n\n\t\u5b57\u7b26\u6570\u7ec4\u662fc\u8bed\u8a00\u65f6\u4ee3\u7684\u65b9\u6cd5\uff0c\u5b57\u7b26\u4e32string\u662fc++\u540e\u6765\u53d1\u5c55\u7684\u65b0\u65b9\u6cd5\u3002\n\n\n\tstring\u7c7b\u578b\u7684\u5b57\u7b26\u4e32\u4fdd\u7559\u4e86\u5b57\u7b26\u6570\u7ec4\u7684\u4e00\u4e9b\u4f7f\u7528\u65b9\u6cd5\u3002\n\n\n\t\n\t\t\n\t\t\t\n\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\t\u7528string\u7c7b\u578b\u5b9a\u4e49\u7a7a\u5b57\u7b26\u4e32s0\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\t\u7528\u53cc\u5f15\u53f7\u6cd5\u5b9a\u4e49\u5b57\u7b26\u4e32s1\u5e76\u76f4\u63a5\u8d4b\u503c\u201cYou Can Make It\u201d\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\t\u5b9a\u4e49\u5b57\u7b26\u4e32s2\u5e76\u76f4\u63a5\u8d4b\u503c\u4e3as1+'2'\u7684\u503c\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\t\u7528string strNew(str)\u7684\u65b9\u6cd5\u5b9a\u4e49\u5b57\u7b26\u4e32s3\u5e76\u76f4\u63a5\u8d4b\u503c\u4e3as1+\"new3\"\u7684\u503c\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\t\u7528string strNew(n,char)\u7684\u65b9\u6cd5\u5b9a\u4e49\u5b57\u7b26\u4e32s4\u5e76\u76f4\u63a5\u8d4b\u503c\u4e3a100\u4e2a\u5b57\u7b26'k'\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\t\u8f93\u51fa\u5b57\u7b26\u4e32s1,s2,s3,s4\u7684\u503c\uff0c\u6bcf\u4e2a\u5b57\u7b26\u4e32\u4e00\u884c\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\t\u8fde\u7eed\u8f93\u51fas1\u7684\u7b2c1\u4e2a\u5b57\u7b26\uff0cs2\u7684\u7b2c2\u4e2a\u5b57\u7b26\uff0cs3\u7684\u7b2c3\u4e2a\u5b57\u7b26\uff0cs4\u7684\u7b2c4\u4e2a\u5b57\u7b26\u5e76\u56de\u8f66\u3002 \n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\n\t\t\t\n\t\t\n\t\n\n\n\t\u53ef\u4ee5\u53c2\u8003\u4e00\u672c\u901a P133-135\n\n\n\t\n"
            },
            "input": {},
            "output": {},
            "sample_input": {},
            "sample_output": {},
            "test_input": {
                "text": "q"
            },
            "test_output": {
                "text": "You Can Make It\nYou Can Make It2\nYou Can Make Itnew3\nkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk\nYouk"
            },
            "hint": {},
            "source": {
                "text": "\u8bed\u8a00\u57fa\u7840-\u5b57\u7b26_\u5b57\u7b26\u6570\u7ec4_\u5b57\u7b26\u4e32"
            },
            "solution": {
                "text": "#include \n#include \nusing namespace std;\nint main()\n{\n  string s;\n  string s1=\"You Can Make It\";\n  string s2=s1+'2';\n  string s3(s1+\"new3\");\n  string s4(100,'k');\n  cout<<s1<<endl<<s2<<endl<<s3<<endl<<s4<<endl;\n  cout<<s1[0]<<s2[1]<<s3[2]<<s4[3]<<endl;\n  return 0;\n}",
                "@language": "C++"
            }
        },
        {
            "id": "00000166",
            "title": {
                "text": "\u5b57\u7b26\u4e32\u8f93\u5165\u8f93\u51fa\u5904\u7406\u5b9e\u9a8c"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "128",
                "@unit": "mb"
            },
            "description": {
                "text": "\n\t\u7528\u5b57\u7b26\u4e32\u5b8c\u6210\u4ee5\u4e0b\u8981\u6c42\n\n\n\t\u3010\u8f93\u5165\u3011\u7b2c\u4e00\u884c\uff1a\u4e0d\u5e26\u7a7a\u683c\u7684\u5b57\u7b26\u4e32\u3002\u7b2c\u4e8c\u884c\u5f00\u59cb\uff1a\u5305\u542b\u7a7a\u683c\u7684\u5b57\u7b26\u4e32\u3002\n\n\n\t\u3010\u8f93\u51fa\u3011\u5c06\u8f93\u5165\u7684\u7b2c\u4e00\u884c\u6587\u5b57\u63a5\u5230\u8f93\u5165\u7684\u7b2c\u4e8c\u884c\u6587\u5b57\u540e\u9762\uff0c\u505a\u4e3a\u8f93\u51fa\u7684\u7b2c\u4e00\u884c\n\n\n\t\u7b2c\u4e8c\u884c\u8f93\u51fa\uff1a\u4f9d\u6b21\u5c06\u7b2c\u4e09\u884c\u8f93\u5165\u5f00\u59cb\u7684\u6bcf\u884c\u7684\u6700\u540e\u4e00\u4e2a\u5b57\u7b26\u53d6\u51fa\u8fdb\u884c\u8f93\u51fa\n\n\n\t\u7b2c\u4e09\u884c\u8f93\u51fa\uff1a\u603b\u5171\u8f93\u5165\u7684\u884c\u6570\u3002\n\n\n\t\u3010\u8bf4\u660e\u3011\u603b\u5171\u4e0d\u8d85\u8fc7100\u884c\n\n\n\t\u3010\u6837\u4f8b\u8f93\u51651\u3011\n\n\n\tabc\n\n\n\t123 456&nbsp;789\n\n\n\tb b c\n\n\n\ta p p\n\n\n\tf p\n\n\n\t\u3010\u6837\u4f8b\u8f93\u51fa1\u3011\n\n\n\t123 456 789abc\n\n\n\tcpp\n\n\n\t5\n\n\n\t\n\n\n\t\u3010\u63d0\u793a\u3011\n\n\n\t\u53c2\u8003\u4e00\u672c\u901aP133-135 \u9875\n\n\n\t\n\n\n\tcin\u8bfb\u5165\u6570\u636e\uff08\u5305\u62ec\u5b57\u7b26\u4e32\uff09\u65f6\u4f1a\u5c06\u7a7a\u683c\u3001\u5236\u8868\u4ed8\u3001\u56de\u8f66\u7b49\u5f53\u505a\u6570\u636e\u5206\u5272\u7b26\u3002\u4e00\u884c\u4e2d\u6709\u7a7a\u683c\u89c6\u4e3a\u591a\u4e2a\u8f93\u5165\u6570\u636e\u3002\n\n\n\t\u5982\u679c\u8981\u5c06\u5305\u542b\u7a7a\u683c\u7684\u6574\u884c\u6570\u636e\u6574\u884c\u6570\u636e\u8bfb\u5165\u5b57\u7b26\u4e32\uff0c\u53ef\u4ee5\u7528getline(cin,str)\u3002\n\n\n\t\u4f8b\u5982\u8f93\u5165\u4e24\u884c\u6570\u636e\n\n\n\tabc\n\n\n\txmlz fj xm\n\n\n\t\u65b9\u6cd5\u4e00\uff1a\n\n\n\tstring str1,str2;\n\n\n\tcin&lt;&lt;str1; //\u7b2c\u4e00\u884c\u6570\u636e\u6ca1\u6709\u7a7a\u683c\uff0c\u76f4\u63a5\u7528cin\u8bfb\u5165\uff0c\u8bfb\u5165\u540e&nbsp;str1\u7684\u503c\u4e3a\"abc\"&nbsp;\n\n\n\tgetline(cin,str2); //\u524d\u9762\u7684cin\u6ca1\u6709\u5c06\u7b2c\u4e00\u884c\u7684\u56de\u8f66\u5904\u7406\uff0c\u8fd9\u65f6getline\u5c06\u7ee7\u7eed\u5904\u7406\uff0c\u53bb\u6389\u7b2c\u4e00\u884c\u7684\u56de\u8f66\uff0cstr2\u6ca1\u6709\u88ab\u8d4b\u503c\n\n\n\tgetline(cin,str2); // \u8fd9\u65f6getline\u5c06\u5f97\u5230\u7b2c\u4e8c\u884c\u6574\u884c\u7684\u4fe1\u606f\uff0c\u5e76\u5c06\u7b2c\u4e8c\u884c\u7684\u56de\u8f66\u53bb\u6389\u3002\u8bfb\u5165\u540e&nbsp;str2\u7684\u503c\u4e3a\"xmlz fj xm\"\n\n\n\t\u65b9\u6cd5\u4e8c\uff1a\n\n\n\t\n\t\tstring str1,str2;\n\t\n\t\n\t\tgetline(cin,str1); //\u8bfb\u5165\u7b2c\u4e00\u884c\uff0c\u8bfb\u5165\u540e&nbsp;str1\u7684\u503c\u4e3a\"abc\"\u3002\u4e14\u7b2c\u4e00\u884c\u7684\u56de\u8f66\u88ab\u53bb\u6389\n\t\n\t\n\t\tgetline(cin,str2); // \u8fd9\u65f6getline\u5c06\u5f97\u5230\u7b2c\u4e8c\u884c\u6574\u884c\u7684\u4fe1\u606f\uff0c\u5e76\u5c06\u7b2c\u4e8c\u884c\u7684\u56de\u8f66\u53bb\u6389\u3002\u8bfb\u5165\u540e&nbsp;str2\u7684\u503c\u4e3a\"xmlz fj xm\"\n\t\n\n\n"
            },
            "input": {},
            "output": {},
            "sample_input": {},
            "sample_output": {},
            "test_input": {
                "text": "ak\n12 67 90\na b c fg\nad fh hjk sg\nsfg fg\nfgfsdg"
            },
            "test_output": {
                "text": "12 67 90ak\ngggg\n6"
            },
            "hint": {},
            "source": {
                "text": "\u8bed\u8a00\u57fa\u7840-\u5b57\u7b26_\u5b57\u7b26\u6570\u7ec4_\u5b57\u7b26\u4e32"
            },
            "solution": {
                "text": "#include \n#include \nusing namespace std;\nint main()\n{\n  string str1,str2,str3;int a=0;\n  cin>>str1;\n  getline(cin,str2);\n  getline(cin,str2);\n  cout<<str2<<str1<<endl;\n  \n  while(getline(cin,str3))\n  {\n    cout<<str3[str3.size()-1];\n    a++;\n  }\n\n  cout<<endl<<a+2<<endl;\n//  system(\"pause\");\n  return 0;\n}",
                "@language": "C++"
            }
        },
        {
            "id": "00000167",
            "title": {
                "text": "\u6362\u96f6\u94b1 [1*]"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "128",
                "@unit": "mb"
            },
            "description": {
                "text": "\u67d0\u4eba\u60f3\u5c06\u624b\u4e2d\u7684\u4e00\u5f20\u9762\u503c 100 \u5143\u7684\u4eba\u6c11\u5e01\u6362\u6210 5 \u5143\u3001 1 \u5143\u548c 0.5 \u5143\u9762\u503c\u7684\u7968\u5b50\uff0c\u4f46\u8981\u6c42\u6362\u6b63\u597d 100 \u5f20\uff0c\u4e14\u6bcf\u79cd\u7968\u5b50\u81f3\u5c11\u4e00\u5f20\u3002\u95ee\uff1a\u6709\u51e0\u79cd\u6362\u6cd5\uff1f \n\u3000 \n\u63d0\u793a\uff1a \u7528\u4e09\u91cd\u5faa\u73af\u3002\u60f3\u4e00\u60f3\u5982\u4f55\u51cf\u5c11\u5faa\u73af\u7684\u6b21\u6570\u3002 \n5 \u5143\u3001 1 \u5143\u548c 0.5 \u5143\u6700\u591a\u5404\u9700\u8981\u51e0\u5f20\u3002\u8bb0\u5f97\u8981\u6c42\u6b63\u597d\u6362 100 \u5f20\uff0c\u603b\u4ef7\u503c100\u5143\u3002 \n\u5faa\u73af\u53d8\u91cf\u4ee3\u8868\u67d0\u4e2a\u5e01\u79cd\u7684\u5f20\u6570\u3002 "
            },
            "input": {},
            "output": {},
            "sample_input": {},
            "sample_output": {},
            "test_input": {},
            "test_output": {
                "text": "11"
            },
            "hint": {},
            "source": {
                "text": "\u57fa\u7840\u7b97\u6cd5-\u679a\u4e3e"
            },
            "solution": [
                {
                    "text": "#include \nint main()\n{\n    double i,j,z;\n    int count=0;\n\tfor(i=1;i<97;i++){\n\t\tfor(j=1;j<97;j++){\n\t\t\tfor(z=1;z<97;z++){\n\t\t\t\tif((5*i+j+0.5*z==100)&&(i+j+z==100)){\n\t\t\t\t\tcount++;\n\t\t\t\t\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"%d\",count);\n\treturn 0;\n}",
                    "@language": "C"
                },
                {
                    "text": "#include\nusing namespace std;\nint main()\n{\n    int sum=0;\n    for(int i=1;i<=19;i++)\n      for(int j=1;j<=99;j++)\n      {\n        if(i*5+j+(100-i-j)*0.5==100)sum++;\n      }\n    cout<<sum<<endl;\n    return 0;\n}",
                    "@language": "C++"
                },
                {
                    "text": "program ygjnierb;\n  var\n    a,i,j,k:integer;\n  begin\n    a:=0;\n    for i:=1 to 20 do\n      for j:=1 to 100 do\n        for k:=1 to 100 do\n            if (i+j+k=100) and (i*5+j+k*0.5=100) then a:=a+1;\n    write(a);\n  end.",
                    "@language": "Pascal"
                },
                {
                    "text": "import java.util.*;\npublic class Main{\n  public static void main(String[] args) {\n    Scanner cin = new Scanner(System.in);\n    int sum = 100;\n    int count=0;\n    for(int i = 0; i < 100; i ++){\n      for(int j = 0; j < 100; j ++){\n        for(int k = 0; k < 100; k ++){\n          if(0.5*i+1*j+5*k==100 && i+j+k==100){\n            count += 1;\n          }\n        }\n      }\n    }\n    System.out.println(count);\n  }\n}",
                    "@language": "Java"
                }
            ]
        },
        {
            "id": "00000168",
            "title": {
                "text": "\u8f93\u51faN\u4ee5\u5185\u7684\u7d20\u6570 nprime [1*+]"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "128",
                "@unit": "mb"
            },
            "description": {
                "text": "\n\t \u8f93\u5165\u4e00\u4e2a\u6574\u6570n \n\u8f93\u51faN\u4ee5\u5185\u7684\u6240\u6709\u7d20\u6570 \n\n\n\n\tInput  \n\n\n\t \u4e00\u4e2a\u6574\u6570n \n\n\n\n\tOutput  \n\n\n\t \u7531\u5c0f\u5230\u5927\u8f93\u51faN\u4ee5\u5185\u7684\u6240\u6709\u7d20\u6570 \n\u6bcf\u884c\u4e00\u4e2a\u6570 \n\n\n\n\tSample Input  \n\n\u6837\u4f8b\u8f93\u51651\n10\n\n\u6837\u4f8b\u8f93\u51fa1\n2\n3\n5\n7\n\n\tSample Output  \n\n\u3000\n\n\tHint  \n\n 2&lt;=N&lt;=5000 "
            },
            "input": {},
            "output": {},
            "sample_input": {},
            "sample_output": {},
            "test_input": {
                "text": "4999"
            },
            "test_output": {
                "text": "2\n3\n5\n7\n11\n13\n17\n19\n23\n29\n31\n37\n41\n43\n47\n53\n59\n61\n67\n71\n73\n79\n83\n89\n97\n101\n103\n107\n109\n113\n127\n131\n137\n139\n149\n151\n157\n163\n167\n173\n179\n181\n191\n193\n197\n199\n211\n223\n227\n229\n233\n239\n241\n251\n257\n263\n269\n271\n277\n281\n283\n293\n307\n311\n313\n317\n331\n337\n347\n349\n353\n359\n367\n373\n379\n383\n389\n397\n401\n409\n419\n421\n431\n433\n439\n443\n449\n457\n461\n463\n467\n479\n487\n491\n499\n503\n509\n521\n523\n541\n547\n557\n563\n569\n571\n577\n587\n593\n599\n601\n607\n613\n617\n619\n631\n641\n643\n647\n653\n659\n661\n673\n677\n683\n691\n701\n709\n719\n727\n733\n739\n743\n751\n757\n761\n769\n773\n787\n797\n809\n811\n821\n823\n827\n829\n839\n853\n857\n859\n863\n877\n881\n883\n887\n907\n911\n919\n929\n937\n941\n947\n953\n967\n971\n977\n983\n991\n997\n1009\n1013\n1019\n1021\n1031\n1033\n1039\n1049\n1051\n1061\n1063\n1069\n1087\n1091\n1093\n1097\n1103\n1109\n1117\n1123\n1129\n1151\n1153\n1163\n1171\n1181\n1187\n1193\n1201\n1213\n1217\n1223\n1229\n1231\n1237\n1249\n1259\n1277\n1279\n1283\n1289\n1291\n1297\n1301\n1303\n1307\n1319\n1321\n1327\n1361\n1367\n1373\n1381\n1399\n1409\n1423\n1427\n1429\n1433\n1439\n1447\n1451\n1453\n1459\n1471\n1481\n1483\n1487\n1489\n1493\n1499\n1511\n1523\n1531\n1543\n1549\n1553\n1559\n1567\n1571\n1579\n1583\n1597\n1601\n1607\n1609\n1613\n1619\n1621\n1627\n1637\n1657\n1663\n1667\n1669\n1693\n1697\n1699\n1709\n1721\n1723\n1733\n1741\n1747\n1753\n1759\n1777\n1783\n1787\n1789\n1801\n1811\n1823\n1831\n1847\n1861\n1867\n1871\n1873\n1877\n1879\n1889\n1901\n1907\n1913\n1931\n1933\n1949\n1951\n1973\n1979\n1987\n1993\n1997\n1999\n2003\n2011\n2017\n2027\n2029\n2039\n2053\n2063\n2069\n2081\n2083\n2087\n2089\n2099\n2111\n2113\n2129\n2131\n2137\n2141\n2143\n2153\n2161\n2179\n2203\n2207\n2213\n2221\n2237\n2239\n2243\n2251\n2267\n2269\n2273\n2281\n2287\n2293\n2297\n2309\n2311\n2333\n2339\n2341\n2347\n2351\n2357\n2371\n2377\n2381\n2383\n2389\n2393\n2399\n2411\n2417\n2423\n2437\n2441\n2447\n2459\n2467\n2473\n2477\n2503\n2521\n2531\n2539\n2543\n2549\n2551\n2557\n2579\n2591\n2593\n2609\n2617\n2621\n2633\n2647\n2657\n2659\n2663\n2671\n2677\n2683\n2687\n2689\n2693\n2699\n2707\n2711\n2713\n2719\n2729\n2731\n2741\n2749\n2753\n2767\n2777\n2789\n2791\n2797\n2801\n2803\n2819\n2833\n2837\n2843\n2851\n2857\n2861\n2879\n2887\n2897\n2903\n2909\n2917\n2927\n2939\n2953\n2957\n2963\n2969\n2971\n2999\n3001\n3011\n3019\n3023\n3037\n3041\n3049\n3061\n3067\n3079\n3083\n3089\n3109\n3119\n3121\n3137\n3163\n3167\n3169\n3181\n3187\n3191\n3203\n3209\n3217\n3221\n3229\n3251\n3253\n3257\n3259\n3271\n3299\n3301\n3307\n3313\n3319\n3323\n3329\n3331\n3343\n3347\n3359\n3361\n3371\n3373\n3389\n3391\n3407\n3413\n3433\n3449\n3457\n3461\n3463\n3467\n3469\n3491\n3499\n3511\n3517\n3527\n3529\n3533\n3539\n3541\n3547\n3557\n3559\n3571\n3581\n3583\n3593\n3607\n3613\n3617\n3623\n3631\n3637\n3643\n3659\n3671\n3673\n3677\n3691\n3697\n3701\n3709\n3719\n3727\n3733\n3739\n3761\n3767\n3769\n3779\n3793\n3797\n3803\n3821\n3823\n3833\n3847\n3851\n3853\n3863\n3877\n3881\n3889\n3907\n3911\n3917\n3919\n3923\n3929\n3931\n3943\n3947\n3967\n3989\n4001\n4003\n4007\n4013\n4019\n4021\n4027\n4049\n4051\n4057\n4073\n4079\n4091\n4093\n4099\n4111\n4127\n4129\n4133\n4139\n4153\n4157\n4159\n4177\n4201\n4211\n4217\n4219\n4229\n4231\n4241\n4243\n4253\n4259\n4261\n4271\n4273\n4283\n4289\n4297\n4327\n4337\n4339\n4349\n4357\n4363\n4373\n4391\n4397\n4409\n4421\n4423\n4441\n4447\n4451\n4457\n4463\n4481\n4483\n4493\n4507\n4513\n4517\n4519\n4523\n4547\n4549\n4561\n4567\n4583\n4591\n4597\n4603\n4621\n4637\n4639\n4643\n4649\n4651\n4657\n4663\n4673\n4679\n4691\n4703\n4721\n4723\n4729\n4733\n4751\n4759\n4783\n4787\n4789\n4793\n4799\n4801\n4813\n4817\n4831\n4861\n4871\n4877\n4889\n4903\n4909\n4919\n4931\n4933\n4937\n4943\n4951\n4957\n4967\n4969\n4973\n4987\n4993\n4999"
            },
            "hint": {},
            "source": {
                "text": "\u57fa\u7840\u7b97\u6cd5-\u6570\u8bba\u7d20\u6570"
            },
            "solution": [
                {
                    "text": "#include\nusing namespace std;\nint n,c=0;\nint main(){\n    cin>>n;\n    for(int i=2;i<=n;i++){\n            for(int j=2;j<=i-1;j++)\n            if(i%j==0) c++;\n            if(c==0) cout<<i<<endl;\n            c=0;\n            }\n    return 0;\n}",
                    "@language": "C++"
                },
                {
                    "text": "import java.util.*;\n\npublic class Main{\n  public static void main(String[] args) {\n    Scanner cin = new Scanner(System.in);\n    int n = cin.nextInt();\n    for(int i = 0; i <= n; i ++){\n      if(isPrime(i)){\n        System.out.println(i);\n      }\n    }\n  }\n\n  public static boolean isPrime(int n){\n    if(n == 1 || n ==0){\n      return false;\n    }\n    for(int i = 2; i <= (int)Math.sqrt(n); i ++){\n      if(n%i==0){\n        return false;\n      }\n    }\n    return true;\n  }\n}",
                    "@language": "Java"
                }
            ]
        },
        {
            "id": "00000169",
            "title": {
                "text": "\u90ae\u5c40\u9009\u5740\u95ee\u9898"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "128",
                "@unit": "mb"
            },
            "description": {
                "text": "\u90ae\u5c40\u9009\u5740\u95ee\u9898 \n\u3010\u95ee\u9898\u63cf\u8ff0\uff1a\u3011    \n\u5728\u4e00\u4e2a\u6309\u7167\u4e1c\u897f\u548c\u5357\u5317\u65b9\u5411\u5212\u5206\u6210\u89c4\u6574\u8857\u533a\u7684\u57ce\u5e02\u91cc\uff0cn\u4e2a\u5c45\u6c11\u70b9\u6563\u4e71\u5730\u5206\u5e03\u5728\u4e0d\u540c\u7684\u8857\u533a\u4e2d\u3002\u7528x\u5750\u6807\u8868\u793a\u4e1c\u897f\u5411\uff0c\u7528y\u5750\u6807\u8868\u793a\u5357\u5317\u5411\u3002\u5404\u5c45\u6c11\u70b9\u7684\u4f4d\u7f6e\u53ef\u4ee5\u7531\n\u5750\u6807(x,y)\u8868\u793a\u3002\u8857\u533a\u4e2d\u4efb\u610f2\u70b9(x1,y1)\u548c(x2,y2)\u4e4b\u95f4\u7684\u8ddd\u79bb\u53ef\u4ee5\u7528\u6570\u503c|x1-x2|+|y1-y2|\u5ea6\u91cf\u3002 \n\u5c45\u6c11\u4eec\u5e0c\u671b\u5728\u57ce\u5e02\u4e2d\u9009\u62e9\u5efa\u7acb\u90ae\u5c40\u7684\u6700\u4f73\u4f4d\u7f6e\uff0c\u4f7fn\u4e2a\u5c45\u6c11\u70b9\u5230\u90ae\u5c40\u7684\u8ddd\u79bb\u603b\u548c\u6700\u5c0f\u3002 \n\u3010\u6570\u636e\u8f93\u5165\uff1a\u3011    \u7b2c1\u884c\u662f\u5c45\u6c11\u70b9\u6570n\uff0c1\u2264n\u226410000\u3002\u63a5\u4e0b\u6765n\u884c\u662f\u5c45\u6c11\u70b9\u7684\u4f4d\u7f6e\uff0c\u6bcf\u884c2\u4e2a\u6574\u6570x\u548cy\uff0c-10000\u2264x\uff0cy\u226410000\u3002 \n\u3010\u7ed3\u679c\u8f93\u51fa:\u3011 1\u4e2a\u6570\uff0c\u662fn\u4e2a\u5c45\u6c11\u70b9\u5230\u90ae\u5c40\u7684\u8ddd\u79bb\u603b\u548c\u7684\u6700\u5c0f\u503c\u3002 \n\u3010\u8f93\u5165\u6587\u4ef6\u793a\u4f8b\u3011 \n5 \n1 2 \n2 2 \n1 3 \n3 -2 \n3 3 \n\u3010\u8f93\u51fa\u6587\u4ef6\u793a\u4f8b\u3011 \n10 "
            },
            "input": {},
            "output": {},
            "sample_input": {},
            "sample_output": {},
            "test_input": {
                "text": "3\n-4 -3\n-4 5\n5 2"
            },
            "test_output": {
                "text": "17"
            },
            "hint": {},
            "source": {
                "text": "\u57fa\u7840\u7b97\u6cd5-\u4e2d\u4f4d\u6570\u5e94\u7528"
            },
            "solution": [
                {
                    "text": "#include\n#include\n#include\nusing namespace std;\nint main()\n{\n    int n;\n    cin>>n;\n    int x[n+1],y[n+1],sum=0;\n    for(int i=1;i>x[i]>>y[i];\n    sort(x+1,x+n+1);\n    sort(y+1,y+n+1);\n    if(n%2==1)\n    {\n        int t=y[n/2+1];\n        for(int i=1;it) sum+=y[i]-t;\n            if(y[i]t) sum+=x[i]-t;\n            if(x[i]t) sum+=y[i]-t;\n            if(y[i]t) sum+=x[i]-t;\n            if(x[i]<=t) sum+=t-x[i];\n        }\n    }\n    cout<<sum;\n    return 0;\n}",
                    "@language": "C++"
                },
                {
                    "text": "import java.util.Scanner;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        int x[] = new int[n];\n        int y[] = new int[n];\n        for (int i = 0; i < n; i++) {\n            x[i] = sc.nextInt();\n            y[i] = sc.nextInt();\n        }\n        int minx = Integer.MAX_VALUE;\n        int miny = Integer.MAX_VALUE;\n\n        for (int i = 0; i < n; i++) {\n            int sumx = 0;\n            int sumy = 0;\n            int d = x[i];\n            int f = y[i];\n            for (int j = 0; j < n; j++) {\n                sumx = sumx + Math.abs(d - x[j]);\n                sumy = sumy + Math.abs(f - y[j]);\n            }\n            if (sumx < minx)\n                minx = sumx;\n            if (sumy < miny) {\n                miny = sumy;\n            }\n        }\n        System.out.println(minx + miny);\n    }\n}",
                    "@language": "Java"
                }
            ]
        },
        {
            "id": "00000170",
            "title": {
                "text": "\u8df3\u9a6c\u95ee\u9898 [2*+]"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "128",
                "@unit": "mb"
            },
            "description": {
                "text": "\u5982\u4e0b\u56fe\u662f\u534a\u4e2a\u4e2d\u56fd\u8c61\u68cb\u68cb\u76d8\u3002\u6709\u4e00\u53ea\u9a6c\u4ece\u5de6\u4e0b\u89d2A\u70b9\u8df3\u5230\u53f3\u4e0a\u89d2B\u70b9\u3002\u89c4\u5b9a\u53ea\u80fd\u5f80\u53f3\u8df3\uff0c\u8df3\u6cd5\u6309\u7167\u8c61\u68cb\u7684\u65e5\u5b57\u578b\u8df3\u6cd5\u3002 \n&&\u7f3a\u5c11\u56fe\u7247...&& \n\u6c42\u8df3\u6cd5\u603b\u6570"
            },
            "input": {},
            "output": {},
            "sample_input": {},
            "sample_output": {},
            "test_input": {
                "text": "37"
            },
            "test_output": {
                "text": "37"
            },
            "hint": {},
            "source": {
                "text": "\u57fa\u7840\u7b97\u6cd5-\u56de\u6eaf\u6df1\u641c"
            },
            "solution": {
                "text": "#include\n#include\n#include\n#include\n\nusing namespace std;\n\n\nint main()\n{\n\tcout<<\"37\";\n\treturn 0;\n}",
                "@language": "C++"
            }
        },
        {
            "id": "00000171",
            "title": {
                "text": "\u8bd5\u5377\u6279\u5206 grade [2*]"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "128",
                "@unit": "mb"
            },
            "description": {
                "text": "\u3010\u95ee\u9898\u63cf\u8ff0\uff1a\u3011 \u67d0\u5b66\u6821\u8fdb\u884c\u4e86\u4e00\u6b21\u82f1\u8bed\u8003\u8bd5\uff0c\u5171\u670910\u9053\u662f\u975e\u9898\uff0c\u6bcf\u9898\u4e3a10\u5206\uff0c\u89e3\u7b54\u75281\u8868\u793a\u201c\u662f\u201d\uff0c\u75280\u8868\u793a\u201c\u975e\u201d\u7684\u65b9\u5f0f\u3002\u4f46\u8001\u5e08\u6279\u5b8c\u5377\u540e\uff0c\u53d1\u73b0\u6f0f\u6279\u4e86\u4e00\u5f20\u8bd5\u5377\uff0c\u800c\u4e14\u6807\u51c6\u7b54\u6848\u4e5f\u4e22\u5931\u4e86\uff0c\u624b\u5934\u53ea\u5269\u4e0b\u4e863\u5f20\u6807\u6709\u5206\u6570\u7684\u8bd5\u5377\u3002 \n\u8bd5\u5377\u4e00\uff1a \n\u2460    \u2461    \u2462    \u2463    \u2464    \u2465    \u2466    \u2467    \u2468    \u2469 \n0     0     1     0     1     0     0     1     0     0       \u5f97\u5206\uff1a70 \n\u8bd5\u5377\u4e8c\uff1a \n\u2460    \u2461    \u2462    \u2463    \u2464    \u2465    \u2466    \u2467    \u2468    \u2469 \n0     1     1     1     0     1     0     1     1     1       \u5f97\u5206\uff1a50 \n\u8bd5\u5377\u4e09\uff1a \n\u2460    \u2461    \u2462    \u2463    \u2464    \u2465    \u2466    \u2467    \u2468    \u2469 \n0     1     1     1     0     0     0     1     0     1       \u5f97\u5206\uff1a30 \n\u5f85\u6279\u8bd5\u5377\uff1a \n\u2460    \u2461    \u2462    \u2463    \u2464    \u2465    \u2466    \u2467    \u2468    \u2469 \n0     0     1     1     1     0     0     1     1     1       \u5f97\u5206\uff1a\uff1f \n\u3010\u95ee\u9898\u6c42\u89e3\uff1a\u3011 \u8bf7\u7f16\u4e00\u7a0b\u5e8f\u4f9d\u636e\u8fd9\u4e09\u5f20\u8bd5\u5377\uff0c\u7b97\u51fa\u6f0f\u6279\u7684\u90a3\u5f20\u8bd5\u5377\u7684\u5206\u6570\u3002"
            },
            "input": {},
            "output": {},
            "sample_input": {},
            "sample_output": {},
            "test_input": {
                "text": "60"
            },
            "test_output": {
                "text": "60"
            },
            "hint": {},
            "source": {
                "text": "\u57fa\u7840\u7b97\u6cd5-\u56de\u6eaf\u6df1\u641c"
            },
            "solution": [
                {
                    "text": "#include\nint main(){\n\tprintf(\"60\");\n\treturn 0;\n}",
                    "@language": "C"
                },
                {
                    "text": "#include\nusing namespace std;\nint main()\n{\n    cout<<\"60\";\n    return 0;\n}",
                    "@language": "C++"
                },
                {
                    "text": "var\n  n,m,i,j,x:longint;\nbegin\n  readln(n,m);\n    for i:=1 to m do\n    begin\n      for j:=1 to n do\n        read(x);\n        readln(x);\n      end;\n      for i:=1 to n do\n        read(x);\n      writeln(60);\nend.",
                    "@language": "Pascal"
                }
            ]
        },
        {
            "id": "00000172",
            "title": {
                "text": "\u6c42\u6307\u6570\u65b9\u7a0b\u7684\u6839(fxroot) [2*+] **"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "128",
                "@unit": "mb"
            },
            "description": {
                "text": "\u6c42\u6307\u6570\u65b9\u7a0b\u7684\u6839(fxroot) \n\u6c42\u65b9\u7a0bf(x)=2^x+3^x-4^x=0 \u5728[1,2]\u5185\u7684\u6839\u3002\u63d0\u793aa^x\u53ef\u8868\u793a\u6210exp(x*ln(a))\u6216\u7528math\u5e93\u4e2d\u7684power\uff08a,x\uff09\u3002 \n\u8f93\u5165\uff1a\u65e0\u8f93\u5165 \n\u8f93\u51fa\uff1af(x)=0\u7684\u6839\uff0cx\u7cbe\u786e\u5230\u5c0f\u6570\u70b910\u4f4d \n\u63d0\u793a\uff1a\u8bb0\u65b9\u7a0bf(x)=0\uff0c\u82e5\u5b58\u57282\u4e2a\u6570x1\u548cx2\uff0c\u4e14x1"
            },
            "input": {},
            "output": {},
            "sample_input": {},
            "sample_output": {},
            "test_input": {
                "text": "1.5071265916"
            },
            "test_output": {
                "text": "1.5071265916"
            },
            "hint": {},
            "source": {
                "text": "\u57fa\u7840\u7b97\u6cd5-\u5206\u6cbb"
            },
            "solution": {
                "text": "#include \n#include \nusing namespace std;\nint i,j,n;\ndouble f(double x)\n{\n    return(pow(2,x)+pow(3,x)-pow(4,x));\n}\nmain()\n{\n      double x,r,l;\n      r=2;l=1;\n      x=(r+l)/2;\n      while (f(x)!=0 && r-l>0.000000001)\n      {\n            if (f(r)*f(x)<0) l=x;\n            else r=x;\n            x=(r+l)/2;\n      }\n      printf(\"%0.10lf\",x);\n}",
                "@language": "C++"
            }
        },
        {
            "id": "00000173",
            "title": {
                "text": "\u9493\u9c7c"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "128",
                "@unit": "mb"
            },
            "description": {
                "text": "\n\t&nbsp;&nbsp;&nbsp; \u7ea6\u7ff0\u662f\u4e2a\u5782\u9493\u8c1c\uff0c\u661f\u671f\u5929\u4ed6\u51b3\u5b9a\u5916\u51fa\u9493\u9c7ch\u5c0f\u65f6\uff081\u2264h\u226416\uff09\uff0c\u7ea6\u7ff0\u5bb6\u9644\u8fd1\u5171\u6709n\u4e2a\u6c60\u5858\uff082\u2264n\u226425\uff09\uff0c\u8fd9\u4e9b\u6c60\u5858\u5206\u5e03\u5728\u4e00\u6761\u76f4\u7ebf\u4e0a\uff0c\u7ea6\u7ff0\u5c06\u8fd9\u4e9b\u6c60\u5858\u6309\u79bb\u5bb6\u7684\u8ddd\u79bb\u7f16\u4e0a\u53f7\uff0c\u4f9d\u6b21\u4e3aL1,L2,\u2026,Ln\uff0c\u7ea6\u7ff0\u5bb6\u95e8\u5916\u5c31\u662f\u7b2c\u4e00\u4e2a\u6c60\u5858\uff0c\u6240\u4ee5\u4ed6\u5230\u7b2c\u4e00\u4e2a\u6c60\u5858\u662f\u4e0d\u7528\u82b1\u65f6\u95f4\u7684\uff0c\u7ea6\u7ff0\u53ef\u4ee5\u4efb\u9009\u82e5\u5e72\u4e2a\u6c60\u5858\u5782\u9493\uff0c\u5e76\u4e14\u5728\u6bcf\u4e2a\u6c60\u5858\u4ed6\u90fd\u53ef\u4ee5\u5446\u4e0a\u4efb\u610f\u957f\u7684\u65f6\u95f4\uff0c\u4f46\u5446\u7684\u65f6\u95f4\u5fc5\u987b\u4e3a5\u5206\u949f\u7684\u500d\u6570\uff0c\uff085\u5206\u949f\u4e3a\u4e00\u4e2a\u5355\u4f4d\u65f6\u95f4\uff09\uff0c\u5df2\u77e5\u4ece\u6c60\u5858Li\u5230\u6c60\u5858Li+1\u8981\u5316\u53bb\u7ea6\u7ff0ti\u4e2a\u5355\u4f4d\u65f6\u95f4\uff0c\u6bcf\u4e2a\u6c60\u5858\u7684\u4e0a\u9c7c\u7387\u9884\u5148\u4e5f\u662f\u5df2\u77e5\u7684\uff0c\u6c60\u5858Li\u5728\u7b2c\u4e00\u4e2a\u5355\u4f4d\u65f6\u95f4\u5185\u80fd\u9493\u5230\u7684\u9c7c\u4e3aFi\uff080\u2264Fi\u2264100\uff09\uff0c\u5e76\u4e14\u6bcf\u8fc7\u4e00\u4e2a\u5355\u4f4d\u65f6\u95f4\u5728\u5355\u4f4d\u65f6\u95f4\u5185\u80fd\u9493\u5230\u7684\u9c7c\u5c06\u51cf\u5c11\u4e00\u4e2a\u5e38\u6570di\uff080\u2264di\u2264100\uff09\uff0c\u73b0\u5728\u8bf7\u4f60\u7f16\u4e00\u4e2a\u7a0b\u5e8f\u8ba1\u7b97\u7ea6\u7ff0\u6700\u591a\u80fd\u9493\u5230\u591a\u5c11\u9c7c\u3002 \n"
            },
            "input": {
                "text": "\u8f93\u5165\u7b2c\u4e00\u884c\u4e3a\u4e00\u4e2a\u6574\u6570n\uff0c\u7b2c\u4e8c\u884c\u4e3a\u4e00\u4e2a\u6574\u6570h\uff0c\u7b2c\u4e09\u884c\u4e3an\u4e2a\u7528\u7a7a\u683c\u9694\u5f00\u7684\u6574\u6570\uff0c\u8868\u793aFi\uff08i=1,2,\u2026,n\uff09\uff0c\u7b2c\u56db\u884c\u4e3an\u4e2a\u7528\u7a7a\u683c\u9694\u5f00\u7684\u6574\u6570\uff0c\u8868\u793adi\uff08i=1,2,\u2026,n\uff09\uff0c\u7b2c\u4e94\u884c\u4e3an-1\u4e2a\u7528\u7a7a\u683c\u9694\u5f00\u7684\u6574\u6570\uff0c\u8868\u793ati\uff08i=1,2,\u2026,n-1\uff09"
            },
            "output": {
                "text": "\u8f93\u51fa\u4e00\u4e2a\u6574\u6570\uff0c\u8868\u793a\u7ea6\u7ff0\u6700\u591a\u80fd\u9493\u5230\u7684\u9c7c\u7684\u6570\u91cf\u3002"
            },
            "sample_input": {
                "text": "2\n1\n10 1\n2 5 \n2"
            },
            "sample_output": {
                "text": "31"
            },
            "hint": {},
            "source": {
                "text": "\u52a8\u6001\u89c4\u5212 \u6d1b\u8c37"
            },
            "solution": {
                "text": "#include\n#include\n#include\nusing namespace std;\nconst int N(16*60/5+5),M(30);  //M:\u6c60\u5858\u4e0a\u754c  N:\u5355\u4f4d\u65f6\u95f4\u4e0a\u754c \nint tim[M],t[M],first[M],d[M],f[M][N],ans(0);\nint main()\n{\n//    ifstream cin(\"fish.in\");\n//    ofstream cout(\"fish.out\");\n    int h,n;\n    cin>>n>>h;\n    h=h*60/5;\n    for (int i=1;i>first[i];\n    for (int i=1;i>d[i]; \n    t[0]=0;\n    for (int i=1;i>tim[i];  t[i]=t[i-1]+tim[i]; }  \n    memset(f,0,sizeof(f));\n    for (int j=1;j0;k++)                \n                    f[i][j]=max(f[i][j],f[i-1][j-tim[i-1]-k]+k*first[i]-k*(k-1)/2*d[i]);                            \n            ans=max(ans,f[i][j]);\n        }\n    cout<<ans<<endl;\n    return 0;\n}",
                "@language": "C++"
            }
        },
        {
            "id": "00000174",
            "title": {
                "text": "\u6587\u5b57\u6392\u7248"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "128",
                "@unit": "mb"
            },
            "description": {
                "text": "\n\t\u5199\u7535\u5b50\u90ae\u4ef6\u662f\u6709\u8da3\u7684\uff0c\u4f46\u4e0d\u5e78\u7684\u662f\u7ecf\u5e38\u5199\u4e0d\u597d\u770b\uff0c\u4e3b\u8981\u662f\u56e0\u4e3a\u6240\u6709\u7684\u884c\u4e0d\u4e00\u6837\u957f\uff0c\u4f60\u7684\u4e0a\u53f8\u60f3\u8981\u53d1\u6392\u7248\u7cbe\u7f8e\u7684\u7535\u5b50\u90ae\u4ef6\uff0c\u4f60\u7684\u4efb\u52a1\u662f\u4e3a\u4ed6\u7f16\u5199\u4e00\u4e2a\u7535\u5b50\u90ae\u4ef6\u6392\u7248\u7a0b\u5e8f\u3002\n\n\n\t\u5b8c\u6210\u8fd9\u4e2a\u4efb\u52a1\u6700\u7b80\u5355\u7684\u529e\u6cd5\u662f\u5728\u592a\u77ed\u7684\u884c\u4e2d\u7684\u5355\u8bcd\u4e4b\u95f4\u63d2\u5165\u7a7a\u683c\uff0c\u4f46\u8fd9\u5e76\u4e0d\u662f\u6700\u597d\u7684\u65b9\u6cd5\uff0c\u8003\u8651\u5982\u4e0b\u4f8b\u5b50\uff1a \n\n\n\t**************************** \n\n\n\tThis is the example\nyou&nbsp; are \n\n\n\tactually\nconsidering. \n\n\n\t\u5047\u8bbe\u6211\u4eec\u60f3\u5c06\u7b2c\u4e8c\u884c\u53d8\u5f97\u548c\u7b2c\u4e00\u884c\u4e00\u6837\u957f\uff0c\u9760\u7b80\u5355\u5730\u63d2\u5165\u7a7a\u683c\u5219\u6211\u4eec\u5c06\u5f97\u5230\u5982\u4e0b\u7ed3\u679c\uff1a \n\n\n\t**************************** \n\n\n\tThis is the example\nyou&nbsp; are \n\n\n\tactually&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; considering. \n\n\n\t&nbsp; \n\n\n\t\u4f46\u8fd9\u592a\u96be\u770b\u4e86\uff0c\u56e0\u4e3a\u5728\u7b2c\u4e8c\u884c\u4e2d\u6709\u4e00\u4e2a\u975e\u5e38\u5927\u7684\u7a7a\u767d\uff0c\u5982\u679c\u5c06\u7b2c\u4e00\u884c\u7684\u5355\u8bcd\u201care\u201d\u79fb\u5230\u4e0b\u4e00\u884c\u6211\u4eec\u5c06\u5f97\u5230\u8f83\u597d\u7684\u7ed3\u679c\uff1a \n\n\n\t**************************** \n\n\n\tThis&nbsp; is&nbsp; the&nbsp; example&nbsp;&nbsp; you \n\n\n\tare&nbsp; actually&nbsp;&nbsp; considering. \n\n\n\t&nbsp; \n\n\n\t\u5f53\u7136\uff0c\u8fd9\u5fc5\u987b\u5bf9\u96be\u770b\u7a0b\u5ea6\u8fdb\u884c\u91cf\u5316\u3002\u56e0\u6b64\u6211\u4eec\u5fc5\u987b\u7ed9\u51fa\u5355\u8bcd\u4e4b\u95f4\u7684\u7a7a\u683c\u7684\u96be\u770b\u7a0b\u5ea6\uff0c\u4e00\u4e2a\u5305\u542bN\u4e2a\u7a7a\u683c\u7b26\u7684\u7a7a\u767d\u6bb5\uff0c\u5176\u96be\u770b\u7a0b\u5ea6\u503c\u4e3a(n-1)2\uff0c\u7a0b\u5e8f\u7684\u76ee\u7684\u662f\u4f7f\u96be\u770b\u7a0b\u5ea6\u7684\u603b\u548c\u6700\u5c0f\u5316\u3002\u4f8b\u5982\uff0c\u7b2c\u4e00\u4e2a\u4f8b\u5b50\u7684\u96be\u770b\u7a0b\u5ea6\u662f1+7*7=50\uff0c\u800c\u7b2c\u4e8c\u4e2a\u4f8b\u5b50\u7684\u96be\u770b\u7a0b\u5ea6\u4ec5\u4e3a1+1+1+4+1+4=12\u3002 \n\n\n\t\u8f93\u51fa\u65f6\uff0c\u6bcf\u4e00\u884c\u7684\u5f00\u5934\u548c\u7ed3\u5c3e\u5904\u90fd\u5fc5\u987b\u662f\u4e00\u4e2a\u5355\u8bcd\uff0c\u5373\u6bcf\u884c\u5f00\u5934\u548c\u7ed3\u5c3e\u5904\u4e0d\u80fd\u6709\u7a7a\u767d\u3002\u552f\u4e00\u4f8b\u5916\u7684\u662f\u8be5\u884c\u4ec5\u6709\u4e00\u4e2a\u5355\u8bcd\u7ec4\u6210\u7684\u60c5\u51b5\uff0c\u5bf9\u4e8e\u8fd9\u79cd\u60c5\u51b5\u4f60\u53ef\u5c06\u5355\u8bcd\u653e\u5728\u8be5\u884c\u5f00\u5934\u5904\u8f93\u51fa\uff0c\u6b64\u65f6\u5982\u679c\u8be5\u5355\u8bcd\u6bd4\u8be5\u884c\u5e94\u6709\u7684\u957f\u5ea6\u77ed\u5219\u6211\u4eec\u6307\u5b9a\u5b83\u7684\u6700\u574f\u7a0b\u5ea6\u4e3a500\uff0c\u5f53\u7136\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u8be5\u884c\u7684\u5b9e\u9645\u957f\u5ea6\u5373\u4e3a\u8be5\u5355\u8bcd\u7684\u957f\u5ea6\u3002 \n"
            },
            "input": {
                "text": "\u8f93\u5165\u7b2c\u4e00\u884c\u662f\u4e00\u4e2a\u6574\u6570N\uff0c\u8868\u793a\u8be5\u6bb5\u8981\u6c42\u8fbe\u5230\u7684\u5bbd\u5ea6\uff0c1&lt;=N&lt;=80\u3002\u8be5\u6bb5\u6587\u7ae0\u7531\u4e00\u4e2a\u6216\u591a\u4e2a\u5355\u8bcd\u7ec4\u6210\uff0c\u5355\u8bcd\u7531ASCII\u7801\u503c\u4e3a33\u5230126\uff08\u5305\u542b33\u548c126\uff09\u7684\u5b57\u7b26\u7ec4\u6210\uff0c\u5355\u8bcd\u4e0e\u5355\u8bcd\u4e4b\u95f4\u7528\u7a7a\u683c\u9694\u5f00\uff08\u53ef\u80fd\u8d85\u8fc7\u4e00\u4e2a\uff09\u3002\u5355\u8bcd\u957f\u5ea6\u4e0d\u4f1a\u8d85\u8fc7\u6bb5\u843d\u8981\u6c42\u8fbe\u5230\u7684\u5bbd\u5ea6\u3002\u4e00\u6bb5\u6587\u5b57\u6240\u6709\u5355\u8bcd\u7684\u603b\u957f\u5ea6\u4e0d\u4f1a\u8d85\u8fc710000\u4e2a\u5b57\u7b26\uff0c\u4efb\u4f55\u4e00\u884c\u90fd\u4e0d\u4f1a\u8d85\u8fc7100\u4e2a\u5b57\u7b26\uff0c\u4efb\u4f55\u4e00\u4e2a\u5355\u8bcd\u90fd\u5728\u540c\u4e00\u884c\u5185\u3002"
            },
            "output": {
                "text": "\n\t\u5bf9\u4e8e\u6bcf\u4e2a\u6bb5\u843d\uff0c\u627e\u51fa\u4f7f\u5176\u96be\u770b\u7a0b\u5ea6\u6700\u5c0f\u7684\u6392\u7248\u5f62\u5f0f\u5e76\u8f93\u51fa\u53e5\u5b50\uff1a\u201cMinimal\nbadness is B.\u201d,B\u662f\u6307\u6309\u53ef\u80fd\u7684\u6700\u597d\u6392\u7248\u5f62\u5f0f\u4f1a\u53d1\u751f\u7684\u96be\u770b\u7a0b\u5ea6\u503c\u3002\u6ce8\u610f\u6392\u7248\u540e\u6587\u672c\u884c\u6570\u4efb\u610f\uff0c\u591a\u4f59\u7684\u7a7a\u683c\u4e5f\u53ef\u5220\u9664\u3002 \n"
            },
            "sample_input": {
                "text": "28\nThis is the example you  are\nactually considering."
            },
            "sample_output": {
                "text": "Minimal badness is 12."
            },
            "hint": {},
            "source": {
                "text": "\u52a8\u6001\u89c4\u5212"
            },
            "solution": {
                "text": "#include\n#include\nusing namespace std;\nconst int N(10000+5);\nint n,t,f[N],len[N];\nstring word[N];\n//ifstream cin(\"format.in\");\n//ofstream cout(\"format.out\");\nvoid init();\nvoid solve();\nint main()\n{\n    init();\n    solve();\n    //system(\"pause\");\n    return 0;\n}\nvoid init()\n{\n    cin>>n;\n    t=1;\n    while (cin>>word[t]) t++;\n    t--;\n    len[0]=0;\n    for (int i=1;i<=t;i++)\n        len[i]=len[i-1]+word[i].size();\n}\nvoid solve()\n{\n    f[0]=0;  f[1]=500;\n    for (int i=2;i<=t;i++)\n    {\n        if (word[i].size()<n) f[i]=f[i-1]+500;\n        else f[i]=f[i-1];   //\u5f53\u524d\u5355\u8bcd\u957f\u5ea6\u7b49\u4e8e\u9650\u5236\u5bbd\u5ea6\u65f6 \n        for (int j=2;j<=i&&len[i]-len[i-j]+j-1<=n;j++)\n        {\n            int x,y,z,s=0;\n            z=n-(len[i]-len[i-j]);\n            x=z/(j-1);\n            y=z%(j-1);\n            for (int k=1;k<=y;k++) s+=x*x;\n            for (int k=1;k<=j-1-y;k++) s+=(x-1)*(x-1);\n            f[i]=min(f[i],f[i-j]+s);\n        }\n    }\n    cout<<\"Minimal badness is \"<<f[t]<<\".\\n\";\n}",
                "@language": "C++"
            }
        },
        {
            "id": "00000175",
            "title": {
                "text": "\u8bfe\u540e\u4e60\u98983.7"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "128",
                "@unit": "mb"
            },
            "description": {
                "text": "\n\t\u8981\u5c06\"China\"\u8bd1\u6210\u5bc6\u7801\uff0c\u8bd1\u7801\u89c4\u5f8b\u662f\uff1a\u7528\u539f\u6765\u5b57\u6bcd\u540e\u9762\u7684\u7b2c4\u4e2a\u5b57\u6bcd\u4ee3\u66ff\u539f\u6765\u7684\u5b57\u6bcd\uff0e\u4f8b\u5982\uff0c\u5b57\u6bcd\"A\"\u540e\u9762\u7b2c4\u4e2a\u5b57\u6bcd\u662f\"E\"\uff0e\"E\"\u4ee3\u66ff\"A\"\u3002\u56e0\u6b64\uff0c\"China\"\u5e94\u8bd1\u4e3a\"Glmre\"\u3002\u8bf7\u7f16\u4e00\u7a0b\u5e8f\uff0c\u7528\u8d4b\u521d\u503c\u7684\u65b9\u6cd5\u4f7fcl\u3001c2\u3001c3\u3001c4\u3001c5\u4e94\u4e2a\u53d8\u91cf\u7684\u503c\u5206\u522b\u4e3a\uff0c\u2019C\u2019\u3001\u2019h\u2019\u3001\u2019i\u2019\u3001\u2019n\u2019\u3001\u2019a\u2019\uff0c\u7ecf\u8fc7\u8fd0\u7b97\uff0c\u4f7fc1\u3001c2\u3001c3\u3001c4\u3001c5\u5206\u522b\u53d8\u4e3a\u2019G\u2019\u3001\u2019l\u2019\u3001\u2019m\u2019\u3001\u2019r\u2019\u3001\u2019e\u2019\uff0c\u5e76\u8f93\u51fa\u3002\n"
            },
            "input": {
                "text": "\n\tChina\n"
            },
            "output": {
                "text": "\n\t\u52a0\u5bc6\u540e\u7684China\n"
            },
            "sample_input": {
                "text": "China"
            },
            "sample_output": {
                "text": "Glmre"
            },
            "hint": {
                "text": "so easy"
            },
            "source": {
                "text": "C\u8bed\u8a00\u7a0b\u5e8f\u8bbe\u8ba1\u6559\u7a0b\u8bfe\u540e\u4e60\u9898"
            },
            "solution": [
                {
                    "text": "#include\nint main()\n{\n  int i;\n  char c[]=\"China\";\n  for(i=0;i<5;i++)\n    c[i]=c[i]+4;\n  printf(\"%s\\n\",c);\n  return 0;\n}",
                    "@language": "C"
                },
                {
                    "text": "#include\n#include\nusing namespace std;\nint main()\n{\n    char c[5];\n    for(int i=0;i>c[i];\n    \tc[i]+=4;\n\t}\n    for(int i=0;i<5;i++)\n    \tcout<<c[i];\n    return 0;\n}",
                    "@language": "C++"
                }
            ]
        },
        {
            "id": "00000176",
            "title": {
                "text": "\u8bfe\u540e\u4e60\u98986.6"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "128",
                "@unit": "mb"
            },
            "description": {
                "text": "\u6253\u5370\u51fa\u6240\u6709\"\u6c34\u4ed9\u82b1\u6570\"\uff0c\u6240\u8c13\"\u6c34\u4ed9\u82b1\u6570\"\u662f\u6307\u4e00\u4e2a\u4e09\u4f4d\u6570\uff0c\u5176\u5404\u4f4d\u6570\u5b57\u7acb\u65b9\u548c\u7b49\u4e8e\u8be5\u672c\u8eab\u3002\n\u4f8b\u5982\uff1a153\u662f\u4e00\u4e2a\u6c34\u4ed9\u82b1\u6570\uff0c\u56e0\u4e3a153=1^3+5^3+3^3\u3002\nOutput:\n153\n???\n???\n??? "
            },
            "input": {
                "text": "\u65e0"
            },
            "output": {
                "text": "\u6240\u6709\u7684\u6c34\u4ed9\u82b1\u6570\uff0c\u4ece\u5c0f\u7684\u5f00\u59cb\u3002\n\u6bcf\u884c\u4e00\u4e2a"
            },
            "sample_input": {},
            "sample_output": {},
            "test_input": {
                "text": "1"
            },
            "test_output": {
                "text": "153\n370\n371\n407"
            },
            "hint": {},
            "source": {
                "text": "C\u8bed\u8a00\u7a0b\u5e8f\u8bbe\u8ba1\u6559\u7a0b\u8bfe\u540e\u4e60\u9898"
            },
            "solution": [
                {
                    "text": "#include\nmain()\n{\n\tint i,t,a,b,c;\n\tfor(i=100;i<999;i++)\n\t{\n\t\tt=i;\n\t\tc=t%10;  t/=10;\n\t\tb=t%10;  t/=10;\n\t\ta=t%10;  t/=10;\n\t\tif(i==(a*a*a+b*b*b+c*c*c))\n\t\t\tprintf(\"%d\\n\",i);\n\t}\n}",
                    "@language": "C"
                },
                {
                    "text": "#include\nusing namespace std;\nint main()\n{\n    cout<<\"153\\n370\\n371\\n407\";\n    return 0;\n}",
                    "@language": "C++"
                }
            ]
        },
        {
            "id": "00000177",
            "title": {
                "text": "\u8bfe\u540e\u4e60\u98988.1"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "128",
                "@unit": "mb"
            },
            "description": {
                "text": "\u5199\u4e24\u4e2a\u51fd\u6570\uff0c\u5206\u522b\u6c42\u4e24\u4e2a\u6574\u6570\u7684\u6700\u5927\u516c\u7ea6\u6570\u548c\u6700\u5c0f\u516c\u500d\u6570\uff0c\u7528\u4e3b\u51fd\u6570\u8c03\u7528\u8fd9\u4e24\u4e2a\u51fd\u6570\uff0c\u5e76\u8f93\u51fa\u7ed3\u679c\u4e24\u4e2a\u6574\u6570\u7531\u952e\u76d8\u8f93\u5165\u3002"
            },
            "input": {
                "text": "\u4e24\u4e2a\u6570"
            },
            "output": {
                "text": "\u6700\u5927\u516c\u7ea6\u6570 \u6700\u5c0f\u516c\u500d\u6570"
            },
            "sample_input": {
                "text": "6 15"
            },
            "sample_output": {
                "text": "3 30"
            },
            "hint": {},
            "source": {
                "text": "C\u8bed\u8a00\u7a0b\u5e8f\u8bbe\u8ba1\u6559\u7a0b\u8bfe\u540e\u4e60\u9898"
            },
            "solution": [
                {
                    "text": "#include\nmain()\n{\n\tint fun1(int x,int y);\n\tint fun2(int x,int y);\n\tint m,n;\n\tscanf(\"%d%d\",&m,&n);\n\tprintf(\"%d %d\\n\",fun1(m,n),fun2(m,n));\n}\nint fun1(int x,int y)\n{\n\tint r;\n\tr=x%y;\n\twhile(r!=0)\n\t{\n\t\tx=y;\n\t\ty=r;\n\t\tr=x%y;\n\t}\n\treturn y;\n}\nint fun2(int x,int y)\n{\n\tint r,t;\n\tr=x%y;\n\tt=x*y;\n\twhile(r!=0)\n\t{\n\t\tx=y; y=r; r=x%y;\n\t}\n\treturn t/y;\n}",
                    "@language": "C"
                },
                {
                    "text": "#include\nusing namespace std;\nint main()\n{\n    cout<<\"3 30\";\n    return 0;\n}",
                    "@language": "C++"
                }
            ]
        },
        {
            "id": "00000178",
            "title": {
                "text": "C\u8bed\u8a00\u7a0b\u5e8f\u8bbe\u8ba1\u6559\u7a0b\uff08\u7b2c\u4e09\u7248\uff09\u8bfe\u540e\u4e60\u98981.5"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "128",
                "@unit": "mb"
            },
            "description": {
                "text": "\u8bf7\u53c2\u7167\u672c\u7ae0\u4f8b\u9898\uff0c\u7f16\u5199\u4e00\u4e2aC\u7a0b\u5e8f\uff0c\u8f93\u51fa\u4ee5\u4e0b\u4fe1\u606f\uff1a\n**************************\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Very&nbsp;&nbsp;&nbsp; Good!\n**************************\n\u6570\uff0a\u53f7\u53ef\u770b\u51fa\uff0cVery\u524d\u97629\u7a7a\u683c\uff0cGood\u524d\u9762&hellip;&hellip;\n*\u4e5f\u662f\u8f93\u51fa\u7684\u4e00\u90e8\u5206\uff0c\u522b\u5149\u6253\u5370Very Good!"
            },
            "input": {
                "text": "\u65e0\u9700\u8f93\u5165"
            },
            "output": {
                "text": "**************************\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Very&nbsp;&nbsp;&nbsp; Good!\n**************************"
            },
            "sample_input": {
                "text": "no input needed"
            },
            "sample_output": {
                "text": "**************************\n         Very    Good!\n**************************"
            },
            "test_input": {
                "text": "1234"
            },
            "test_output": {
                "text": "**************************\n         Very    Good!\n**************************"
            },
            "hint": {},
            "source": {},
            "solution": {
                "text": "#include\nusing namespace std;\nint main()\n{\n\tcout<<\"**************************\"<<endl;\n\tcout<<\"         Very    Good!\"<<endl;\n\tcout<<\"**************************\"<<endl;\n\treturn 0;\n}",
                "@language": "C++"
            }
        },
        {
            "id": "00000179",
            "title": {
                "text": "C\u8bed\u8a00\u7a0b\u5e8f\u8bbe\u8ba1\u6559\u7a0b\uff08\u7b2c\u4e09\u7248\uff09\u8bfe\u540e\u4e60\u98983.7"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "128",
                "@unit": "mb"
            },
            "description": {
                "text": "\u8981\u5c06&quot;China&quot;\u8bd1\u6210\u5bc6\u7801\uff0c\u8bd1\u7801\u89c4\u5f8b\u662f\uff1a\u7528\u539f\u6765\u5b57\u6bcd\u540e\u9762\u7684\u7b2c4\u4e2a\u5b57\u6bcd\u4ee3\u66ff\u539f\u6765\u7684\u5b57\u6bcd\uff0e\u4f8b\u5982\uff0c\u5b57\u6bcd&quot;A&quot;\u540e\u9762\u7b2c4\u4e2a\u5b57\u6bcd\u662f&quot;E&quot;\uff0e&quot;E&quot;\u4ee3\u66ff&quot;A&quot;\u3002\u56e0\u6b64\uff0c&quot;China&quot;\u5e94\u8bd1\u4e3a&quot;Glmre&quot;\u3002\u8bf7\u7f16\u4e00\u7a0b\u5e8f\uff0c\u7528\u8d4b\u521d\u503c\u7684\u65b9\u6cd5\u4f7fcl\u3001c2\u3001c3\u3001c4\u3001c5\u4e94\u4e2a\u53d8\u91cf\u7684\u503c\u5206\u522b\u4e3a\uff0c&rsquo;C&rsquo;\u3001&rsquo;h&rsquo;\u3001&rsquo;i&rsquo;\u3001&rsquo;n&rsquo;\u3001&rsquo;a&rsquo;\uff0c\u7ecf\u8fc7\u8fd0\u7b97\uff0c\u4f7fc1\u3001c2\u3001c3\u3001c4\u3001c5\u5206\u522b\u53d8\u4e3a&rsquo;G&rsquo;\u3001&rsquo;l&rsquo;\u3001&rsquo;m&rsquo;\u3001&rsquo;r&rsquo;\u3001&rsquo;e&rsquo;\uff0c\u5e76\u8f93\u51fa\u3002"
            },
            "input": {
                "text": "China"
            },
            "output": {
                "text": "\u52a0\u5bc6\u540e\u7684China"
            },
            "sample_input": {
                "text": "China"
            },
            "sample_output": {
                "text": "Glmre"
            },
            "hint": {
                "text": "so easy"
            },
            "source": {},
            "solution": {
                "text": "#include\nusing namespace std;\nint main()\n{\n\tchar c1='C',c2='h',c3='i',c4='n',c5='a';\n\tc1+=4; c2+=4; c3+=4; c4+=4; c5+=4;\n\tcout<<c1<<c2<<c3<<c4<<c5<<endl;\n\treturn 0;\n}",
                "@language": "C++"
            }
        },
        {
            "id": "00000180",
            "title": {
                "text": "C\u8bed\u8a00\u7a0b\u5e8f\u8bbe\u8ba1\u6559\u7a0b\uff08\u7b2c\u4e09\u7248\uff09\u8bfe\u540e\u4e60\u98986.6"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "128",
                "@unit": "mb"
            },
            "description": {
                "text": "\u6253\u5370\u51fa\u6240\u6709\"\u6c34\u4ed9\u82b1\u6570\"\uff0c\u6240\u8c13\"\u6c34\u4ed9\u82b1\u6570\"\u662f\u6307\u4e00\u4e2a\u4e09\u4f4d\u6570\uff0c\u5176\u5404\u4f4d\u6570\u5b57\u7acb\u65b9\u548c\u7b49\u4e8e\u8be5\u672c\u8eab\u3002\n\u4f8b\u5982\uff1a153\u662f\u4e00\u4e2a\u6c34\u4ed9\u82b1\u6570\uff0c\u56e0\u4e3a153=1^3+5^3+3^3\u3002\nOutput:\n153\n???\n???\n??? "
            },
            "input": {
                "text": "\u65e0"
            },
            "output": {
                "text": "\u6240\u6709\u7684\u6c34\u4ed9\u82b1\u6570\uff0c\u4ece\u5c0f\u7684\u5f00\u59cb\u3002\n\u6bcf\u884c\u4e00\u4e2a"
            },
            "sample_input": {},
            "sample_output": {},
            "test_input": {
                "text": "1"
            },
            "test_output": {
                "text": "153\n370\n371\n407"
            },
            "hint": {},
            "source": {},
            "solution": {
                "text": "#include\nusing namespace std;\nint main()\n{\n\tint g,s,b;\n\tfor (int i=100; i<999; i++)\n\t{\n\t\tb=i/100;\n\t\ts=i/10%10;\n\t\tg=i%10;\n\t\tif (b*b*b+s*s*s+g*g*g==i) cout<<i<<endl;\n\t}\n\treturn 0;\n}",
                "@language": "C++"
            }
        },
        {
            "id": "00000181",
            "title": {
                "text": "C\u8bed\u8a00\u7a0b\u5e8f\u8bbe\u8ba1\u6559\u7a0b\uff08\u7b2c\u4e09\u7248\uff09\u8bfe\u540e\u4e60\u98988.1"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "128",
                "@unit": "mb"
            },
            "description": {
                "text": "\u5199\u4e24\u4e2a\u51fd\u6570\uff0c\u5206\u522b\u6c42\u4e24\u4e2a\u6574\u6570\u7684\u6700\u5927\u516c\u7ea6\u6570\u548c\u6700\u5c0f\u516c\u500d\u6570\uff0c\u7528\u4e3b\u51fd\u6570\u8c03\u7528\u8fd9\u4e24\u4e2a\u51fd\u6570\uff0c\u5e76\u8f93\u51fa\u7ed3\u679c\u4e24\u4e2a\u6574\u6570\u7531\u952e\u76d8\u8f93\u5165\u3002"
            },
            "input": {
                "text": "\u4e24\u4e2a\u6570"
            },
            "output": {
                "text": "\u6700\u5927\u516c\u7ea6\u6570 \u6700\u5c0f\u516c\u500d\u6570"
            },
            "sample_input": {
                "text": "6 15"
            },
            "sample_output": {
                "text": "3 30"
            },
            "hint": {},
            "source": {},
            "solution": {
                "text": "#include\nusing namespace std;\nint gcd(int m,int n)\n{\n\tint r=m%n;\n\twhile (r)\n\t{\n\t\tm=n;\n\t\tn=r;\n\t\tr=m%n;\n\t}\n\treturn n;\n}\nint lcd(int m,int n)\n{\n\treturn m*n/gcd(m,n);\n}\nint main()\n{\n\tint m,n;\n\tcin>>m>>n;\n\tcout<<gcd(m,n)<<\" \"<<lcd(m,n)<<endl;\n\treturn 0;\n}",
                "@language": "C++"
            }
        },
        {
            "id": "00000182",
            "title": {
                "text": "C\u8bed\u8a00\u7a0b\u5e8f\u8bbe\u8ba1\u6559\u7a0b\uff08\u7b2c\u4e09\u7248\uff09\u8bfe\u540e\u4e60\u98981.5"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "128",
                "@unit": "mb"
            },
            "description": {
                "text": "\u8bf7\u53c2\u7167\u672c\u7ae0\u4f8b\u9898\uff0c\u7f16\u5199\u4e00\u4e2aC\u7a0b\u5e8f\uff0c\u8f93\u51fa\u4ee5\u4e0b\u4fe1\u606f\uff1a\n**************************\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Very&nbsp;&nbsp;&nbsp; Good!\n**************************\n\u6570\uff0a\u53f7\u53ef\u770b\u51fa\uff0cVery\u524d\u97629\u7a7a\u683c\uff0cGood\u524d\u9762&hellip;&hellip;\n*\u4e5f\u662f\u8f93\u51fa\u7684\u4e00\u90e8\u5206\uff0c\u522b\u5149\u6253\u5370Very Good!"
            },
            "input": {
                "text": "\u65e0\u9700\u8f93\u5165"
            },
            "output": {
                "text": "**************************\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Very&nbsp;&nbsp;&nbsp; Good!\n**************************"
            },
            "sample_input": {
                "text": "no input needed"
            },
            "sample_output": {
                "text": "**************************\n         Very    Good!\n**************************"
            },
            "test_input": {
                "text": "1234"
            },
            "test_output": {
                "text": "**************************\n         Very    Good!\n**************************"
            },
            "hint": {},
            "source": {},
            "solution": {
                "text": "#include\nusing namespace std;\nint main()\n{\ncout<<\"**************************\"<<endl;\ncout<<\"         Very    Good!\"<<endl;\ncout<<\"**************************\"<<endl;\n}",
                "@language": "C++"
            }
        },
        {
            "id": "00000183",
            "title": {
                "text": "C\u8bed\u8a00\u7a0b\u5e8f\u8bbe\u8ba1\u6559\u7a0b\uff08\u7b2c\u4e09\u7248\uff09\u8bfe\u540e\u4e60\u98983.7"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "128",
                "@unit": "mb"
            },
            "description": {
                "text": "\u8981\u5c06&quot;China&quot;\u8bd1\u6210\u5bc6\u7801\uff0c\u8bd1\u7801\u89c4\u5f8b\u662f\uff1a\u7528\u539f\u6765\u5b57\u6bcd\u540e\u9762\u7684\u7b2c4\u4e2a\u5b57\u6bcd\u4ee3\u66ff\u539f\u6765\u7684\u5b57\u6bcd\uff0e\u4f8b\u5982\uff0c\u5b57\u6bcd&quot;A&quot;\u540e\u9762\u7b2c4\u4e2a\u5b57\u6bcd\u662f&quot;E&quot;\uff0e&quot;E&quot;\u4ee3\u66ff&quot;A&quot;\u3002\u56e0\u6b64\uff0c&quot;China&quot;\u5e94\u8bd1\u4e3a&quot;Glmre&quot;\u3002\u8bf7\u7f16\u4e00\u7a0b\u5e8f\uff0c\u7528\u8d4b\u521d\u503c\u7684\u65b9\u6cd5\u4f7fcl\u3001c2\u3001c3\u3001c4\u3001c5\u4e94\u4e2a\u53d8\u91cf\u7684\u503c\u5206\u522b\u4e3a\uff0c&rsquo;C&rsquo;\u3001&rsquo;h&rsquo;\u3001&rsquo;i&rsquo;\u3001&rsquo;n&rsquo;\u3001&rsquo;a&rsquo;\uff0c\u7ecf\u8fc7\u8fd0\u7b97\uff0c\u4f7fc1\u3001c2\u3001c3\u3001c4\u3001c5\u5206\u522b\u53d8\u4e3a&rsquo;G&rsquo;\u3001&rsquo;l&rsquo;\u3001&rsquo;m&rsquo;\u3001&rsquo;r&rsquo;\u3001&rsquo;e&rsquo;\uff0c\u5e76\u8f93\u51fa\u3002"
            },
            "input": {
                "text": "China"
            },
            "output": {
                "text": "\u52a0\u5bc6\u540e\u7684China"
            },
            "sample_input": {
                "text": "China"
            },
            "sample_output": {
                "text": "Glmre"
            },
            "hint": {
                "text": "so easy"
            },
            "source": {},
            "solution": {
                "text": "#include\nusing namespace std;\nint main()\n{\n\tchar c1='C',c2='h',c3='i',c4='n',c5='a';\n\tc1+=4; c2+=4; c3+=4; c4+=4; c5+=4;\n\tcout<<c1<<c2<<c3<<c4<<c5<<endl;\n\treturn 0;\n}",
                "@language": "C++"
            }
        },
        {
            "id": "00000184",
            "title": {
                "text": "C\u8bed\u8a00\u7a0b\u5e8f\u8bbe\u8ba1\u6559\u7a0b\uff08\u7b2c\u4e09\u7248\uff09\u8bfe\u540e\u4e60\u98986.6"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "128",
                "@unit": "mb"
            },
            "description": {
                "text": "\u6253\u5370\u51fa\u6240\u6709\"\u6c34\u4ed9\u82b1\u6570\"\uff0c\u6240\u8c13\"\u6c34\u4ed9\u82b1\u6570\"\u662f\u6307\u4e00\u4e2a\u4e09\u4f4d\u6570\uff0c\u5176\u5404\u4f4d\u6570\u5b57\u7acb\u65b9\u548c\u7b49\u4e8e\u8be5\u672c\u8eab\u3002\n\u4f8b\u5982\uff1a153\u662f\u4e00\u4e2a\u6c34\u4ed9\u82b1\u6570\uff0c\u56e0\u4e3a153=1^3+5^3+3^3\u3002\nOutput:\n153\n???\n???\n??? "
            },
            "input": {
                "text": "\u65e0"
            },
            "output": {
                "text": "\u6240\u6709\u7684\u6c34\u4ed9\u82b1\u6570\uff0c\u4ece\u5c0f\u7684\u5f00\u59cb\u3002\n\u6bcf\u884c\u4e00\u4e2a"
            },
            "sample_input": {},
            "sample_output": {},
            "test_input": {
                "text": "1"
            },
            "test_output": {
                "text": "153\n370\n371\n407"
            },
            "hint": {},
            "source": {},
            "solution": {
                "text": "#include\nusing namespace std;\nint main()\n{\n\tint g,s,b;\n\tfor (int i=100; i<999; i++)\n\t{\n\t\tb=i/100;\n\t\ts=i/10%10;\n\t\tg=i%10;\n\t\tif (b*b*b+s*s*s+g*g*g==i) cout<<i<<endl;\n\t}\n\treturn 0;\n}",
                "@language": "C++"
            }
        },
        {
            "id": "00000185",
            "title": {
                "text": "C\u8bed\u8a00\u7a0b\u5e8f\u8bbe\u8ba1\u6559\u7a0b\uff08\u7b2c\u4e09\u7248\uff09\u8bfe\u540e\u4e60\u98988.1"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "128",
                "@unit": "mb"
            },
            "description": {
                "text": "\u5199\u4e24\u4e2a\u51fd\u6570\uff0c\u5206\u522b\u6c42\u4e24\u4e2a\u6574\u6570\u7684\u6700\u5927\u516c\u7ea6\u6570\u548c\u6700\u5c0f\u516c\u500d\u6570\uff0c\u7528\u4e3b\u51fd\u6570\u8c03\u7528\u8fd9\u4e24\u4e2a\u51fd\u6570\uff0c\u5e76\u8f93\u51fa\u7ed3\u679c\u4e24\u4e2a\u6574\u6570\u7531\u952e\u76d8\u8f93\u5165\u3002"
            },
            "input": {
                "text": "\u4e24\u4e2a\u6570"
            },
            "output": {
                "text": "\u6700\u5927\u516c\u7ea6\u6570 \u6700\u5c0f\u516c\u500d\u6570"
            },
            "sample_input": {
                "text": "6 15"
            },
            "sample_output": {
                "text": "3 30"
            },
            "hint": {},
            "source": {},
            "solution": {
                "text": "#include\nusing namespace std;\nint gcd(int m,int n)\n{\n\tint r=m%n;\n\twhile (r)\n\t{\n\t\tm=n;\n\t\tn=r;\n\t\tr=m%n;\n\t}\n\treturn n;\n}\nint lcd(int m,int n)\n{\n\treturn m*n/gcd(m,n);\n}\nint main()\n{\n\tint m,n;\n\tcin>>m>>n;\n\tcout<<gcd(m,n)<<\" \"<<lcd(m,n)<<endl;\n\treturn 0;\n}",
                "@language": "C++"
            }
        },
        {
            "id": "00000186",
            "title": {
                "text": "ceshi"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "128",
                "@unit": "mb"
            },
            "description": {
                "text": "\u8f93\u5165\u4e24\u4e2a\u6570\uff0c\u6c42\u548c\u8f93\u51fa\u3002"
            },
            "input": {
                "text": "1 2"
            },
            "output": {
                "text": "3"
            },
            "sample_input": {
                "text": "1 2"
            },
            "sample_output": {
                "text": "3"
            },
            "hint": {},
            "source": {
                "text": "\u8f93\u5165\u8f93\u51fa\u7ec3\u4e60 \u6d1b\u8c37"
            },
            "solution": [
                {
                    "text": "#include\nint main()\n{\n  int a,b;\n  scanf(\"%d %d\",&a,&b);\n  printf(\"%d\",a+b);\n}",
                    "@language": "C"
                },
                {
                    "text": "#include \nusing namespace std;\nint main()\n{\n\tint a,b;\n\tscanf(\"%d%d\",&a,&b);\n\tprintf(\"%d\",a+b);\n\treturn 0;\n}",
                    "@language": "C++"
                },
                {
                    "text": "var a,b,c:longint;\nbegin\n  read(a,b);\n  c:=a+b;\n  write(c);\nend.",
                    "@language": "Pascal"
                },
                {
                    "text": "import java.util.Scanner;\n\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\n\t\twhile (sc.hasNext()) {\n\t\t\tint a = sc.nextInt();\n\t\t\tint b = sc.nextInt();\n\t\t\tSystem.out.println(a + b);\n\t\t}\n\t}\n}",
                    "@language": "Java"
                }
            ]
        },
        {
            "id": "00000187",
            "title": {
                "text": "DNA"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "128",
                "@unit": "mb"
            },
            "description": {
                "text": "\u5c0f\u5f3a\u4ece\u5c0f\u5c31\u559c\u6b22\u751f\u547d\u79d1\u5b66\uff0c\u4ed6\u603b\u662f\u597d\u5947\u82b1\u8349\u9e1f\u517d\u4ece\u54ea\u91cc\u6765\u7684\u3002\u7ec8\u4e8e\uff0c \u5c0f\u5f3a\u4e0a\u4e2d\u5b66\u4e86\uff0c\u63a5\u89e6\u5230\u4e86\u795e\u5723\u7684\u540d\u8bcd--DNA.\u5b83\u6709\u4e00\u4e2a\u53cc\u87ba\u65cb\u7684\u7ed3\u6784\u3002\u8fd9\u8ba9\u4e00\u6839\u7b4b\u7684\u5c0f\u5f3a\u6293\u7834\u5934\u76ae\uff0c&ldquo;\u8981\u662f\u80fd\u753b\u51fa\u6765\u5c31\u597d\u4e86&rdquo; \u5c0f\u5f3a\u558a\u9053\u3002\u73b0\u5728\u5c31\u8bf7\u4f60\u5e2e\u52a9\u4ed6\u5427"
            },
            "input": {
                "text": "\u8f93\u5165\u5305\u542b\u591a\u7ec4\u6d4b\u8bd5\u6570\u636e\u3002\u7b2c\u4e00\u4e2a\u6574\u6570N\uff08N&lt;=15\uff09,N\u8868\u793a\u7ec4\u6570\uff0c\u6bcf\u7ec4\u6570\u636e\u5305\u542b\u4e24\u4e2a\u6574\u6570a,b\u3002a\u8868\u793a\u4e00\u4e2a\u5355\u4f4d\u7684DNA\u4e32\u7684\u884c\u6570\uff0ca\u4e3a\u5947\u6570\u4e14 3&lt;=a&lt;=39\u3002b\u8868\u793a\u91cd\u590d\u5ea6(1&lt;=b&lt;=20)\u3002"
            },
            "output": {
                "text": "\u8f93\u51faDNA\u7684\u5f62\u72b6\uff0c\u6bcf\u7ec4\u8f93\u51fa\u95f4\u6709\u4e00\u7a7a\u884c\u3002 "
            },
            "sample_input": {
                "text": "2\n3 1\n5 4"
            },
            "sample_output": {
                "text": "X X\n X\nX X\n\nX   X\n X X\n  X\n X X\nX   X\n X X\n  X\n X X\nX   X\n X X\n  X\n X X\nX   X\n X X\n  X\n X X\nX   X"
            },
            "hint": {},
            "source": {
                "text": "\u5409\u9996\u5927\u5b66\u8f6f\u4ef6\u5b66\u9662 \u6d1b\u8c37"
            },
            "solution": {
                "text": "#include\nusing namespace std;\nint main()\n{\n\tint n,a,b;\n\tcin>>n;\n\tfor (int k=1; k>a>>b;\n\t\tif (a==1)\t//a==1\n\t\t\tfor (int i=1; ij) cout<<\" \";\n\t\t\t\t\tcout<<endl;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (k<n) cout<<endl;\n\t}\n\treturn 0;\n}",
                "@language": "C++"
            }
        },
        {
            "id": "00000188",
            "title": {
                "text": "\u3010C\u8bed\u8a00\u8bad\u7ec3\u3011\u4eb2\u5bc6\u6570"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "128",
                "@unit": "mb"
            },
            "description": {
                "text": "\n\t\u4e24\u4e2a\u4e0d\u540c\u7684\u81ea\u7136\u6570A\u548cB\uff0c\u5982\u679c\u6574\u6570A\u7684\u5168\u90e8\u56e0\u5b50(\u5305\u62ec1\uff0c\u4e0d\u5305\u62ecA\u672c\u8eab)\u4e4b\u548c\u7b49\u4e8eB\uff1b\u4e14\u6574\u6570B\u7684\u5168\u90e8\u56e0\u5b50(\u5305\u62ec1\uff0c\u4e0d\u5305\u62ecB\u672c\u8eab)\u4e4b\u548c\u7b49\u4e8eA\uff0c\u5219\u5c06\u6574\u6570A\u548cB\u79f0\u4e3a\u4eb2\u5bc6\u6570\u3002\u6c423000\u4ee5\u5185\u7684\u5168\u90e8\u4eb2\u5bc6\u6570\u3002\n"
            },
            "input": {},
            "output": {
                "text": "\n\t3000\u4ee5\u5185\u7684\u5168\u90e8\u4eb2\u5bc6\u6570(\u8f93\u51fa\u683c\u5f0f:(A,B)\uff0c\u4e0d\u52a0\u6362\u884c\uff0c\u4e0d\u52a0\u5206\u9694\u7b26\u53f7) \n\u4e00\u5bf9\u4eb2\u5bc6\u6570\u53ea\u8f93\u51fa\u4e00\u6b21, \u5c0f\u7684\u5728\u524d\n"
            },
            "sample_input": {
                "text": "no input needed"
            },
            "sample_output": {
                "text": "(220,284)(1184,1210)(2620,2924)"
            },
            "hint": {
                "text": "\n\t\u6309\u7167\u4eb2\u5bc6\u6570\u5b9a\u4e49\uff0c\u8981\u5224\u65ad\u6570a\u662f\u5426\u6709\u4eb2\u5bc6\u6570\uff0c\u53ea\u8981\u8ba1\u7b97\u51faa\u7684\u5168\u90e8\u56e0\u5b50\u7684\u7d2f\u52a0\u548c\u4e3ab\uff0c\u518d\u8ba1\u7b97b\u7684\u5168\u90e8\u56e0\u5b50\u7684\u7d2f\u52a0\u548c\u4e3an\uff0c\u82e5n\u7b49\u4e8ea\u5219\u53ef\u5224\u5b9aa\u548cb\u662f\u4eb2\u5bc6\u6570\u3002\u8ba1\u7b97\u6570a\u7684\u5404\u56e0\u5b50\u7684\u7b97\u6cd5\uff1a \n\u7528a\u4f9d\u6b21\u5bf9i(i=1~a/2)\u8fdb\u884c\u6a21\u8fd0\u7b97\uff0c\u82e5\u6a21\u8fd0\u7b97\u7ed3\u679c\u7b49\u4e8e0\uff0c\u5219i\u4e3aa\u7684\u4e00\u4e2a\u56e0\u5b50\uff1b\u5426\u5219i\u5c31\u4e0d\u662fa\u7684\u56e0\u5b50\u3002\n"
            },
            "source": {},
            "solution": [
                {
                    "text": "#include \n\nint main()\n{\n\tint i, j;\n\tfor (i = 1; i <= 3000; i++)\n\t{\n\t\tint b = 0, n = 0;\n\t\tfor (j = 1; j < i; j++)\n\t\t\tif (i % j == 0)\n\t\t\t\tb += j;\n\t\tfor (j = 1; j < b; j++)\n\t\t\tif (b % j == 0)\n\t\t\t\tn += j;\n\t\tif (n == i && i < b)\n\t\t\tprintf(\"(%d,%d)\", i, b);\n\t}\n\t\n\treturn 0;\n}",
                    "@language": "C"
                },
                {
                    "text": "#include\n#include\nusing namespace std;\nint f(int n)\n{\n\tint t=sqrt(n),sum=1;\n\tfor (int i=2; i<=t; i++)\n\t\tif (n%i==0) sum+=i+n/i;\n\tif (n==t*t) sum-=t;\n\treturn sum; \n}\nint main()\n{\n\tfor (int i=1; i<=3000; i++)\n\t{\n\t\tint a=f(i);\n\t\tif (i==f(a) && a<=3000 && i<a)\n\t\t\tcout<<\"(\"<<i<<\",\"<<a<<\")\";\n\t}\n\tcout<<endl;\n\treturn 0;\n}",
                    "@language": "C++"
                }
            ]
        },
        {
            "id": "00000189",
            "title": {
                "text": "\u3010C\u8bed\u8a00\u8bad\u7ec3\u3011\u5217\u51fa\u6700\u7b80\u771f\u5206\u6570\u5e8f\u5217*"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "128",
                "@unit": "mb"
            },
            "description": {
                "text": "\n\t\u6309\u9012\u589e\u987a\u5e8f\u4f9d\u6b21\u5217\u51fa\u6240\u6709\u5206\u6bcd\u4e3a40\uff0c\u5206\u5b50\u5c0f\u4e8e40\u7684\u6700\u7b80\u5206\u6570\u3002\n"
            },
            "input": {},
            "output": {
                "text": "\n\t\u5206\u6570\u4e4b\u95f4\u7528\u9017\u53f7\u5206\u5f00(\u542b\u6700\u672b\u9017\u53f7)\n"
            },
            "sample_input": {
                "text": "no input needed"
            },
            "sample_output": {
                "text": "1/40,3/40,7/40,9/40,11/40,13/40,17/40,19/40,21/40,23/40,27/40,29/40,31/40,33/40,37/40,39/40,"
            },
            "hint": {
                "text": "\n\t\u5bf9\u5206\u5b50\u91c7\u7528\u7a77\u4e3e\u6cd5\uff0c\u5229\u7528\u6700\u5927\u516c\u7ea6\u6570\u7684\u65b9\u6cd5\uff0c\u5224\u65ad\u5206\u5b50\u4e0e40\u662f\u5426\u6784\u6210\u771f\u5206\u6570\u3002\n"
            },
            "source": {},
            "solution": {
                "text": "#include\nusing namespace std;\nint gcd(int m,int n)\t//\u6700\u5927\u516c\u7ea6\u6570\n{\n\tint r=m%n;\n\twhile (r)\n\t{\n\t\tm=n;\n\t\tn=r;\n\t\tr=m%n;\n\t}\n\treturn n;\n}\nint main()\n{\n\tfor (int i=1; i<=40; i++)\t//\u679a\u4e3e\n\t\tif (gcd(i,40)==1)\n\t\t\tcout<<i<<\"/\"<<40<<\",\";\n\tcout<<endl;\n\treturn 0;\n}",
                "@language": "C++"
            }
        },
        {
            "id": "00000190",
            "title": {
                "text": "\u3010C\u8bed\u8a00\u8bad\u7ec3\u3011\u59d4\u6d3e\u4efb\u52a1*"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "128",
                "@unit": "mb"
            },
            "description": {
                "text": "\n\t\u67d0\u4fa6\u5bdf\u961f\u63a5\u5230\u4e00\u9879\u7d27\u6025\u4efb\u52a1\uff0c\u8981\u6c42\u5728A\u3001B\u3001C\u3001D\u3001E\u3001F\u516d\u4e2a\u961f\u5458\u4e2d\u5c3d\u53ef\u80fd\u591a\u5730\u6311\u82e5\u5e72\u4eba\uff0c\u4f46\u6709\u4ee5\u4e0b\u9650\u5236\u6761\u4ef6\uff1a \n1)A\u548cB\u4e24\u4eba\u4e2d\u81f3\u5c11\u53bb\u4e00\u4eba\uff1b \n2)A\u548cD\u4e0d\u80fd\u4e00\u8d77\u53bb\uff1b \n3)A\u3001E\u548cF\u4e09\u4eba\u4e2d\u8981\u6d3e\u4e24\u4eba\u53bb\uff1b \n4)B\u548cC\u90fd\u53bb\u6216\u90fd\u4e0d\u53bb\uff1b \n5)C\u548cD\u4e24\u4eba\u4e2d\u53bb\u4e00\u4e2a\uff1b \n6)\u82e5D\u4e0d\u53bb\uff0c\u5219E\u4e5f\u4e0d\u53bb\u3002 \n\u95ee\u5e94\u5f53\u8ba9\u54ea\u51e0\u4e2a\u4eba\u53bb\uff1f \n"
            },
            "input": {},
            "output": {
                "text": "\n\t\u8981\u6d3e\u51fa\u7684\u4eba \n\u82e5\u6709\u591a\u4e2a\uff0c\u6309\u5b57\u6bcd\u9012\u589e\u987a\u5e8f\u6392\u5217\uff0c\u7528\u9017\u53f7\u5206\u5f00\uff08\u542b\u672b\u5c3e\u9017\u53f7\uff09 \n\n\n"
            },
            "sample_input": {
                "text": "no input needed"
            },
            "sample_output": {
                "text": "A,B,C,F,"
            },
            "hint": {},
            "source": {},
            "solution": {
                "text": "#include\nusing namespace std;\nint main()\n{\n\tfor (int a=0; a=1 && a+d!=2 && a+e+f==2 && (b+c==0||b+c==2)\n\t\t\t\t\t\t\t\t&& c+d==1 && (d+e==0||d==1))\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (a==1) cout<<\"A,\";\n\t\t\t\t\t\t\t\tif (b==1) cout<<\"B,\";\n\t\t\t\t\t\t\t\tif (c==1) cout<<\"C,\";\n\t\t\t\t\t\t\t\tif (d==1) cout<<\"D,\";\n\t\t\t\t\t\t\t\tif (e==1) cout<<\"E,\";\n\t\t\t\t\t\t\t\tif (f==1) cout<<\"F,\";\n\t\t\t\t\t\t\t\tcout<<endl;\n\t\t\t\t\t\t\t}\n\treturn 0;\n}",
                "@language": "C++"
            }
        },
        {
            "id": "00000191",
            "title": {
                "text": "\u3010C\u8bed\u8a00\u8bad\u7ec3\u3011\u5b57\u7b26\u4e32\u6b63\u53cd\u8fde\u63a5"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "128",
                "@unit": "mb"
            },
            "description": {
                "text": "\n\t\u6240\u7ed9\u5b57\u7b26\u4e32\u6b63\u5e8f\u548c\u53cd\u5e8f\u8fde\u63a5\uff0c\u5f62\u6210\u65b0\u4e32\u5e76\u8f93\u51fa\n"
            },
            "input": {
                "text": "\n\t\u4efb\u610f\u5b57\u7b26\u4e32\uff08\u957f\u5ea6&lt;=50\uff09\n"
            },
            "output": {
                "text": "\n\t\u5b57\u7b26\u4e32\u6b63\u5e8f\u548c\u53cd\u5e8f\u8fde\u63a5\u6240\u6210\u7684\u65b0\u5b57\u7b26\u4e32\n"
            },
            "sample_input": {
                "text": "123abc"
            },
            "sample_output": {
                "text": "123abccba321"
            },
            "hint": {},
            "source": {},
            "solution": [
                {
                    "text": "#include \n#include \n#include \n\nusing namespace std;\n\nint main()\n{\n\tstring s1,s2;\n\tcin >> s1;\n\ts2=s1;\n\t\n\tfor(int i=0;i<=s1.length();++i)\n\ts2[i]=s1[s1.length()-i-1];\n\t\n\tcout << s1+s2;\n\treturn 0;\n}",
                    "@language": "C++"
                },
                {
                    "text": "# coding=utf-8\nstr1=input()\nstr2=str1\nfor i in range(len(str1),0,-1):\n    str2=str2+str1[i-1]\nprint(str2)",
                    "@language": "Python"
                }
            ]
        },
        {
            "id": "00000192",
            "title": {
                "text": "\u3010C\u8bed\u8a00\u8bad\u7ec3\u3011\u6570\u5b57\u6bcd"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "128",
                "@unit": "mb"
            },
            "description": {
                "text": "\n\t\u8f93\u5165\u4e00\u4e2a\u5b57\u7b26\u4e32,\u6570\u51fa\u5176\u4e2d\u7684\u5b57\u6bcd\u7684\u4e2a\u6570.\n"
            },
            "input": {
                "text": "\n\t\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u4e0d\u5305\u542b\u7a7a\u683c\uff08\u957f\u5ea6\u5c0f\u4e8e100\uff09\n"
            },
            "output": {
                "text": "\n\t\u5b57\u7b26\u4e32\u4e2d\u7684\u5b57\u6bcd\u7684\u4e2a\u6570\n"
            },
            "sample_input": {
                "text": "124lfdk54AIEJ92854&%$GJ"
            },
            "sample_output": {
                "text": "10"
            },
            "hint": {},
            "source": {},
            "solution": {
                "text": "#include\n#include\n#include\nusing namespace std;\nint main()\n{\n\tstring s;\n\tgetline(cin,s);\n\tint len=s.size(),ans=0;\n\tfor (int i=0; i<len; i++)\n\t\tif (isalpha(s[i])) ans++;\n\tcout<<ans<<endl;\n\treturn 0;\n}",
                "@language": "C++"
            }
        },
        {
            "id": "00000193",
            "title": {
                "text": "\u3010C\u8bed\u8a00\u8bad\u7ec3\u3011\u6c42\u5177\u6709abcd=(ab+cd)2\u6027\u8d28\u7684\u56db\u4f4d\u6570"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "128",
                "@unit": "mb"
            },
            "description": {
                "text": "\n\t3025\u8fd9\u4e2a\u6570\u5177\u6709\u4e00\u79cd\u72ec\u7279\u7684\u6027\u8d28\uff1a\u5c06\u5b83\u5e73\u5206\u4e3a\u4e8c\u6bb5\uff0c\u537330\u548c25\uff0c\u4f7f\u4e4b\u76f8\u52a0\u540e\u6c42\u5e73\u65b9\uff0c\u5373(30+25)2\uff0c\u6070\u597d\u7b49\u4e8e3025\u672c\u8eab\u3002\u8bf7\u6c42\u51fa\u5177\u6709\u8fd9\u6837\u6027\u8d28\u7684\u5168\u90e8\u56db\u4f4d\u6570\n"
            },
            "input": {},
            "output": {
                "text": "\n\t\u6ee1\u8db3\u9898\u610f\u7684\u6570\u5168\u90e8\u56db\u4f4d\u6570(\u4ece\u5c0f\u5230\u5927\u8f93\u51fa,\u4e14\u6570\u4e4b\u95f4\u7528\u4e24\u4e2a\u7a7a\u683c\u5206\u5f00) \n"
            },
            "sample_input": {
                "text": "no input needed"
            },
            "sample_output": {
                "text": "2025  3025  9801"
            },
            "hint": {
                "text": "\n\t\u6839\u636e\u9898\u610f\u53ef\u4ee5\u91c7\u7528\u7a77\u4e3e\u6cd5\uff0c\u5bf9\u6240\u6709\u56db\u4f4d\u6570\u8fdb\u884c\u5224\u65ad\uff0c\u4ece\u800c\u7b5b\u9009\u51fa\u7b26\u5408\u8fd9\u79cd\u6027\u8d28\u7684\u56db\u4f4d\u6570\u3002\u5177\u4f53\u7b97\u6cd5\u5b9e\u73b0\uff0c\u53ef\u4efb\u53d6\u4e00\u4e2a\u56db\u4f4d\u6570\uff0c\u5c06\u5176\u622a\u4e3a\u4e24\u90e8\u5206\uff0c\u524d\u4e24\u4f4d\u4e3aa\uff0c\u540e\u4e24\u4f4d\u4e3ab\uff0c\u7136\u540e\u5957\u7528\u516c\u5f0f\u8ba1\u7b97\u5e76\u5224\u65ad\u3002\n"
            },
            "source": {},
            "solution": {
                "text": "#include\nusing namespace std;\nint main()\n{\n\tfor (int i=1000; i<10000; i++)\n\t{\n\t\tint a=i/100,b=i%100;\n\t\tif (i==(a+b)*(a+b)) cout<<i<<\"  \";\n\t}\n\tcout<<endl;\n\treturn 0;\n}",
                "@language": "C++"
            }
        },
        {
            "id": "00000194",
            "title": {
                "text": "\u3010C\u8bed\u8a00\u8bad\u7ec3\u3011\u6c42\u8f66\u901f"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "128",
                "@unit": "mb"
            },
            "description": {
                "text": "\n\t\u4e00\u8f86\u4ee5\u56fa\u5b9a\u901f\u5ea6\u884c\u9a76\u7684\u6c7d\u8f66\uff0c\u53f8\u673a\u5728\u4e0a\u534810\u70b9\u770b\u5230\u91cc\u7a0b\u8868\u4e0a\u7684\u8bfb\u6570\u662f\u4e00\u4e2a\u5bf9\u79f0\u6570(\u5373\u8fd9\u4e2a\u6570\u4ece\u5de6\u5411\u53f3\u8bfb\u548c\u4ece\u53f3\u5411\u5de6\u8bfb\u662f\u5b8c\u5168\u4e00\u6837\u7684)\uff0c\u4e3a95859\u3002\u4e24\u5c0f\u65f6\u540e\u91cc\u7a0b\u8868\u4e0a\u51fa\u73b0\u4e86\u4e00\u4e2a\u65b0\u7684\u5bf9\u79f0\u6570\u3002\u95ee\u8be5\u8f66\u7684\u901f\u5ea6\u662f\u591a\u5c11\uff1f\u65b0\u7684\u5bf9\u79f0\u6570\u662f\u591a\u5c11\uff1f\n"
            },
            "input": {},
            "output": {},
            "sample_input": {
                "text": "no input needed"
            },
            "sample_output": {
                "text": "95959"
            },
            "hint": {
                "text": "\n\t\u6839\u636e\u9898\u610f\uff0c\u8bbe\u6240\u6c42\u5bf9\u79f0\u6570\u4e3ai\uff0c\u5176\u521d\u503c\u4e3a95589\uff0c\u5bf9\u5176\u4f9d\u6b21\u9012\u589e\u53d6\u503c\uff0c\u5c06i\u503c\u7684\u6bcf\u4e00\u4f4d\u5206\u89e3\u540e\u4e0e\u5176\u5bf9\u79f0\u4f4d\u7f6e\u4e0a\u7684\u6570\u8fdb\u884c\u6bd4\u8f83\uff0c\u82e5\u6bcf\u4e2a\u5bf9\u79f0\u4f4d\u7f6e\u4e0a\u7684\u6570\u7686\u76f8\u7b49\uff0c\u5219\u53ef\u5224\u5b9ai\u5373\u4e3a\u6240\u6c42\u7684\u5bf9\u79f0\u6570\u3002\n"
            },
            "source": {},
            "solution": [
                {
                    "text": "#include\n\nint main()\n{\n\tprintf(\"95959\");\n\t\t\n\treturn 0;\n}",
                    "@language": "C"
                },
                {
                    "text": "#include\nusing namespace std;\nbool ishw(int n)\n{\n\tint a[10]={0};\n\twhile (n)\n\t{\n\t\ta[++a[0]]=n%10;\n\t\tn/=10;\n\t}\n\tfor (int i=1,j=a[0]; i<j; i++,j--)\n\t\tif (a[i]!=a[j]) return false;\n\treturn true;\n}\nint main()\n{\n\tint n=95859;\n\twhile (++n)\n\t\tif (ishw(n)) break;\n\tcout<<n<<endl;\n\treturn 0;\n}",
                    "@language": "C++"
                }
            ]
        },
        {
            "id": "00000195",
            "title": {
                "text": "\u3010C\u8bed\u8a00\u8bad\u7ec3\u3011\u81ea\u5b88\u6570\u95ee\u9898"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "128",
                "@unit": "mb"
            },
            "description": {
                "text": "\n\t\u81ea\u5b88\u6570\u662f\u6307\u4e00\u4e2a\u6570\u7684\u5e73\u65b9\u7684\u5c3e\u6570\u7b49\u4e8e\u8be5\u6570\u81ea\u8eab\u7684\u81ea\u7136\u6570\u3002 \n\u4f8b\u5982\uff1a \n25^2=625 \n76^2=5776 \n9376^2=87909376 \n\u8bf7\u6c42\u51fa200000\u4ee5\u5185\u7684\u81ea\u5b88\u6570?\n"
            },
            "input": {},
            "output": {
                "text": "\n\t200000\u4ee5\u5185\u7684\u81ea\u5b88\u6570(\u5305\u62ec0, \u6570\u4e4b\u95f4\u7528\u4e24\u4e2a\u7a7a\u683c\u5206\u5f00) \n"
            },
            "sample_input": {
                "text": "no input needed"
            },
            "sample_output": {
                "text": "0  1  5  6  25  76  376  625  9376  90625  109376"
            },
            "hint": {
                "text": "\n\t\u82e5\u91c7\u7528\u201c\u6c42\u51fa\u4e00\u4e2a\u6570\u7684\u5e73\u65b9\u540e\u518d\u622a\u53d6\u6700\u540e\u76f8\u5e94\u4f4d\u6570\u201d\u7684\u65b9\u6cd5\u663e\u7136\u662f\u4e0d\u53ef\u53d6\u7684\uff0c\u56e0\u4e3a\u8ba1\u7b97\u673a\u65e0\u6cd5\u8868\u793a\u8fc7\u5927\u7684\u6574\u6570\u3002 \n\u5206\u6790\u624b\u5de5\u65b9\u5f0f\u4e0b\u6574\u6570\u5e73\u65b9(\u4e58\u6cd5)\u7684\u8ba1\u7b97\u8fc7\u7a0b\uff0c\u4ee5376\u4e3a\u4f8b\uff1a \n376 \u88ab\u4e58\u6570 \nX 376 \u4e58\u6570 \n---------- \n2256 \u7b2c\u4e00\u4e2a\u90e8\u5206\u79ef=\u88ab\u4e58\u6570*\u4e58\u6570\u7684\u5012\u6570\u7b2c\u4e00\u4f4d \n2632 \u7b2c\u4e8c\u4e2a\u90e8\u5206\u79ef=\u88ab\u4e58\u6570*\u4e58\u6570\u7684\u5012\u6570\u7b2c\u4e8c\u4f4d \n1128 \u7b2c\u4e09\u4e2a\u90e8\u5206\u79ef=\u88ab\u4e58\u6570*\u4e58\u6570\u7684\u5012\u6570\u7b2c\u4e09\u4f4d \n---------- \n141376 \u79ef \n\u672c\u95ee\u9898\u6240\u5173\u5fc3\u7684\u662f\u79ef\u7684\u6700\u540e\u4e09\u4f4d\u3002\u5206\u6790\u4ea7\u751f\u79ef\u7684\u540e\u4e09\u4f4d\u7684\u8fc7\u7a0b\uff0c\u53ef\u4ee5\u770b\u51fa\uff0c\u5728\u6bcf\u4e00\u6b21\u7684\u90e8\u5206\u79ef\u4e2d\uff0c\u5e76\u4e0d\u662f\u5b83\u7684\u6bcf\u4e00\u4f4d\u90fd\u4f1a\u5bf9\u79ef\u7684\u540e\u4e09\u4f4d\u4ea7\u751f\u5f71\u54cd\u3002\u603b\u7ed3\u89c4\u5f8b\u53ef\u4ee5\u5f97\u5230\uff1a\u5728\u4e09\u4f4d\u6570\u4e58\u6cd5\u4e2d\uff0c\u5bf9\u79ef\u7684\u540e\u4e09\u4f4d\u4ea7\u751f\u5f71\u54cd\u7684\u90e8\u5206\u79ef\u5206\u522b\u4e3a\uff1a \n\u7b2c\u4e00\u4e2a\u90e8\u5206\u79ef\u4e2d\uff1a\u88ab\u4e58\u6570\u6700\u540e\u4e09\u4f4d*\u4e58\u6570\u7684\u5012\u6570\u7b2c\u4e00\u4f4d \n\u7b2c\u4e8c\u4e2a\u90e8\u5206\u79ef\u4e2d\uff1a\u88ab\u4e58\u6570\u6700\u540e\u4e8c\u4f4d*\u4e58\u6570\u7684\u5012\u6570\u7b2c\u4e8c\u4f4d \n\u7b2c\u4e09\u4e2a\u90e8\u5206\u79ef\u4e2d\uff1a\u88ab\u4e58\u6570\u6700\u540e\u4e00\u4f4d*\u4e58\u6570\u7684\u5012\u6570\u7b2c\u4e09\u4f4d \n\u5c06\u4ee5\u4e0a\u7684\u90e8\u5206\u79ef\u7684\u540e\u4e09\u4f4d\u6c42\u548c\u540e\u622a\u53d6\u540e\u4e09\u4f4d\u5c31\u662f\u4e09\u4f4d\u6570\u4e58\u79ef\u7684\u540e\u4e09\u4f4d\u3002\u8fd9\u6837\u7684\u89c4\u5f8b\u53ef\u4ee5\u63a8\u5e7f\u5230\u540c\u6837\u95ee\u9898\u7684\u4e0d\u540c\u4f4d\u6570\u4e58\u79ef\u3002 \n\u6309\u7167\u624b\u5de5\u8ba1\u7b97\u7684\u8fc7\u7a0b\u53ef\u4ee5\u8bbe\u8ba1\u7b97\u6cd5\u7f16\u5199\u7a0b\u5e8f\u3002 \n"
            },
            "source": {},
            "solution": {
                "text": "#include \n\nusing namespace std;\n\nint main()\n{\n    long long i,j=10;\n    long long n;\n    for(i=0;i<=200000;++i)\n    {\n        if(j<=i)\n            j*=10;\n        n=i*i;\n        if(n%j==i)\n           cout<<i<<\"  \";\n    }\n    return 0;\n}",
                "@language": "C++"
            }
        },
        {
            "id": "00000196",
            "title": {
                "text": "\u3010C\u8bed\u8a00\u8bad\u7ec3\u3011\u820d\u7f55\u738b\u7684\u5931\u7b97"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "128",
                "@unit": "mb"
            },
            "description": {
                "text": "\n\t\u76f8\u4f20\u56fd\u9645\u8c61\u68cb\u662f\u53e4\u5370\u5ea6\u820d\u7f55\u738b\u7684\u5bb0\u76f8\u8fbe\u4f9d\u5c14\u53d1\u660e\u7684.\u820d\u7f55\u738b\u5341\u5206\u559c\u7231\u8c61\u68cb,\u51b3\u5b9a\u8ba9\u5bb0\u76f8\u81ea\u5df1\u9009\u62e9\u4f55\u79cd\u8d4f\u8d50.\u8fd9\u4f4d\u806a\u660e\u7684\u5bb0\u76f8\u6307\u77408*8\u517164\u683c\u7684\u8c61\u68cb\u8bf4:\u965b\u4e0b,\u8bf7\u60a8\u8d4f\u7ed9\u6211\u4e00\u4e9b\u9ea6\u5b50\u5427.\u5c31\u5728\u68cb\u76d8\u7684\u7b2c1\u683c\u653e1\u7c92,\u7b2c2\u683c\u653e2\u7c92,\u7b2c\u4e09\u683c\u653e4\u7c92,\u4ee5\u540e\u6bcf\u4e00\u683c\u90fd\u6bd4\u524d\u4e00\u683c\u589e\u52a0\u4e00\u4f4d,\u4f9d\u6b64\u653e\u5b8c\u68cb\u76d8\u4e0064\u683c,\u6211\u5c31\u611f\u6fc0\u4e0d\u5c3d\u4e86.\u820d\u7f55\u738b\u8ba9\u4eba\u625b\u4e86\u4e00\u888b\u9ea6\u5b50,\u4ed6\u8981\u5151\u73b0\u4ed6\u7684\u8bb8\u8bfa. \n\u8bf7\u95ee,\u56fd\u738b\u8981\u5151\u73b0\u4ed6\u7684\u8bb8\u8bfa\u5171\u8981\u591a\u5c11\u7c92\u9ea6\u5b50\u8d4f\u8d50\u4ed6\u7684\u5bb0\u76f8?\n"
            },
            "input": {},
            "output": {
                "text": "\n\t\u4ee5\u6574\u6570\u5f62\u5f0f\u8f93\u51fa,\u4e0d\u8981\u5176\u5b83\u7b26\u53f7\n"
            },
            "sample_input": {
                "text": "no input needed"
            },
            "sample_output": {
                "text": "18446744073709552000"
            },
            "hint": {
                "text": "\n\t\u5e94\u8be5\u662f\u4e2a\u5f88\u5927\u7684\u6570,\u8981\u8003\u8651\u6570\u7684\u7cbe\u5ea6\u95ee\u9898! \u7528double\u7c7b\u578b\uff0c\u8f93\u51fa\u5c3d\u53ef\u80fd\u7cbe\u786e\u7684\u7ed3\u679c\u3002\n"
            },
            "source": {},
            "solution": [
                {
                    "text": "#include\n\nint main()\n{\n\t\n\tprintf(\"18446744073709552000\");\n\t\n\treturn 0;\n}",
                    "@language": "C"
                },
                {
                    "text": "#include\n#include\nusing namespace std;\nint main()\n{\n\tcout<<\"18446744073709552000\"<<endl;\n\treturn 0;\n}",
                    "@language": "C++"
                }
            ]
        },
        {
            "id": "00000197",
            "title": {
                "text": "\u3010C\u8bed\u8a00\u8bad\u7ec3\u3011\u8ba1\u7b971977\uff01*"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "128",
                "@unit": "mb"
            },
            "description": {
                "text": "\n\t\u7f16\u5199\u4e00\u4e2a\u7a0b\u5e8f\uff0c\u8ba1\u7b971977\uff01\u7684\u503c\uff0c\n"
            },
            "input": {},
            "output": {},
            "sample_input": {},
            "sample_output": {},
            "test_input": {
                "text": "0"
            },
            "test_output": {
                "text": "44885501861451087214610857079909248837424492260428166724654147729643971700105425720084828218702600864349140553199425461195269756193449196420567670679997930497776962868627670814088525137310931384053497107655953166587777978189922585102015543252313842383879336452450405459365865930993882304967506579365573169114407061415044954204598042872984994370362994974190731648365853764021641267208890952183486957937797501412079339876017057593846219506921136683729082140979815738837181904628215025970879798689459975470705399719623801943630265034717650140070948581455541860388599570712955903767340302796772249678308667271334347735171920753722738382693169959755895777926922251934138946424062651593626615221554668142680371533735545526245936393642639820076708459169410776182481701982480050935429118156542429067920764915432851090578762675010478117563049656075543746119739717069866844883357409792569209134960636899425405149847065831281602082518075830646453654516317941696388277090166892581177070312338391653451955318906268079481790194265751853219151144318930316453953750991148493823206443369425944001941242917619527312311207417490693701494050808890878867975845117860433305316607551476965975790906896956127068298433273240281529950530069641805218400403258304360527381746385960815854239125565833311599210531902596579244149649008262885625747559728294814901871961517895638622905618910600921127432523435482034431607171597093293499891539807469664419507507385877763852240766577618864272175955102012797157374020057234790470573845442607086246849758817092472168600233686805040307801018904746900136895007446767892015103691546758917875283121559678424003351902375286355906676294721988128226509353084890739795591400978292429823019720587768866778565392965756177032714260472652522638182042178310497913363256666800211643586936480222169051736890119033575641362239097097668967707166546262165398342392082223840669956935518432433500512388128400501454567656003140699526312023215530969441249645000266981731474774311788566684103080652651130203579577659975621990943301760656291769606581621697893381784095276308563096667204798424584607702111698065254798376863076775838978795969975490569630809412346134850519967391026203435895655178226018567556450547196780276455924702875584894370421382586806714454592324162291540557289594093207488369616272458093646865153652591651977875393766158034846660994538470440002956734058798262392142018920993818689377588368163212024980190732396123717654885345318311881246452386979748492361608880215366959550154169889976098868177465811974997151687956412035252091325327239663869718509994035950918164411361389182525735435503547508839069279412344659861985920520906072587123123331095210491314236109240894403174951136822689796682524419281202547410727207049300182313660882768899486299620250523429591273583672949060001392324716645374632799121425207847994631057230794080496305639953304416917362257038854013896602584668330878544023543613061625753736164860737224928877680952653955796563792519162354541809473826165637051852050551375789673906991015231770191344532237230197212247808977750167304211358001556586938445903710297655467254175868400223251027316617594966819372453229090075416331169907476721079357279340658265132544616671356523759070808402554409562998869466175554581595720186681291377238031229963602424692724581562963871555299756846210719567248993090291643090340865372994247770175629123166395093036590992401428163026242637631276118954137752850608058698188636249011898545242604954174231816312797226812573427520943156653441116944356313617111649439782483116345998865356371264021702934385830524607545916082681723336300525740351901199785928918756667131759364856921713383210912328024559654704854102702259188968835912529499829982173477142559122574238026368742589720302024351936092912062935207156160753422673950733411087659019615053695175512684860561708230621159432059777334251461120470573475673358987108714856295142438953966517877419012271749890653388333329644505840068967629673118338646511218029658964431806630859185514092919508645264791768635043717176995406906564969624139415056784502969192669845401546983119762050259532817708831129549658092293235478320212147238061012342575368912996276889850467927800530591024505261738190292620196591471057917771997314616468851435648447291509773768541016965006318582734773265425619413143971696759006852267259561850525423115448245064957917308932248736590889553216053395073528665556848023503474296872182653139085069088572995129970277847947107821860675145364682650925420911412190721877818056372224222386334296773926506377426553303395543283286979254479006385723721651473737581750366456411044778457816144171346913394986370709474086023995999519809157066651288416873822563589323100234110838358055086897561674267091601132114100558679834327264396337664219084247730733599995905528037136968919519302002171318340744996774790395419281259057908266922735066452279956814516691434241768267941233868352917686780465248273578999914786724525402231196812975707174605005153159430528247125884412573041717023369550991289730066133225519782887483548537172695747744050948960901844040458316467701938297164400940155373802267886187842636408654937504031184246746956396377352375369130175324314589462528000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
            },
            "hint": {
                "text": "\n\t1977\uff01\u7684\u503c\u8d85\u8fc7\u8ba1\u7b97\u673a\u6240\u80fd\u8868\u793a\u7684\u6574\u6570\u8303\u56f4\uff0c\u8bf7\u8003\u8651\u5176\u4ed6\u6280\u5de7\uff0c\u5047\u8bbe 1977\uff01\u4e4b\u503c\u4e0d\u8d85\u8fc710000\u4f4d\u7528\u4e00\u4e2a\u542b\u670910000\u4e2a\u5143\u7d20\u7684\u6574\u578b\u6570\u7ec4num\u8868\u793a\u5176\u7ed3\u679c\uff0c\u6bcf\u4e2a\u5143\u7d20\u5b58\u653e\u4e00\u4f4d\uff0cnum[0]\u5b58\u5165\u4e2a\u4f4d\u6570\uff0cnum[]\u5b58\u5165\u5341 \u4f4d\u6570\uff0c\u4f9d\u6b21\u7c7b\u63a8\u2026\u20268\uff01=40320\uff0c\u5f53\u524d\u6700\u9ad8\u4f4dlen=4\uff0c\u6c429\uff01\u4e0e\u5404\u4f4d\u4f9d\u6b21\u76f8\u4e58rum\u4fdd\u5b58\u5f53\u524d\u7684\u8fdb\u4f4d\u6570\u5b57\u3002\uff080&lt;=rem&lt;9\uff09. \n1)rem\u7f6e\u521d\u59cb\u503c0. \n2\uff09i=0:rem=rem+num[0]*9=0+0=0\u3002num[0]=rem%10=0\uff0crem=rem/10=0\u3002 \n3\uff09i=1:rem=rem+num[1]*9=0+18=18\u3002num[1]=rem%10=8\uff0crem=rem/10=1\u3002 \n4\uff09i=2:rem=rem+num[2]*9=1+27=28\u3002num[2]=rem%10=8\uff0crem=rem/10=2\u3002 \n5\uff09i=3:rem=rem+num[3]*9=2+0=2\u3002num[3]=rem%10=2\uff0crem=rem/10=0\u3002 \n6\uff09i=4:rem=rem+num[4]*9=0+36=36\u3002num[4]=rem%10=6\uff0crem=rem/10=3\u3002 \n7\uff09rem=3\uff0c\u8bf4\u660e\u6709\u8fdb\u4f4d\uff0c\u6570\u7ec4\u6700\u9ad8\u4f4d\u589e\u52a01\uff0clen=len+1=5\uff0cnum[5]=rem%10=3\uff0crem=rem/10=0\uff0c\u7ed3\u675f\u3002 \nnum\u5404\u4f4d\u7ed3\u679c\u4e3a\uff1a3\u30016\u30012\u30018\u30018\u30010\u3002\u53739\uff01=362880 \n"
            },
            "source": {},
            "solution": {
                "text": "#include\n#include\nusing namespace std;\nconst int N = 10000;\nint a[N];\n\nvoid fact(int n){\n\tfill(a,a+N,0);\n\ta[0]=a[1]=1;\n\tfor (int i=1; i=1; i--) cout<<a[i];\n\tcout<<endl;\n}\n\nint main(){\n\tfact(1977);\n\toutput(a);\n\treturn 0;\n}",
                "@language": "C++"
            }
        },
        {
            "id": "00000198",
            "title": {
                "text": "\u3010C\u8bed\u8a00\u8bad\u7ec3\u3011\u963f\u59c6\u65af\u7279\u6717\u6570"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "128",
                "@unit": "mb"
            },
            "description": {
                "text": "\n\t\u5982\u679c\u4e00\u4e2a\u6b63\u6574\u6570\u7b49\u4e8e\u5176\u5404\u4e2a\u6570\u5b57\u7684\u7acb\u65b9\u548c\uff0c\u5219\u79f0\u8be5\u6570\u4e3a\u963f\u59c6\u65af\u7279\u6717\u6570(\u4ea6\u79f0\u4e3a\u81ea\u604b\u6027\u6570)\u3002 \n\u5982 407=4^3+0^3+7^3\u5c31\u662f\u4e00\u4e2a\u963f\u59c6\u65af\u7279\u6717\u6570\u3002\u8bd5\u7f16\u7a0b\u6c42\u5927\u4e8e1\u5c0f\u4e8e1000\u7684\u6240\u6709\u963f\u59c6\u65af\u7279\u6717\u6570\u3002 \n"
            },
            "input": {},
            "output": {
                "text": "\n\t\u4ece\u5c0f\u5230\u5927\u8f93\u51fa,\u6570\u4e4b\u95f4\u7528\u4e24\u4e2a\u7a7a\u683c\u5206\u5f00 \n"
            },
            "sample_input": {
                "text": "no input needed"
            },
            "sample_output": {
                "text": "153  370  371  407"
            },
            "hint": {
                "text": "\n\t\u53ef\u91c7\u7528\u7a77\u4e3e\u6cd5\uff0c\u4f9d\u6b21\u53d61000\u4ee5\u5185\u7684\u5404\u6570(\u8bbe\u4e3ai)\uff0c\u5c06i\u7684\u5404\u4f4d\u6570\u5b57\u5206\u89e3\u540e\uff0c\u636e\u963f\u59c6\u65af\u7279\u6717\u6570\u7684\u6027\u8d28\u8fdb\u884c\u8ba1\u7b97\u548c\u5224\u65ad\u3002 \n"
            },
            "source": {},
            "solution": [
                {
                    "text": "#include\n\nint main()\n{\n\tprintf(\"153  370  371  407  \");\t\n\n\treturn 0;\n}",
                    "@language": "C"
                },
                {
                    "text": "#include\nusing namespace std;\nint main()\n{\n    int s[4],a,b=0;\n    for(int i=2;i<=1000;i++)\n    {\n        a=i;\n        b=0;\n        for(int j=0;j<4;j++){s[j]=a%10;b++;a/=10;if(a==0){break;}}\n        for(int j=0;j<b;j++){a+=s[j]*s[j]*s[j];}\n        if(i==a){printf(\"%d  \",i);}\n    }\n    return 0;\n}",
                    "@language": "C++"
                }
            ]
        },
        {
            "id": "00000199",
            "title": {
                "text": "\u53d1\u5de5\u8d44\u54af"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "128",
                "@unit": "mb"
            },
            "description": {
                "text": "\u4f5c\u4e3a\u5409\u5927\u7684\u8001\u5e08\uff0c\u6700\u76fc\u671b\u7684\u65e5\u5b50\u5c31\u662f\u6bcf\u6708\u76849\u53f7\u4e86\uff0c\u56e0\u4e3a\u8fd9\u4e00\u5929\u662f\u53d1\u5de5\u8d44\u7684\u65e5\u5b50\uff0c\u517b\u5bb6\u7cca\u53e3\u5c31\u9760\u5b83\u4e86\uff0c\u5475\u5475 \n\u4f46\u662f\u5bf9\u4e8e\u5b66\u6821\u8d22\u52a1\u5904\u7684\u5de5\u4f5c\u4eba\u5458\u6765\u8bf4\uff0c\u8fd9\u4e00\u5929\u5219\u662f\u5f88\u5fd9\u788c\u7684\u4e00\u5929\uff0c\u8d22\u52a1\u5904\u7684\u5c0f\u80e1\u8001\u5e08\u6700\u8fd1\u5c31\u5728\u8003\u8651\u4e00\u4e2a\u95ee\u9898\uff1a\u5982\u679c\u6bcf\u4e2a\u8001\u5e08\u7684\u5de5\u8d44\u989d\u90fd\u77e5\u9053\uff0c\u6700\u5c11\u9700\u8981\u51c6\u5907\u591a\u5c11\u5f20\u4eba\u6c11\u5e01\uff0c\u624d\u80fd\u5728\u7ed9\u6bcf\u4f4d\u8001\u5e08\u53d1\u5de5\u8d44\u7684\u65f6\u5019\u90fd\u4e0d\u7528\u8001\u5e08\u627e\u96f6\u5462\uff1f \n\u8fd9\u91cc\u5047\u8bbe\u8001\u5e08\u7684\u5de5\u8d44\u90fd\u662f\u6b63\u6574\u6570\uff0c\u5355\u4f4d\u5143\uff0c\u4eba\u6c11\u5e01\u4e00\u5171\u6709100\u5143\u300150\u5143\u300110\u5143\u30015\u5143\u30012\u5143\u548c1\u5143\u516d\u79cd\u3002"
            },
            "input": {
                "text": "\u8f93\u5165\u6570\u636e\u5305\u542b\u591a\u4e2a\u6d4b\u8bd5\u5b9e\u4f8b\uff0c\u6bcf\u4e2a\u6d4b\u8bd5\u5b9e\u4f8b\u7684\u7b2c\u4e00\u884c\u662f\u4e00\u4e2a\u6574\u6570n\uff08n&lt;100\uff09\uff0c\u8868\u793a\u8001\u5e08\u7684\u4eba\u6570\uff0c\u7136\u540e\u662fn\u4e2a\u8001\u5e08\u7684\u5de5\u8d44\u3002 \nn=0\u8868\u793a\u8f93\u5165\u7684\u7ed3\u675f\uff0c\u4e0d\u505a\u5904\u7406\u3002"
            },
            "output": {
                "text": "\u5bf9\u4e8e\u6bcf\u4e2a\u6d4b\u8bd5\u5b9e\u4f8b\u8f93\u51fa\u4e00\u4e2a\u6574\u6570x,\u8868\u793a\u81f3\u5c11\u9700\u8981\u51c6\u5907\u7684\u4eba\u6c11\u5e01\u5f20\u6570\u3002\u6bcf\u4e2a\u8f93\u51fa\u5360\u4e00\u884c\u3002"
            },
            "sample_input": {
                "text": "3 1 2 3\n0"
            },
            "sample_output": {
                "text": "4"
            },
            "hint": {},
            "source": {
                "text": "\u5409\u9996\u5927\u5b66\u8f6f\u4ef6\u5b66\u9662"
            },
            "solution": {
                "text": "#include\nusing namespace std;\n\nint main() {\n\tint n;\n\tcin >> n;\n\twhile (n != 0){\n\t\tint ans = 0;\n\t\tfor (int i = 0; i > x;\n\t\t\tans += x / 100;\n\t\t\tans %= 100;\n\t\t\tans += x / 50;\n\t\t\tans %= 50;\n\t\t\tans += x / 10;\n\t\t\tans %= 10;\n\t\t\tans += x / 5;\n\t\t\tans %= 5;\n\t\t\tans += x / 2;\n\t\t\tans %= 2;\n\t\t\tans += x;\n\t\t}\n\t\tcout > n;\n\t}\n\treturn 0;\n}",
                "@language": "C++"
            }
        },
        {
            "id": "00000200",
            "title": {
                "text": "\u6709\u91cd\u590d\u5143\u7d20\u7684\u6392\u5217\u95ee\u9898"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "128",
                "@unit": "mb"
            },
            "description": {
                "text": "\n\t\n\n\n\t\u8bbeR={r1, r2 ,\u2026, rn}\u662f\u8981\u8fdb\u884c\u6392\u5217\u7684n \u4e2a\u5143\u7d20\u3002\u5176\u4e2d\u5143\u7d20 r1,\nr2 ,\u2026, rn \u53ef\u80fd\u76f8\u540c\u3002\u8bd5\u8bbe\u8ba1 \n\n\n\t\u4e00\u4e2a\u7b97\u6cd5\uff0c\u5217\u51faR \u7684\u6240\u6709\u4e0d\u540c\u6392\u5217\u3002  \n\n\n\t\n\n\n\t  \n\n\n\t&nbsp; \n\n\n\t\u7f16\u7a0b\u4efb\u52a1\uff1a  \n\n\n\t\u7ed9\u5b9an \u4ee5\u53ca\u5f85\u6392\u5217\u7684n \u4e2a\u5143\u7d20\u3002\u8ba1\u7b97\u51fa\u8fd9n \u4e2a\u5143\u7d20\u7684\u6240\u6709\u4e0d\u540c\u6392\u5217\u3002  \n"
            },
            "input": {
                "text": "\n\t\u8f93\u5165\u7684\u7b2c1 \u884c\u662f\u5143\u7d20\u4e2a\u6570n\uff0c1&lt;=n&lt;=500\u3002\u63a5\u4e0b\u6765\u76841 \u884c \n\n\n\t\u662f\u5f85\u6392\u5217\u7684n \u4e2a\u5143\u7d20\u3002  \n"
            },
            "output": {
                "text": "\n\t\u7a0b\u5e8f\u8fd0\u884c\u7ed3\u675f\u65f6\uff0c\u5c06\u8ba1\u7b97\u51fa\u7684n \u4e2a\u5143\u7d20\u7684\u6240\u6709\u4e0d\u540c\u6392\u5217\u8f93\u51fa\u3002\n\n\u6700\u540e1 \u884c\u4e2d\u7684\u6570\u662f\u6392\u5217\u603b\u6570\u3002"
            },
            "sample_input": {
                "text": "4\naacc"
            },
            "sample_output": {
                "text": "aacc\nacac\nacca\ncaac\ncaca\nccaa\n6"
            },
            "hint": {},
            "source": {
                "text": "\u7b97\u6cd5\u8bbe\u8ba1-\u590d\u6742\u7b97\u6cd5"
            },
            "solution": [
                {
                    "text": "#include \n#define max 500\n int  count=0;\nint repeat(char str[],int a ,int b )\n {\n  int i;\n          if(b>a)\n           for(i=a;i<b;i++)\n              if(str[i]==str[b])\n                  return 0;\n           return 1;\n}\n\n\n void perm(char str[],int k,int m)\n {\n           int i;\n           if(k==m)\n           {\n              count++;\n              for(i=0;i<=m;i++)\n                  printf(\"%c\",str[i]);\n              printf(\"\\n\");\n              return ;\n           }\n           else for(i=k;i<=m;i++)\n                   if(repeat(str,k,i))\n                   {\n                          char t;\n\t\t\t\t\t\t  t=str[i];\n\t\t\t\t\t\t  str[i]=str[k];\n\t\t\t\t\t\t  str[k]=t;\n                           perm(str,k+1,m);\n                           t=str[i];\n\t\t\t\t\t\t   str[i]=str[k];\n\t\t\t\t\t\t  str[k]=t;\n                   }\n   \n }\n int main()\n {\n      char str[max];\n      int n,i;\n\t  scanf(\"%d\",&n);\n      getchar();\n      for(i=0;i<n;i++)\n          scanf(\"%c\",&str[i]);\n      perm(str,0,n-1) ;\n      printf(\"%d\\n\",count);\n      return 0;\n }",
                    "@language": "C"
                },
                {
                    "text": "#include \n\n#include \n\nusing   namespace std ;\n\nlong ans ;\n\nint ok(char str[],int a ,int b )\n\n{\n\n        if( b > a)\n\n         for(int i = a ; i>n ;\n\n    ans = 0 ;\n\n    for( i = 0 ; i >str[i];\n\n    perm(str,0,n-1) ;\n\n    cout<<ans<<endl;\n\n         return 0;\n\n}",
                    "@language": "C++"
                },
                {
                    "text": "import java.awt.List;\nimport java.util.Scanner;\n\n/**\n *\n * @author wanshuzhen\n */ \n\npublic class Main {\n    public static int ans=0;\n    public static void main(String[] args)\n    {\n       \n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        char [] list = new char[n];\n        list = sc.next().toCharArray();\n        perm(list, 0, n-1);\n       // System.out.print(\"\u8f93\u51fa\u5e8f\u5217\u4e3a\uff1a\");\n        System.out.println(ans);\n    }\n    public static void perm(char []list ,int k, int m)\n    {\n        if(k==m)\n        {\n            ans++;\n            for (int i=0;ik)for(int t=k;t<i;t++)if(list[t]==list[i])return false;\n        return true;\n    }\n    public static  void swap(char []list ,int i,int j){\n        char temp;\n        temp= list[i];\n        list[i]=list[j];\n        list[j]=temp;\n        \n    }\n}",
                    "@language": "Java"
                }
            ]
        }
    ]
}