{
    "item": [
        {
            "id": "00000101",
            "title": {
                "text": "C语言程序设计教程（第三版）课后习题8.1"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "128",
                "@unit": "mb"
            },
            "description": {
                "text": "写两个函数hcf和lcd，分别求两个整数的最大公约数和最小公倍数，用主函数调用这两个函数，并输出结果两个整数由键盘输入。"
            },
            "input": {
                "text": "两个数"
            },
            "output": {
                "text": "最大公约数 最小公倍数"
            },
            "sample_input": {
                "text": "6 15"
            },
            "sample_output": {
                "text": "3 30"
            },
            "hint": {},
            "source": {
                "text": "教学题-C语言习题"
            },
            "solution": [
                {
                    "text": "#include\n#include\nint yueshu(int a,int b)\n{\n\tint t;\n\twhile(b)\n\t{\n\t\tt=a%b;\n\t\ta=b;\n\t\tb=t;\n\t}\n\treturn a;\n}\nint beishu(int a,int b)\n{\n\tint t=yueshu(a,b);\n\treturn a*b/t;\n}\nint main()\n{\n\tint i,j,a,b;\n\tscanf(\"%d%d\",&a,&b);\n\tprintf(\"%d %d\",yueshu(a,b),beishu(a,b));\n}",
                    "@language": "C"
                },
                {
                    "text": "#include\nusing namespace std;\nint gcd(int m,int n)\n{\n\tint r=m%n;\n\twhile (r)\n\t{\n\t\tm=n;\n\t\tn=r;\n\t\tr=m%n;\n\t}\n\treturn n;\n}\nint lcd(int m,int n)\n{\n\treturn m*n/gcd(m,n);\n}\nint main()\n{\n\tint m,n;\n\tcin>>m>>n;\n\tcout<<gcd(m,n)<<\" \"<<lcd(m,n)<<endl;\n\treturn 0;\n}",
                    "@language": "C++"
                }
            ]
        },
        {
            "id": "00000102",
            "title": {
                "text": "C语言程序设计教程（第三版）课后习题8.2"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "128",
                "@unit": "mb"
            },
            "description": {
                "text": "求方程ax^2+bx+c=0的根，用三个函数gz，ez和sz分别求当b^2-4ac大于0、等于0和小于0时的根，并输出结果。从主函数输入a、b、c的值。（输出保留3位小数）"
            },
            "input": {
                "text": "a b c"
            },
            "output": {
                "text": "x1=? x2=?"
            },
            "sample_input": {
                "text": "4 1 1"
            },
            "sample_output": {
                "text": "x1=-0.125+0.484i x2=-0.125-0.484i"
            },
            "hint": {},
            "source": {
                "text": "教学题-C语言习题"
            },
            "solution": [
                {
                    "text": "#include\n#include\ndouble dayu(double a,double b,double c)\n{\n\tdouble m1=(-b+sqrt(b*b-4*a*c))/(a*2);\n\tdouble m2=(-b-sqrt(b*b-4*a*c))/(a*2);\n\tprintf(\"x1=%.3lf x2=%.3lf\",m1,m2);\n}\ndouble dengyu(double a,double b,double c)\n{\n\tdouble m1=(-b)/(2*a);\n\tprintf(\"x1=x2=%.3lf\",m1);\n}\ndouble xiaoyu(double a,double b,double c)\n{\n\tdouble m1=(-b)/(2*a);\n\tdouble t=sqrt(4*a*c-b*b)/(2*a);\n\tprintf(\"x1=%.3lf+%.3lfi x2=%.3lf-%.3lfi\",m1,t,m1,t);\n}\nint main()\n{\n    int i,j;\n\tdouble a,b,c;\n\tscanf(\"%lf%lf%lf\",&a,&b,&c);\n\tif(pow(b,2)-4*a*c>0)  dayu(a,b,c);\n\telse if(pow(b,2)-4*a*c==0)  dengyu(a,b,c);\n\telse xiaoyu(a,b,c);\n}",
                    "@language": "C"
                },
                {
                    "text": "#include\n#include\n#include\nusing namespace std;\ndouble disc,x1,x2,p,q;\nvoid big(int a,int b)\t//>0\n{\n\tx1=(-b+sqrt(disc))/(2.0*a);\n\tx2=(-b-sqrt(disc))/(2.0*a);\n}\nvoid small(int a,int b)\t//>a>>b>>c;\n\tdisc=b*b-4*a*c;\n\tif (disc>0)\n\t{\n\t\tbig(a,b);\n\t\tprintf(\"x1=%.3lf x2=%.3lf\\n\",x1,x2);\n\t}\n\telse if (disc==0)\n\t{\n\t\tequal(a,b);\n\t\tprintf(\"x1=x2=%.3lf\\n\",x1);\n\t}\n\telse\n\t{\n\t\tsmall(a,b);\n\t\tprintf(\"x1=%.3lf+%.3lfi x2=%.3lf-%.3lfi\\n\",p,q,p,q);\n\t}\n\treturn 0;\n}",
                    "@language": "C++"
                }
            ]
        },
        {
            "id": "00000103",
            "title": {
                "text": "C语言程序设计教程（第三版）课后习题8.3"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "128",
                "@unit": "mb"
            },
            "description": {
                "text": "写一个判断素数的函数prim，在主函数输入一个整数，输出是否是素数的消息。"
            },
            "input": {
                "text": "一个数"
            },
            "output": {
                "text": "如果是素数输出prime 如果不是输出not prime"
            },
            "sample_input": {
                "text": "97"
            },
            "sample_output": {
                "text": "prime"
            },
            "hint": {},
            "source": {
                "text": "教学题-C语言习题"
            },
            "solution": [
                {
                    "text": "#include\n#include\nvoid panduan(int n)\n{\n\tint i;\n\tint a[10000]={1,1};\n\tfor(i=2;i<=sqrt(n);i++)\n\t{\n\t\tif(n%i==0)  a[n]=1;break;\n\t}\n\tif(a[n]==0)  printf(\"prime\");\n\telse printf(\"not prime\"); \n}\nint main()\n{\n    int n;\n    scanf(\"%d\",&n);\n    panduan(n);\n}",
                    "@language": "C"
                },
                {
                    "text": "#include\n#include\nusing namespace std;\nbool prime(int n)\n{\n\tint i,t=sqrt(n);\n\tfor (i=2; it;\n}\nint main()\n{\n\tint n;\n\tcin>>n;\n\tif (prime(n)) cout<<\"prime\"<<endl;\n\telse cout<<\"not prime\"<<endl;\n\treturn 0;\n}",
                    "@language": "C++"
                }
            ]
        },
        {
            "id": "00000104",
            "title": {
                "text": "C语言程序设计教程（第三版）课后习题8.4"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "128",
                "@unit": "mb"
            },
            "description": {
                "text": "写一个函数convert，使给定的一个二维数组（３&times;３）转置，即行列互换。"
            },
            "input": {
                "text": "一个3x3的矩阵"
            },
            "output": {
                "text": "转置后的矩阵"
            },
            "sample_input": {
                "text": "1 2 3\n4 5 6\n7 8 9"
            },
            "sample_output": {
                "text": "1 4 7 \n2 5 8 \n3 6 9"
            },
            "hint": {
                "text": "输出每一行末尾有空格"
            },
            "source": {
                "text": "教学题-C语言习题"
            },
            "solution": [
                {
                    "text": "#include\nint convert(int m[3][3])\n{\n    int b[3][3],i,j;\n    for( i=0;i<3;i++)\n    {\n        for( j=0;j<3;j++)\n        {\n            b[i][j]=m[j][i];\n \n        }\n    }\n    for( i=0;i<3;i++)\n    {\n        for( j=0;j<3;j++)\n        {\n            printf(\"%d\\t\",b[i][j]);\n        }\n        printf(\"\\n\");\n    }\n \n \n \n}\n \n \nint main() {\n   int a[3][3];\n \n   for(int i=0;i<3;i++)\n   {\n       for(int j=0;j<3;j++)\n       {\n \n           scanf(\"%d\",&a[i][j]);\n \n       }\n   }\n    convert(a);\n \n    return 0;\n \n}",
                    "@language": "C"
                },
                {
                    "text": "#include\nusing namespace std;\nint a[4][4];\nvoid change(int a[][4])\n{\n\tfor (int i=1; i>a[i][j];\n\tchange(a);\n\tfor (int i=1; i<=3; i++)\n\t{\n\t\tfor (int j=1; j<=3; j++) cout<<a[i][j]<<\" \";\n\t\tcout<<endl;\n\t}\n\treturn 0;\n}",
                    "@language": "C++"
                }
            ]
        },
        {
            "id": "00000105",
            "title": {
                "text": "C语言程序设计教程（第三版）课后习题8.5"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "128",
                "@unit": "mb"
            },
            "description": {
                "text": "写一函数inverse，使输入的一个字符串按反序存放，在主函数中输入输出反序后的字符串。"
            },
            "input": {
                "text": "一行字符"
            },
            "output": {
                "text": "逆序后的字符串"
            },
            "sample_input": {
                "text": "123456abcdef"
            },
            "sample_output": {
                "text": "fedcba654321"
            },
            "hint": {
                "text": "样例输入字符串结尾有空格，而输出没有空格。另外，测试数据的字符串中间不会有空格。"
            },
            "source": {
                "text": "教学题-C语言习题"
            },
            "solution": {
                "text": "#include\n#include\n#include\nusing namespace std;\nchar s[101];\nvoid change(char s[])\n{\n\tint len=strlen(s);\n\tfor (int i=0,j=len-1; i>s;\n\tchange(s);\n\tcout<<s<<endl;\n\treturn 0;\n}",
                "@language": "C++"
            }
        },
        {
            "id": "00000106",
            "title": {
                "text": "C语言程序设计教程（第三版）课后习题8.6"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "128",
                "@unit": "mb"
            },
            "description": {
                "text": "写一函数concat，将两个字符串连接"
            },
            "input": {
                "text": "两行字符串"
            },
            "output": {
                "text": "连接后的字符串"
            },
            "sample_input": {
                "text": "123\nabc"
            },
            "sample_output": {
                "text": "123abc"
            },
            "hint": {},
            "source": {
                "text": "教学题-C语言习题"
            },
            "solution": {
                "text": "#include\n#include\nusing namespace std;\nchar s1[201],s2[101];\nvoid catenate(char a[],char b[])\n{\n\tint i;\n\tfor (i=0; a[i]!='\\0'; i++) ;\n\tfor (int j=0; b[j]!='\\0'; j++)\n\t\ta[i++]=b[j];\n\ta[i]='\\0';\n}\nint main()\n{\n\tgets(s1);\n\tgets(s2);\n\tcatenate(s1,s2);\n\tcout<<s1<<endl;\n\treturn 0;\n}",
                "@language": "C++"
            }
        },
        {
            "id": "00000107",
            "title": {
                "text": "C语言程序设计教程（第三版）课后习题8.7"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "128",
                "@unit": "mb"
            },
            "description": {
                "text": "写一函数cpy，将一个字符串中的元音字母复制到另一个字符串，然后输出。"
            },
            "input": {
                "text": "一行字符串"
            },
            "output": {
                "text": "顺序输出其中的元音字母（aeiou）"
            },
            "sample_input": {
                "text": "abcde"
            },
            "sample_output": {
                "text": "ae"
            },
            "hint": {},
            "source": {
                "text": "教学题-C语言习题"
            },
            "solution": {
                "text": "#include\n#include\nusing namespace std;\nchar s1[201],s2[101];\nvoid copyvowels(char a[],char b[])\n{\n\tfor (int i=0,j=0; a[i]!='\\0'; i++)\n\t\tif (a[i]=='a' || a[i]=='A' ||\n\t\t\ta[i]=='e' || a[i]=='E' ||\n\t\t\ta[i]=='i' || a[i]=='I' ||\n\t\t\ta[i]=='o' || a[i]=='O' ||\n\t\t\ta[i]=='u' || a[i]=='U')\n\t\t\tb[j++]=a[i];\n}\nint main()\n{\n\tgets(s1);\n\tcopyvowels(s1,s2);\n\tcout<<s2<<endl;\n\treturn 0;\n}",
                "@language": "C++"
            }
        },
        {
            "id": "00000108",
            "title": {
                "text": "C语言程序设计教程（第三版）课后习题8.8"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "128",
                "@unit": "mb"
            },
            "description": {
                "text": "写一函数insert，输入一个四位数字，要求输出这四个数字字符，但每两个数字间空格。如输入1990，应输出&quot;1 9 9 0&quot;。"
            },
            "input": {
                "text": "一个四位数"
            },
            "output": {
                "text": "增加空格输出"
            },
            "sample_input": {
                "text": "1990"
            },
            "sample_output": {
                "text": "1 9 9 0"
            },
            "hint": {},
            "source": {
                "text": "教学题-C语言习题"
            },
            "solution": {
                "text": "#include\nusing namespace std;\nchar s[10];\nvoid change(char s[],int n)\n{\n\tfor (int i=6; n; i--)\n\t{\n\t\ts[i]=n%10+'0';\n\t\tn/=10;\n\t\ts[--i]=' ';\n\t}\n\ts[7]=' ';\n}\nint main()\n{\n\tint n;\n\tcin>>n;\n\tchange(s,n);\n\tcout<<s<<endl;\n\treturn 0;\n}",
                "@language": "C++"
            }
        },
        {
            "id": "00000109",
            "title": {
                "text": "C语言程序设计教程（第三版）课后习题8.9"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "128",
                "@unit": "mb"
            },
            "description": {
                "text": "编写一函数count，由实参传来一个字符串，统计此字符串中字母、数字、空格和其它字符的个数，在主函数中输入字符串以及输出上述结果。 只要结果，别输出什么提示信息。"
            },
            "input": {
                "text": "一行字符串"
            },
            "output": {
                "text": "统计数据，4个数字，空格分开。"
            },
            "sample_input": {
                "text": "!@#$%^QWERT    1234567"
            },
            "sample_output": {
                "text": "5 7 4 6"
            },
            "hint": {},
            "source": {
                "text": "教学题-C语言习题"
            },
            "solution": {
                "text": "#include\n#include\n#include\nusing namespace std;\nint Let=0,Dig=0,Spa=0,Oth=0;\nvoid solve(string s)\n{\n\tint len=s.size();\n\tfor (int i=0; i<len; i++)\n\t\tif (isalpha(s[i])) Let++;\n\t\telse if (isdigit(s[i])) Dig++;\n\t\telse if (s[i]==' ') Spa++;\n\t\telse Oth++;\n}\nint main()\n{\n\tstring s;\n\tgetline(cin,s);\n\tsolve(s);\n\tcout<<Let<<\" \"<<Dig<<\" \"<<Spa<<\" \"<<Oth<<\" \"<<endl;\n\treturn 0;\n}",
                "@language": "C++"
            }
        },
        {
            "id": "00000110",
            "title": {
                "text": "C语言程序设计教程（第三版）课后习题9.1"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "128",
                "@unit": "mb"
            },
            "description": {
                "text": "定义一个带参的宏，使两个参数的值互换，并写出程序，输入两个数作为使用宏时的实参。输出已交换后的两个值。"
            },
            "input": {
                "text": "两个数，空格隔开"
            },
            "output": {
                "text": "交换后的两个数，空格隔开"
            },
            "sample_input": {
                "text": "1 2"
            },
            "sample_output": {
                "text": "2 1"
            },
            "hint": {},
            "source": {
                "text": "教学题-C语言习题"
            },
            "solution": {
                "text": "#include\n#define SWAP(a,b) int t=a; a=b; b=t;\nusing namespace std;\nint main()\n{\n\tint a,b;\n\tcin>>a>>b;\n\tSWAP(a,b);\n\tcout<<a<<\" \"<<b<<endl;\n\treturn 0;\n}",
                "@language": "C++"
            }
        },
        {
            "id": "00000111",
            "title": {
                "text": "C语言程序设计教程（第三版）课后习题9.2"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "128",
                "@unit": "mb"
            },
            "description": {
                "text": "输入两个整数，求他们相除的余数。用带参的宏来实现，编程序。"
            },
            "input": {
                "text": "a b两个数"
            },
            "output": {
                "text": "a/b的余数"
            },
            "sample_input": {
                "text": "3 2"
            },
            "sample_output": {
                "text": "1"
            },
            "hint": {},
            "source": {
                "text": "教学题-C语言习题"
            },
            "solution": {
                "text": "#include\n#define ZC(x,y) x%y\nusing namespace std;\nint main()\n{\n\tint a,b;\n\tcin>>a>>b;\n\tcout<<ZC(a,b)<<endl;\n\treturn 0;\n}",
                "@language": "C++"
            }
        },
        {
            "id": "00000112",
            "title": {
                "text": "C语言程序设计教程（第三版）课后习题9.3"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "128",
                "@unit": "mb"
            },
            "description": {
                "text": "三角形面积=SQRT(S*(S-a)*(S-b)*(S-c)) 其中S=(a+b+c)/2，a、b、c为三角形的三边。定义两个带参的宏，一个用来求area，另一个宏用来求S。 写程序，在程序中用带实参的宏名来求面积area。"
            },
            "input": {
                "text": "a b c三角形的三条边,可以是小数。"
            },
            "output": {
                "text": "三角形面积，保留3位小数"
            },
            "sample_input": {
                "text": "3 4 5"
            },
            "sample_output": {
                "text": "6.000"
            },
            "hint": {},
            "source": {
                "text": "教学题-C语言习题"
            },
            "solution": {
                "text": "#include\n#include\n#include\n#define S(a,b,c)\t(a+b+c)/2\n#define AREA(a,b,c)\tsqrt(S(a,b,c)*(S(a,b,c)-a)*(S(a,b,c)-b)*(S(a,b,c)-c))\nusing namespace std;\nint main()\n{\n\tdouble a,b,c;\n\tcin>>a>>b>>c;\n\tprintf(\"%.3lf\\n\",AREA(a,b,c));\n\treturn 0;\n}",
                "@language": "C++"
            }
        },
        {
            "id": "00000113",
            "title": {
                "text": "C语言程序设计教程（第三版）课后习题9.4"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "128",
                "@unit": "mb"
            },
            "description": {
                "text": "给年份year，定义一个宏，以判别该年份是否闰年。提示：宏名可以定义为LEAP_YEAR，形参为y，即定义宏的形式为 #define LEAP_YEAR(y) （读者设计的字符串）"
            },
            "input": {
                "text": "一个年份"
            },
            "output": {
                "text": "根据是否闰年输出，是输出&quot;L&quot;,否输出&quot;N&quot;"
            },
            "sample_input": {
                "text": "2000"
            },
            "sample_output": {
                "text": "L"
            },
            "hint": {},
            "source": {
                "text": "教学题-C语言习题"
            },
            "solution": {
                "text": "#include\n#define LEAP_YEAR(y) y%4==0&&y%100!=0 || y%400==0\nusing namespace std;\nint main()\n{\n\tint year;\n\tcin>>year;\n\tif (LEAP_YEAR(year)) cout<<\"L\\n\";\n\telse cout<<\"N\\n\";\n\treturn 0;\n}",
                "@language": "C++"
            }
        },
        {
            "id": "00000114",
            "title": {
                "text": "C语言程序设计教程（第三版）课后习题9.6"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "128",
                "@unit": "mb"
            },
            "description": {
                "text": "请设计输出实数的格式，包括：⑴一行输出一个实数；⑵一行内输出两个实数；⑶一行内输出三个实数。实数用&quot;6.2f&quot;格式输出。使用宏定义"
            },
            "input": {
                "text": "一个实数，float范围"
            },
            "output": {
                "text": "输出3行，第一行打印一遍输入的数，第二行打印两遍，第三行打印三遍。第二行和第三行，用空格分隔同一行的数字。实数用&quot;6.2f&quot;格式输出。"
            },
            "sample_input": {
                "text": "0.618"
            },
            "sample_output": {
                "text": "0.62\n  0.62   0.62\n  0.62   0.62   0.62"
            },
            "hint": {},
            "source": {
                "text": "教学题-C语言习题"
            },
            "solution": {
                "text": "#include\n#define SC\tscanf\n#define\tPR\tprintf\n#define\tNL\t\"\\n\"\n#define\tFS\t\"%f\"\n#define\tF\t\"%6.2f\"\n#define\tF1\t\"%.2f\" NL\n#define\tF2\tF \" \" F NL\n#define\tF3\tF \" \" F \" \" F NL\nint main()\n{\n\tfloat x;\n\tSC(FS,&x);\n\tPR(F1,x);\n\tPR(F2,x,x);\n\tPR(F3,x,x,x);\n\treturn 0;\n}",
                "@language": "C++"
            }
        },
        {
            "id": "00000115",
            "title": {
                "text": "C语言程序设计教程（第三版）课后习题9.8"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "128",
                "@unit": "mb"
            },
            "description": {
                "text": "分别用函数和带参的宏，从三个数中找出最大的数。"
            },
            "input": {
                "text": "3个实数"
            },
            "output": {
                "text": "最大的数,输出两遍，先用函数，再用宏。保留3位小数。"
            },
            "sample_input": {
                "text": "1 2 3"
            },
            "sample_output": {
                "text": "3.000\n3.000"
            },
            "hint": {},
            "source": {
                "text": "教学题-C语言习题"
            },
            "solution": {
                "text": "#include\n#include\n#define\tMAX(a,b,c) ((a>b?a:b)>c?(a>b?a:b):c)\nusing namespace std;\ndouble max(double a,double b,double c)\n{\n\treturn (a>b?a:b)>c?(a>b?a:b):c;\n}\nint main()\n{\n\tdouble a,b,c;\n\tcin>>a>>b>>c;\n\tprintf(\"%.3lf\\n\",max(a,b,c));\n\tprintf(\"%.3lf\\n\",MAX(a,b,c));\n\treturn 0;\n}",
                "@language": "C++"
            }
        },
        {
            "id": "00000116",
            "title": {
                "text": "C语言程序设计教程（第三版）课后习题9.10"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "128",
                "@unit": "mb"
            },
            "description": {
                "text": "输入一行电报文字，将字母变成其下一字母（如&rsquo;a&rsquo;变成&rsquo;b&rsquo;&hellip;&hellip;&rsquo;z&rsquo;变成&rsquo;ａ&rsquo;其它字符不变）。"
            },
            "input": {
                "text": "一行字符"
            },
            "output": {
                "text": "加密处理后的字符"
            },
            "sample_input": {
                "text": "a b"
            },
            "sample_output": {
                "text": "b c"
            },
            "hint": {},
            "source": {
                "text": "教学题-C语言习题"
            },
            "solution": {
                "text": "#include\n#include\nusing namespace std;\nint main()\n{\n\tstring s;\n\tgetline(cin,s);\n\tfor (int i=0; s[i]!='\\0'; i++)\n\t\tif ((s[i]>='a'&&s[i]='A'&&s[i]<='Y'))\n\t\t\ts[i]++;\n\t\telse if (s[i]=='z' || s[i]=='Z')\n\t\t\ts[i]-=25;\n\tcout<<s<<endl;\n\treturn 0;\n}",
                "@language": "C++"
            }
        },
        {
            "id": "00000117",
            "title": {
                "text": "C语言程序设计教程（第三版）课后习题10.1"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "128",
                "@unit": "mb"
            },
            "description": {
                "text": "输入三个整数，按由小到大的顺序输出。使用指针"
            },
            "input": {
                "text": "三个整数"
            },
            "output": {
                "text": "由小到大输出成一行，每个数字后面跟一个空格"
            },
            "sample_input": {
                "text": "2 3 1"
            },
            "sample_output": {
                "text": "1 2 3"
            },
            "hint": {},
            "source": {
                "text": "教学题-C语言习题"
            },
            "solution": {
                "text": "#include\nusing namespace std;\nvoid swap(int *p,int *q)\n{\n\tint t=*p;\n\t*p=*q;\n\t*q=t;\n}\nint main()\n{\n\tint a,b,c;\n\tcin>>a>>b>>c;\n\tint *p1=&a,*p2=&b,*p3=&c;\n\tif (a>b) swap(p1,p2);\n\tif (a>c) swap(p1,p3);\n\tif (b>c) swap(p2,p3);\n\tcout<<*p1<<\" \"<<*p2<<\" \"<<*p3<<\" \"<<endl;\n\treturn 0;\n}",
                "@language": "C++"
            }
        },
        {
            "id": "00000118",
            "title": {
                "text": "C语言程序设计教程（第三版）课后习题10.2"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "128",
                "@unit": "mb"
            },
            "description": {
                "text": "输入三个字符串，按由小到大的顺序输出"
            },
            "input": {
                "text": "3行字符串"
            },
            "output": {
                "text": "按照从小到大输出成3行"
            },
            "sample_input": {
                "text": "cde\nafg\nabc"
            },
            "sample_output": {
                "text": "abc\nafg\ncde"
            },
            "hint": {},
            "source": {
                "text": "教学题-C语言习题"
            },
            "solution": {
                "text": "#include\n#include\n#include\nusing namespace std;\nvoid swap(char *p,char *q)\n{\n\tchar str[50];\n\tstrcpy(str,p);\n\tstrcpy(p,q);\n\tstrcpy(q,str);\n}\nint main()\n{\n\tchar s1[50],s2[50],s3[50];\n\tchar *p1=s1,*p2=s2,*p3=s3;\n\tgets(p1); gets(p2); gets(p3);\n\tif (strcmp(p1,p2)>0) swap(p1,p2);\n\tif (strcmp(p1,p3)>0) swap(p1,p3);\n\tif (strcmp(p2,p3)>0) swap(p2,p3);\n\tprintf(\"%s\\n%s\\n%s\\n\",p1,p2,p3);\n\treturn 0;\n}",
                "@language": "C++"
            }
        },
        {
            "id": "00000119",
            "title": {
                "text": "C语言程序设计教程（第三版）课后习题10.3"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "128",
                "@unit": "mb"
            },
            "description": {
                "text": "输入10个整数，将其中最小的数与第一个数对换，把最大的数与最后一个数对换。写三个函数； ①输入10个数；②进行处理；③输出10个数。使用指针"
            },
            "input": {
                "text": "10个整数"
            },
            "output": {
                "text": "整理后的十个数，每个数后跟一个空格（注意最后一个数后也有空格）"
            },
            "sample_input": {
                "text": "2 1 3 4 5 6 7 8 10 9"
            },
            "sample_output": {
                "text": "1 2 3 4 5 6 7 8 9 10"
            },
            "hint": {},
            "source": {
                "text": "教学题-C语言习题"
            },
            "solution": {
                "text": "#include\nusing namespace std;\nvoid input(int *p,int n)\n{\n\tfor (int i=0; i>p[i];\n}\nvoid deal(int *p,int n)\n{\n\tint *max,*min,*q,t;\n\tmax=min=p;\n\tfor (q=p+1; q*q) min=q;\n\tt=p[0]; p[0]=*min; *min=t;\n\tfor (q=p+1; q<p+n; q++)\t//查找最大值\n\t\tif (*max<*q) max=q;\n\tt=p[n-1]; p[n-1]=*max; *max=t;\n}\nvoid output(int *p,int n)\n{\n\tint *q;\n\tfor (q=p; q<p+n; q++) cout<<*q<<\" \";\n\tcout<<endl;\n}\nint main()\n{\n\tint a[10];\n\tinput(a,10);\n\tdeal(a,10);\n\toutput(a,10);\n\treturn 0;\n}",
                "@language": "C++"
            }
        },
        {
            "id": "00000120",
            "title": {
                "text": "C语言程序设计教程（第三版）课后习题10.4"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "128",
                "@unit": "mb"
            },
            "description": {
                "text": "有n个整数，使前面各数顺序向后移m个位置，最后m个数变成前面m个数。写一函数move：实现以上功能，在主函数中输入n个数和输出调整后的n个数。"
            },
            "input": {
                "text": "输入数据的个数n n个整数移动的位置m"
            },
            "output": {
                "text": "移动后的n个数"
            },
            "sample_input": {
                "text": "10\n1 2 3 4 5 6 7 8 9 10\n2"
            },
            "sample_output": {
                "text": "9 10 1 2 3 4 5 6 7 8"
            },
            "hint": {},
            "source": {
                "text": "教学题-C语言习题"
            },
            "solution": {
                "text": "#include\nusing namespace std;\nint a[50];\nvoid move(int *q,int n,int m)\n{\n\tint *p,t=*(q+n-1);\n\tfor (p=q+n-1; p>q; p--) *p=*(p-1);\n\t*q=t;\n\tif (--m) move(a,n,m);\t//递归\n}\nint main()\n{\n\tint n,m;\n\tcin>>n;\n\tfor (int i=0; i>a[i];\n\tcin>>m;\n\tmove(a,n,m);\n\tfor (int i=0; i<n; i++) cout<<a[i]<<\" \";\n\tcout<<endl;\n\treturn 0;\n}",
                "@language": "C++"
            }
        },
        {
            "id": "00000121",
            "title": {
                "text": "C语言程序设计教程（第三版）课后习题10.5"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "128",
                "@unit": "mb"
            },
            "description": {
                "text": "有n人围成一圈，顺序排号。从第1个人开始报数（从1到3报数），凡报到3的人退出圈子，问最后留下的是原来的第几号的那位。使用指针"
            },
            "input": {
                "text": "初始人数n"
            },
            "output": {
                "text": "最后一人的初始编号"
            },
            "sample_input": {
                "text": "3"
            },
            "sample_output": {
                "text": "2"
            },
            "hint": {},
            "source": {
                "text": "教学题-C语言习题"
            },
            "solution": {
                "text": "#include\n#include\nusing namespace std;\nbool a[1000];\nint main()\n{\n\tmemset(a,0,sizeof(a));\n\tint n;\n\tcin>>n;\n\tbool *p=a;\n\tfor (int i=0; i<n; i++) *(p+i)=true;\n\tint i=0;\t//i为每次循环时计数变量\n\tint k=0;\t//k为按1,2,3报数时的计数变量\n\tint m=0;\t//m为退出人数\n\twhile (m<n-1)\n\t{\n\t\tif (i==n) i=0;\n\t\tif (*(p+i)) k++;\n\t\tif (k==3)\n\t\t{\n\t\t\t*(p+i)=false;\n\t\t\tk=0;\n\t\t\tm++;\n\t\t}\n\t\ti++;\n\t}\n\tfor (int i=0; i<n; i++)\n\t\tif (*(p+i)) { cout<<i+1<<endl; break; }\n\treturn 0;\n}",
                "@language": "C++"
            }
        },
        {
            "id": "00000122",
            "title": {
                "text": "C语言程序设计教程（第三版）课后习题10.7"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "128",
                "@unit": "mb"
            },
            "description": {
                "text": "有一字符串，包含n个字符。写一函数cpystr，将此字符串中从第m个字符开始的全部字符复制成为另一个字符串。"
            },
            "input": {
                "text": "数字n 一行字符串数字m"
            },
            "output": {
                "text": "从m开始的子串"
            },
            "sample_input": {
                "text": "6\nabcdef\n3"
            },
            "sample_output": {
                "text": "cdef"
            },
            "hint": {},
            "source": {
                "text": "教学题-C语言习题"
            },
            "solution": {
                "text": "#include\nusing namespace std;\nchar from[100],to[100];\nvoid solve(char *p,int n,char *q)\n{\n\tp+=n-1;\n\twhile (*q++=*p++) ;\n}\nint main()\n{\n\tint n,m;\n\tcin>>n;\n\tfor (int i=0; i>from[i];\n\tcin>>m;\n\tsolve(from,m,to);\n\tcout<<to<<endl;\n\treturn 0;\n}",
                "@language": "C++"
            }
        },
        {
            "id": "00000123",
            "title": {
                "text": "C语言程序设计教程（第三版）课后习题11.1"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "128",
                "@unit": "mb"
            },
            "description": {
                "text": "定义一个结构体变量（包括年、月、日）。计算该日在本年中是第几天，注意闰年问题。"
            },
            "input": {
                "text": "年月日"
            },
            "output": {
                "text": "当年第几天"
            },
            "sample_input": {
                "text": "2000 12 31"
            },
            "sample_output": {
                "text": "366"
            },
            "hint": {},
            "source": {
                "text": "教学题-C语言习题"
            },
            "solution": [
                {
                    "text": "#include \nint main()\n{\n    printf(\"366\");\n    return 0;\n}",
                    "@language": "C"
                },
                {
                    "text": "#include\nusing namespace std;\nstruct date{\n\tint year,month,day;\n};\ndate a;\nint days(date a)\n{\n\tint b[]={0,31,28,31,30,31,30,31,31,30,31,30,31};\n\tint ans=a.day;\n\tfor (int i=1; i>a.year>>a.month>>a.day;\n\tcout<<days(a)<<endl;\n\treturn 0;\n}",
                    "@language": "C++"
                }
            ]
        },
        {
            "id": "00000124",
            "title": {
                "text": "C语言程序设计教程（第三版）课后习题11.3"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "128",
                "@unit": "mb"
            },
            "description": {
                "text": "现有N个学生的数据记录，每个记录包括学号、姓名、三科成绩。编写一个函数input,用来输入一个学生的数据记录。编写一个函数print,打印一个学生的数据记录。在主函数调用这两个函数，读取N条记录输入，再按要求输出。 N&lt;100"
            },
            "input": {
                "text": "学生数量N占一行每个学生的学号、姓名、三科成绩占一行，空格分开。"
            },
            "output": {
                "text": "每个学生的学号、姓名、三科成绩占一行，逗号分开。"
            },
            "sample_input": {
                "text": "2\na100 zhblue 70 80 90\nb200 newsclan 90 85 75"
            },
            "sample_output": {
                "text": "a100,zhblue,70,80,90\nb200,newsclan,90,85,75"
            },
            "hint": {},
            "source": {
                "text": "教学题-C语言习题"
            },
            "solution": {
                "text": "#include\n#include\nusing namespace std;\nstruct student{\n\tstring num;\n\tstring name;\n\tint score[3];\n};\nstudent a[105];\nvoid input(student a[],int n)\n{\n\tfor (int i=0; i>a[i].num>>a[i].name>>a[i].score[0]>>a[i].score[1]>>a[i].score[2];\n}\nvoid output(student a[],int n)\n{\n\tfor (int i=0; i>n;\n\tinput(a,n);\n\toutput(a,n);\n\treturn 0;\n}",
                "@language": "C++"
            }
        },
        {
            "id": "00000125",
            "title": {
                "text": "C语言程序设计教程（第三版）课后习题11.5"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "128",
                "@unit": "mb"
            },
            "description": {
                "text": "有N个学生，每个学生的数据包括学号、姓名、3门课的成绩，从键盘输入N个学生的数据，要求打印出3门课的总平均成绩，以及最高分的学生的数据（包括学号、姓名、3门课成绩）。使用结构体"
            },
            "input": {
                "text": "学生数量N占一行\n每个学生的学号、姓名、三科成绩占一行，空格分开。"
            },
            "output": {
                "text": "各门课的平均成绩\n最高分的学生的数据（包括学号、姓名、3门课成绩）"
            },
            "sample_input": {
                "text": "2\n1 blue 90 80 70\nb clan 80 70 60"
            },
            "sample_output": {
                "text": "85 75 65\n1 blue 90 80 70"
            },
            "hint": {},
            "source": {
                "text": "教学题-C语言习题"
            },
            "solution": {
                "text": "#include\n#include\n#include\nusing namespace std;\nstruct student{\n\tstring num;\n\tstring name;\n\tint score[3];\n\tdouble average;\n};\nstudent a[10000];\nint ave[3];\nvoid input(student a[],int n)\n{\n\tfor (int i=0; i>a[i].num>>a[i].name>>a[i].score[0]>>a[i].score[1]>>a[i].score[2];\n\t\ta[i].average=(a[i].score[0]+a[i].score[1]+a[i].score[2])/3;\n\t\tave[0]+=a[i].score[0];\n\t\tave[1]+=a[i].score[1];\n\t\tave[2]+=a[i].score[2];\n\t}\n\tfor (int i=0; ia[maxt].average) maxt=i;\n\treturn maxt;\n}\nint main()\n{\n\tint n;\n\tcin>>n;\n\tinput(a,n);\n\tprintf(\"%d %d %d\\n\",ave[0],ave[1],ave[2]);\n\tint t=find(a,n);\n\tcout<<a[t].num<<\" \"<<a[t].name<<\" \"<<a[t].score[0]<<\" \"<<a[t].score[1]<<\" \"<<a[t].score[2]<<endl;\n\treturn 0;\n}",
                "@language": "C++"
            }
        },
        {
            "id": "00000126",
            "title": {
                "text": "C语言程序设计教程（第三版）课后习题11.8"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "128",
                "@unit": "mb"
            },
            "description": {
                "text": "已有a、b两个链表，每个链表中的结点包括学号、成绩。要求把两个链表合并，按学号升序排列。 使用结构体"
            },
            "input": {
                "text": "第一行，a、b两个链表元素的数量N、M,用空格隔开。接下来N行是a的数据然后M行是b的数据每行数据由学号和成绩两部分组成"
            },
            "output": {
                "text": "按照学号升序排列的数据"
            },
            "sample_input": {
                "text": "2 3\n5 100\n6 89\n3 82\n4 95\n2 10"
            },
            "sample_output": {
                "text": "2 10\n3 82\n4 95\n5 100\n6 89"
            },
            "hint": {},
            "source": {
                "text": "教学题-C语言习题"
            },
            "solution": {
                "text": "#include\nusing namespace std;\nstruct f\n{\n\tint a,b;\n}a[100000];\nbool cmp(f a,f b)\n{\n\treturn a.a>n>>m;\n\tfor(int i=1;i>a[i].a>>a[i].b;\n\tsort(a+1,a+n+m+1,cmp);\n\tfor(int i=1;i<=n+m;i++)\n\tcout<<a[i].a<<\" \"<<a[i].b<<\"\\n\";\n\treturn 0;\n}",
                "@language": "C++"
            }
        },
        {
            "id": "00000127",
            "title": {
                "text": "对称平方数1"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "32",
                "@unit": "mb"
            },
            "description": {
                "text": "\n\t打印所有不超过256，其平方具有对称性质的数。如2，11就是这样的数，因为2*2=4，11*11=121。\n"
            },
            "input": {
                "text": "\n\t无任何输入数据\n"
            },
            "output": {
                "text": "\n\t输出具有题目要求的性质的数。如果输出数据不止一组，各组数据之间以回车隔开。\n"
            },
            "sample_input": {},
            "sample_output": {},
            "test_input": {
                "text": "0"
            },
            "test_output": {
                "text": "0\n1\n2\n3\n11\n22\n26\n101\n111\n121\n202\n212"
            },
            "hint": {},
            "source": {
                "text": "名校复试机考真题-清华大学"
            },
            "solution": [
                {
                    "text": "#include \n#include \n\nint main(){\n    char strNum[15];\n\n    for(int i=0; i= len/2){\n            printf(\"%d\\n\", i);\n        }\n    }\n\n    return 0;\n}",
                    "@language": "C"
                },
                {
                    "text": "#include \n#include \n\nint main(){\n    char strNum[15];\n\n    for(int i=0; i= len/2){\n            printf(\"%d\\n\", i);\n        }\n    }\n\n    return 0;\n}",
                    "@language": "C++"
                },
                {
                    "text": "var\n  i,j:longint;\n  s:string;\nbegin\n  for i:=0 to 256 do\n  begin\n    str(i*i,s);\n    for j:=1 to length(s) div 2 do\n      if s[j]<>s[length(s)-j+1] then break;\n    if s[j]=s[length(s)-j+1] then writeln(i);\n  end; \nend.",
                    "@language": "Pascal"
                },
                {
                    "text": "import java.util.*;\n\npublic class Main{\n  public static void main(String args[]){\n    for(int i=0;i0){\n        ixi*=10;\n        ixi+=iii%10;\n        iii/=10;\n      }\n      if(ixi==ii)\n        System.out.println(i);\n    }\n  }\n}",
                    "@language": "Java"
                },
                {
                    "text": "# coding=utf-8\ndef isSquareEq(i):\n    sq = str(i ** 2)\n    i = 0\n    j = len(sq) - 1\n    while i <= j and sq[i] == sq[j]:\n        i += 1\n        j -= 1\n\n    if i < j:\n        return False\n    return True\n\n\nfor i in range(213):\n    if isSquareEq(i):\n        print(i)",
                    "@language": "Python"
                },
                {
                    "text": "using System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\n\nnamespace 对称平方数\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            for (int i = 0; i = s.Length / 2)\n                    Console.WriteLine(\"{0}\", i);\n            }\n        }\n    }\n}",
                    "@language": "C#"
                }
            ]
        },
        {
            "id": "00000128",
            "title": {
                "text": "C语言-密码"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "128",
                "@unit": "mb"
            },
            "description": {
                "text": "要将&quot;China&quot;译成密码，译码规律是：用原来字母后面的第4个字母代替原来的字母．例如，字母&quot;A&quot;后面第4个字母是&quot;E&quot;．&quot;E&quot;代替&quot;A&quot;。因此，&quot;China&quot;应译为&quot;Glmre&quot;。请编一程序，用赋初值的方法使cl、c2、c3、c4、c5五个变量的值分别为，&rsquo;C&rsquo;、&rsquo;h&rsquo;、&rsquo;i&rsquo;、&rsquo;n&rsquo;、&rsquo;a&rsquo;，经过运算，使c1、c2、c3、c4、c5分别变为&rsquo;G&rsquo;、&rsquo;l&rsquo;、&rsquo;m&rsquo;、&rsquo;r&rsquo;、&rsquo;e&rsquo;，并输出。"
            },
            "input": {
                "text": "China"
            },
            "output": {
                "text": "加密后的China"
            },
            "sample_input": {
                "text": "China"
            },
            "sample_output": {
                "text": "Glmre"
            },
            "hint": {},
            "source": {},
            "solution": [
                {
                    "text": "#include\nint main()\n{\n\tchar c1,c2,c3,c4,c5;\n\tscanf(\"%c%c%c%c%c\",&c1,&c2,&c3,&c4,&c5);\n\tprintf(\"%c%c%c%c%c\\n\",c1+4,c2+4,c3+4,c4+4,c5+4);\n    return 0;\n}",
                    "@language": "C"
                },
                {
                    "text": "#include\n#include\n#include\n#include\n#include\nusing namespace std;\nvoid change(int& x,int & y)\n{\n\tint temp;\n\ttemp=x;x=y;y=temp;\n}\nint main()\n{\n\t//ifstream cin(\"aaa.txt\");\n\tint i,j,n;\n\tint x,y,z;\n\ncout<<\"Glmre\"<<endl;\nreturn 0;\n}",
                    "@language": "C++"
                },
                {
                    "text": "import java.util.*;\npublic class Main{\n    public static void main(String[] args){\n        Scanner in=new Scanner(System.in);\n       String str =in.next();\n       for(int i=0;i<str.length();i++){\n           char a =(char)(str.charAt(i)+4);\n           System.out.print(a);\n        }\n        System.out.println();\n    }\n}",
                    "@language": "Java"
                }
            ]
        },
        {
            "id": "00000129",
            "title": {
                "text": "C语言-水仙花数"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "128",
                "@unit": "mb"
            },
            "description": {
                "text": "打印出所有&quot;水仙花数&quot;，所谓&quot;水仙花数&quot;是指一个三位数，其各位数字立方和等于该本身。 例如：153是一个水仙花数，因为153=1^3+5^3+3^3。 Output:\n\n153\n???\n???\n??? "
            },
            "input": {
                "text": "无"
            },
            "output": {
                "text": "所有的水仙花数，从小的开始。 每行一个"
            },
            "sample_input": {},
            "sample_output": {},
            "test_input": {
                "text": "1"
            },
            "test_output": {
                "text": "153\n370\n371\n407"
            },
            "hint": {},
            "source": {},
            "solution": [
                {
                    "text": "#include\nint main(){\n   int i,j,k,n;\n   for(i=1;i<10;i++)\n     for(j=0;j<10;j++)\n       for(k=0;k<10;k++)\n       {\n            n=i*100+j*10+k;\n            if((i*100+j*10+k)==((i*i*i)+(j*j*j)+(k*k*k)))\n               printf(\"%d\\n\",n);\n       }\n   return 0;\n}",
                    "@language": "C"
                },
                {
                    "text": "#include \nusing namespace std;\nvoid print(int a,int b,int c,int num)\n{\n     if(a*a*a+b*b*b+c*c*c==num)\n     cout<<num<<endl;\n}\n     \nint main(){\n    int num,a,b,c;\n    for(num=100;num<1000;num++){\n               a=num/100;\n               b=num/10%10;\n               c=num%10;\n               print(a,b,c,num);\n    }\n     return 0;     \n}",
                    "@language": "C++"
                },
                {
                    "text": "var\n  a,b,c,i:longint;\nbegin\n  for i:=100 to 999 do\n  begin\n    a:=i div 100;\n    b:=i mod 100 div 10;\n    c:=i mod 100 mod 10;\n    if a*a*a+b*b*b+c*c*c=i then writeln(i);\n  end;\nend.",
                    "@language": "Pascal"
                },
                {
                    "text": "public class Main {\n\tpublic static void main(String[] args) {\n\t\tint count1=0;\n\t\tfor(int i=100;i<=999;i++)\n\t\t{\n\t\t\tint a=i%10;\n\t\t\tint b=i/10%10;\n\t\t\tint c=i/100;\n\t\t\tif(a*a*a+b*b*b+c*c*c==i)\n\t\t\t\tSystem.out.println(i);\n\t\t}\n\t}\n}",
                    "@language": "Java"
                }
            ]
        },
        {
            "id": "00000130",
            "title": {
                "text": "C语言-公约公倍2"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "128",
                "@unit": "mb"
            },
            "description": {
                "text": "写两个函数，分别求两个整数的最大公约数和最小公倍数，用主函数调用这两个函数，并输出结果两个整数由键盘输入。"
            },
            "input": {
                "text": "两个数"
            },
            "output": {
                "text": "最大公约数 最小公倍数"
            },
            "sample_input": {
                "text": "6 15"
            },
            "sample_output": {
                "text": "3 30"
            },
            "hint": {},
            "source": {},
            "solution": [
                {
                    "text": "int gy(int n,int m)\n{\n   int tem;\n   while(m)\n   {\n     tem=m;\n     m=n%m;\n\t n=tem;\n   }\n return n;\n}\nint gg(int n,int m)\n{\n   return m/gy(n,m)*n;\n}\nint main(int argc, char* argv[])\n{\n\tint a,b;\n\twhile(~scanf(\"%d%d\",&a,&b))\n\t{\n\t  if(a<b)\n\t\t  printf(\"%d %d\\n\",gy(b,a),gg(b,a));\n       else\n\t\t  printf(\"%d %d\\n\",gy(a,b),gg(a,b));\n\t}\n\treturn 0;\n}",
                    "@language": "C"
                },
                {
                    "text": "#include \nusing namespace std;\nint gcd(int x,int y)\n{\n\treturn y?gcd(y,x%y):x;\n}\nint lcm(int x,int y)\n{\n\treturn x*y/gcd(x,y);\n}\nint main()\n{\n\tint x,y;\n\tcin>>x>>y;\n\tcout<<gcd(x,y)<<\" \"<<lcm(x,y); \n\treturn 0;\n}",
                    "@language": "C++"
                },
                {
                    "text": "var i,j,k,l,m,n,r:longint;\nprocedure zuidagongyueshu(q,p:longint);\nbegin\n if p>q then\n      begin\n        l:=q;\n        q:=p;\n        p:=l;\n      end;\n      r:=q-p;\n  repeat\n    if r>=p then\n      begin\n        p:=p;\n        q:=r;\n      end;\n    if r<=p then\n      begin\n        q:=p;\n        p:=r;\n      end;\n       r:=q-p;\n    until r=0;\n    i:=p;\n  write(q,' ');\n end;\n procedure zuixiaogongbeishu(m,n:longint);\n begin\n   k:=m div i;\n   l:=n div i;\n   r:=k*l*i;\n   for j:=i to r do\n     if (j mod m=0) and (j mod n =0) then\n       break;\n     writeln(j);\n   end;\n\nbegin\n  readln(m,n);\n  zuidagongyueshu(m,n);\n  zuixiaogongbeishu(m,n);\nend.",
                    "@language": "Pascal"
                },
                {
                    "text": "import java.util.Scanner;\n\n\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\tint a = sc.nextInt();\n\t\tint b = sc.nextInt();\n\t\tSystem.out.printf(\"%d %d\",gcd(a,b),a*b/gcd(a,b));\n\t}\n\tstatic int gcd(int a,int b) {\n\t\treturn b==0?a:gcd(b,a%b);\n\t}\n}",
                    "@language": "Java"
                },
                {
                    "text": "# coding=utf-8\ndef max_g(x,y):\n    if x>y:\n        min_num=y\n    else:\n        min_num=x\n    for i in range(1,min_num+1):\n        if x%i==0 and y%i==0:\n           g=i\n    return g\ndef min_g(x,y):\n    if x>y:\n      max_num=x\n    else:\n      max_num=y\n    while True:\n      if max_num%x==0 and max_num%y==0:\n          return max_num\n      else:\n          max_num+=1\n\n\nimport sys\nif __name__ == '__main__':\n    x,y=map(int,sys.stdin.readline().strip().split())\n    print(max_g(x,y),min_g(x,y))",
                    "@language": "Python"
                }
            ]
        },
        {
            "id": "00000131",
            "title": {
                "text": "《C语言程序设计》江宝钏主编-习题1-3-新年好"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "128",
                "@unit": "mb"
            },
            "description": {
                "text": "编写程序在屏幕上显示：\n*****************************\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Happy New Year!\n*****************************\n注意：\n29个星号，Happy New Year!首字母大写，中间1个空格隔开，末尾有英文叹号。\nH之前7个空格，叹号之后没有空格。\n一共3行，中间没有空行。"
            },
            "input": {
                "text": "没有输入"
            },
            "output": {
                "text": "*****************************\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Happy New Year!\n*****************************"
            },
            "sample_input": {
                "text": "没有输入"
            },
            "sample_output": {
                "text": "*****************************\n       Happy New Year!\n*****************************"
            },
            "hint": {
                "text": "复制样例输出，改成程序代码。"
            },
            "source": {},
            "solution": [
                {
                    "text": "int main(int argc, char* argv[])\n{\n\tprintf(\"*****************************\\n\");\n\tprintf(\"       Happy New Year!\\n\");\n\tprintf(\"*****************************\\n\");\n\treturn 0;\n}",
                    "@language": "C"
                },
                {
                    "text": "#include \nint main()\n{\n\tprintf(\"*****************************\\n       Happy New Year!\\n*****************************\");\n}",
                    "@language": "C++"
                },
                {
                    "text": "program aa;\nbegin\n  writeln('*****************************');\n  writeln('       Happy New Year!');\n  writeln('*****************************');\nend.",
                    "@language": "Pascal"
                },
                {
                    "text": "# coding=utf-8\nprint(\"*\"*29)\nprint(\" \"*7,end=\"\")\nprint(\"Happy New Year!\")\nprint(\"*\"*29)",
                    "@language": "Python"
                }
            ]
        },
        {
            "id": "00000132",
            "title": {
                "text": "《C语言程序设计》江宝钏主编-习题5-4-素数表"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "128",
                "@unit": "mb"
            },
            "description": {
                "text": "从键盘输入m,n\n在屏幕上按每行10个的格式输出m~n之间的全部素数"
            },
            "input": {
                "text": "两个整数m n"
            },
            "output": {
                "text": "m~n间的素数，每行10个，每个数后用空格隔开。如果m和n为素数则包含。"
            },
            "sample_input": {
                "text": "100 200"
            },
            "sample_output": {
                "text": "101 103 107 109 113 127 131 137 139 149 \n151 157 163 167 173 179 181 191 193 197 \n199"
            },
            "hint": {},
            "source": {},
            "solution": [
                {
                    "text": "#include \nint main(void)\n{\n\tint m,n,i,j,z;\n\tscanf(\"%d%d\",&m,&n);\n\tfor (i=m;i<=n;i++)\n\t{\n\t\tfor (j=2;j<i;j++)\n\t\t{\n\t\t\tif (i%j==0)\n\t\t\t\tbreak;\n\t\t\telse if (i==j+1)\n\t\t\t {\n\t\t\t\t printf (\"%d \",i);\n\t\t\t\t z++;\n\t\t     }\n\t\t}\n\t\tif (z==10)\n\t\t{\n\t\t\tprintf(\"\\n\");\n\t\t\tz=0;\n\t\t}\n\t}\n\treturn 0;\n}",
                    "@language": "C"
                },
                {
                    "text": "#include\n#include\n#include\nusing namespace std;\nbool a[10000];\nint main()\n{\n\tint m,n;\n\tcin>>m>>n;\n\tmemset(a,true,sizeof(a));\n\ta[0]=a[1]=false;\n\tint t=sqrt(n);\n\tfor (int i=2; i<=t; i++)\n\t\tif (a[i])\n\t\t\tfor (int j=2*i; j<=n; j+=i) a[j]=false;\n\tt=0;\n\tfor (int i=m; i<=n; i++)\n\t\tif (a[i])\n\t\t{\n\t\t\tcout<<i<<\" \";\n\t\t\tt++;\n\t\t\tif (t%10==0) cout<<endl;\n\t\t}\n\tif (t%10) cout<<endl;\n\treturn 0;\n}",
                    "@language": "C++"
                },
                {
                    "text": "import java.util.Scanner;\n\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\t\t// TODO Auto-generated method stub\n\t\tScanner sc = new Scanner(System.in);\n\t\tint m =sc.nextInt();\n\t\tint n = sc.nextInt();\n\t\tint count = 0;\n\t\tfor (int i = m; i <= n; i++) {\n\t\t\tfor (int j = 2; j <= i; j++) {\n\t\t\t\tif(i%j!=0) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}else if(j==i){\n\t\t\t\t\tif(count%10==0&&count!=0) {\n\t\t\t\t\t\tSystem.out.println();\n\t\t\t\t\t}\n\t\t\t\t\tSystem.out.print(i+\" \");\n\t\t\t\t\tcount++;\n\t\t\t\t}else {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}",
                    "@language": "Java"
                },
                {
                    "text": "# coding=utf-8\ndef is_prime(x):\n    if x==1:\n        return False\n    for i in range(2,int(x**0.5+1)):\n        if x%i==0:\n            return False\n    return True\nm,n=map(int,input().split())\ni=0\nfor x in range(m,n+1):\n    if is_prime(x):\n        i+=1\n        if i%10:\n            print(x,end=' ')\n        else:\n            print(x)",
                    "@language": "Python"
                }
            ]
        },
        {
            "id": "00000133",
            "title": {
                "text": "反序数"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "32",
                "@unit": "mb"
            },
            "description": {
                "text": "\n\t设N是一个四位数，它的9倍恰好是其反序数（例如：1234的反序数是4321）\n求N的值\n"
            },
            "input": {
                "text": "\n\t程序无任何输入数据。\n"
            },
            "output": {
                "text": "\n\t输出题目要求的四位数，如果结果有多组，则每组结果之间以回车隔开。\n"
            },
            "sample_input": {},
            "sample_output": {},
            "test_input": {
                "text": "0"
            },
            "test_output": {
                "text": "1089"
            },
            "hint": {},
            "source": {
                "text": "算法笔记 名校复试机考真题-清华大学"
            },
            "solution": [
                {
                    "text": "#include\nint main(){\n  printf(\"1089\\n\");\n  return 0;\n}",
                    "@language": "C"
                },
                {
                    "text": "#include\n#include\n#include\nusing namespace std;\n\nint main()\n{\n\tint i;\n\tchar a[5],b[6];\n\tfor(i=1000;i<=9999;i++)\n\t{\n\t\tsprintf(a,\"%d\",i);\n\t\tsprintf(b,\"%d\",i*9);\n\t\treverse(b,b+strlen(b));\n\t\tif(!strcmp(a,b))\n\t\t\tprintf(\"%d\\n\",i);\n\t}\n\treturn 0;\n}",
                    "@language": "C++"
                },
                {
                    "text": "var\n n,a,b,c,d,s:longint;\nbegin\n for n:=1000 to 9999 do\n begin\n  a:=n div 1000;\n  b:=n mod 1000 div 100;\n  c:=n mod 100 div 10;\n  d:=n mod 10;\n  s:=d*1000+c*100+b*10+a;\n  if s div 9=n then writeln(n);\n end;\nend.",
                    "@language": "Pascal"
                },
                {
                    "text": "public class Main {\n\tpublic static void main(String[] args) {\n\t\tfor (int i = 1000; i  0) {\n\t\t\ta[i] = n % 10;\n\t\t\tn = n / 10;\n\t\t\ti-- ;\n\t\t}\n\t\t\n\t\t\n\t\tint s = 0 ;\n\t\t\n\t\tfor (int j = 0; j < a.length; j++) {\n\t\t\ts = (int) (s + a[j]*Math.pow(10, j)) ;\n\t\t}\n\t\t\n\t\treturn s ;\n\t}\n}",
                    "@language": "Java"
                }
            ]
        },
        {
            "id": "00000134",
            "title": {
                "text": "abc"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "32",
                "@unit": "mb"
            },
            "description": {
                "text": "\n\t设a、b、c均是0到9之间的数字，abc、bcc是两个三位数，且有：abc+bcc=532。求满足条件的所有a、b、c的值。\n"
            },
            "input": {
                "text": "\n\t题目没有任何输入。\n"
            },
            "output": {
                "text": "\n\t请输出所有满足题目条件的a、b、c的值。\na、b、c之间用空格隔开。\n每个输出占一行。\n"
            },
            "sample_input": {},
            "sample_output": {},
            "test_input": {
                "text": "0"
            },
            "test_output": {
                "text": "3 2 1"
            },
            "hint": {},
            "source": {
                "text": "算法笔记 名校复试机考真题-清华大学 洛谷"
            },
            "solution": [
                {
                    "text": "#include\nint main(){\n  printf(\"3 2 1\\n\");\n  return 0;\n}",
                    "@language": "C"
                },
                {
                    "text": "#include\n\nint main()\n{\n\tint a,b,c;\n\tfor(a=1;a<=4;a++)\n\t\tfor(b=1;b<=4;b++)\n\t\t\tfor(c=0;c<=9;c++)\n\t\t\t\tif(a*100+b*10+c+b*100+c*10+c==532)\n\t\t\t\t\tprintf(\"%d %d %d\\n\",a,b,c);\n\treturn 0;\n}",
                    "@language": "C++"
                },
                {
                    "text": "var\n  a,b,c:longint;\nbegin\n  for a:=0 to 9 do\n    for b:=0 to 9 do\n      for c:=0 to 9 do\n        if (a*100+b*10+c+100*b+11*c=532) then\n          begin\n            writeln(a,' ',b,' ',c);\n          end;\nend.",
                    "@language": "Pascal"
                },
                {
                    "text": "public class Main {\n   public static void main(String[] args) {\n\t for (int a = 0; a <= 9; a++) {\n\t\tfor (int b = 0; b <= 9; b++) {\n\t\t\tfor (int c = 0; c <= 9; c++) {\n\t\t\t   if((a*100+b*10+c)+(b*100+c*10+c)==532){\n\t\t\t\t   System.out.println(a+\" \"+b+\" \"+c) ;\n\t\t\t   }\t\n\t\t\t}\n\t\t}\n\t}\n   }\n}",
                    "@language": "Java"
                },
                {
                    "text": "# coding=utf-8\nfor a in range(10):\n    for b in range(10):\n        for c in range(10):\n            if a*100+b*10+c+b*100+c*11==532:\n                print(a,b,c)",
                    "@language": "Python"
                },
                {
                    "text": "using System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\n\nclass Program\n    {\n        static void Main(string[] args)\n        {\n            int c;\n            for (int a = 1; a <= 4; a++)\n            {\n                for (int b = 1; b <= 4; b++)\n                {\n                    c = 1;\n                    if (100 * (a + b) + 10 * (b + c) + 2 * c == 532)\n                        Console.WriteLine(a + \" \" + b + \" \" + c);\n                    else\n                    {\n                        c = 6;\n                        if (100 * (a + b) + 10 * (b + c) + 2 * c == 532)\n                            Console.WriteLine(a + \" \" + b + \" \" + c);\n\n                    }\n                }\n            }\n        }\n    }",
                    "@language": "C#"
                }
            ]
        },
        {
            "id": "00000135",
            "title": {
                "text": "百万富翁问题"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "32",
                "@unit": "mb"
            },
            "description": {
                "text": "\n\t一个百万富翁遇到一个陌生人，陌生人找他谈了一个换钱的计划。该计划如下：我每天给你10万元，你第一天给我1分钱，第二天2分钱，第三天4分钱……这样交换30天后，百万富翁交出了多少钱？陌生人交出了多少钱？（注意一个是万元，一个是分）\n"
            },
            "input": {
                "text": "\n\t无输入。\n"
            },
            "output": {
                "text": "\n\t用%ld输出，输出百万富翁和陌生人各自交出的钱数，单位是元。\n"
            },
            "sample_input": {},
            "sample_output": {},
            "test_input": {
                "text": "0"
            },
            "test_output": {
                "text": "10737418 3000000"
            },
            "hint": {},
            "source": {
                "text": "名校复试机考真题-哈尔滨工业大学"
            },
            "solution": [
                {
                    "text": "#include \nint main()\n{\n\tlong sum, n;\n\tint i;\n\tsum = 0;\n\tn = 1;\n\tfor(i = 0; i < 30; i++)\n\t{\n\t\tsum += n;\n\t\tn *= 2;\n\t}\n\tprintf(\"%ld %ld\\n\", sum / 100, 10*10000*30);\n\treturn 0;\n}",
                    "@language": "C"
                },
                {
                    "text": "#include\n#include\n\nint main()\n{\n\tlong int a=1,i;\n\tfor(i=1;i<30;i++)\n\t\ta+=pow(2,i);\n\tprintf(\"%ld %ld\\n\",a/100,10*30*10000);\n\treturn 0;\n}",
                    "@language": "C++"
                },
                {
                    "text": "public class Main {\n\tpublic static void main(String[] args) {\n\t\t\tint i;\n\t\t\tlong s=0;\n\t\t\t\n\t\t\tfor(i=0;i<30;i++) {\n\t\t\t\ts=2*s+1;\n\t\t\t}\n\t\t\ts=s/100;\n\t\t\t\n\t\t\tSystem.out.println(s+\" 3000000\");\n\t\t\t\n     }\n}",
                    "@language": "Java"
                },
                {
                    "text": "# coding=utf-8\na=100000*30\nb=0.01\ns=0\nfor i in range(1,31):\n    s=s+b\n    b=b*2\nprint(\"%d %d\"%(s,a))",
                    "@language": "Python"
                }
            ]
        },
        {
            "id": "00000136",
            "title": {
                "text": "任务调度"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "32",
                "@unit": "mb"
            },
            "description": {
                "text": "\n\t读入任务调度序列，输出n个任务适合的一种调度方式。\n"
            },
            "input": {
                "text": "\n\t输入包含多组测试数据。\n\n\n\t每组第一行输入一个整数n（n&lt;100000），表示有n个任务。\n\n\n\t接下来n行，每行第一个表示前序任务，括号中的任务为若干个后序任务，表示只有在前序任务完成的情况下，后序任务才能开始。若后序为NULL则表示无后继任务。\n"
            },
            "output": {
                "text": "输出调度方式，输出如果有多种适合的调度方式，请输出字典序最小的一种。"
            },
            "sample_input": {
                "text": "4\nTask0(Task1,Task2)\nTask1(Task3)\nTask2(NULL)\nTask3(NULL)"
            },
            "sample_output": {
                "text": "Task0 Task1 Task2 Task3"
            },
            "hint": {},
            "source": {
                "text": "算法笔记 名校复试机考真题-中国科学技术大学 洛谷"
            },
            "solution": [
                {
                    "text": "#include\nvoid main(){puts(\"Task0 Task1 Task2 Task3\");}",
                    "@language": "C"
                },
                {
                    "text": "#include\n#include\n#include\n#include\n#include\n#include\n#include\nusing namespace std;\n\nchar str[100006];\nstring task[100000];\nint in[100000];\nint n;\n\nclass cmp {\n\tpublic:\n\tbool operator()(int a,int b) const {\n\t\treturn task[a]>task[b];\n\t}\n};\n\nmap mm;\npriority_queue,cmp> pq;\nvector l[100000];\n\nint getIndex(char *s) {\n\tmap::iterator it=mm.find(string(s));\n\tif (it==mm.end()) {\n\t\tint ret=mm.size();\n\t\ttask[ret]=string(s);\n\t\tmm.insert(make_pair(task[ret],ret));\n\t\treturn ret;\n\t}\n\treturn it->second;\n}\n\nint main() {\n\twhile(scanf(\"%d\",&n)!=EOF) {\n\t\tmm.clear();\n\t\tfor(int i=0;i<n;i++) l[i].clear(),in[i]=0;\n\t\tfor(int i=0;i<n;i++) {\n\t\t\tscanf(\"%s\",str);\n\t\t\tchar *p=strtok(str,\"(,)\");\n\t\t\tint t=getIndex(p);\n\t\t\twhile(p=strtok(NULL,\"(,)\")) {\n\t\t\t\tif (!strcmp(p,\"NULL\")) continue;\n\t\t\t\tint t1=getIndex(p);\n\t\t\t\tl[t].push_back(t1);\n\t\t\t\tin[t1]++;\n\t\t\t}\n\t\t}\n\t\tfor(int i=0;i<n;i++) if (!in[i]) pq.push(i);\n\t\tint first=1;\n\t\twhile(!pq.empty()) {\n\t\t\tif (first) first=0; else putchar(' ');\n\t\t\tint cur=pq.top();\n\t\t\tpq.pop();\n\t\t\tprintf(\"%s\",task[cur].c_str());\n\t\t\tfor(int i=0;i<l[cur].size();i++) {\n\t\t\t\tif (!--in[l[cur][i]]) pq.push(l[cur][i]);\n\t\t\t}\n\t\t}\n\t\tputs(\"\");\n\t}\n\treturn 0;\n}",
                    "@language": "C++"
                },
                {
                    "text": "import java.util.*;\nimport java.util.concurrent.LinkedBlockingQueue;\n\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\tScanner in = new Scanner(System.in);\n\t\twhile(in.hasNext()) {\n\t\t\tString ns = in.nextLine();\n\t\t\tint n = Integer.valueOf(ns);\n\t\t\tint[][] a = new int[n][n];\n\t\t\tboolean[] wasVisit = new boolean[n];\n\t\t\tfor(int i=0;i q = new LinkedBlockingQueue<>();\n\t\t\twhile(q.size()<n) {\n\t\t\t\tfor(int i=0;i<n;i++) {\n\t\t\t\t\tif(wasVisit[i])\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\tboolean b = true;\n\t\t\t\t\tfor(int j=0;j<n;j++) {\n\t\t\t\t\t\tif(a[i][j]==1) {\n\t\t\t\t\t\t\tb = false;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif(b) {\n\t\t\t\t\t\tq.add(i);\n\t\t\t\t\t\twasVisit[i] = true;\n\t\t\t\t\t\tfor(int j=0;j<n;j++)\n\t\t\t\t\t\t\ta[j][i] = 0;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tSystem.out.print(\"Task\"+q.remove());\n\t\t\twhile(!q.isEmpty()) {\n\t\t\t\tSystem.out.print(\" Task\"+q.remove());\n\t\t\t}\n\t\t\tSystem.out.println();\n\t\t}\n\t}\n}",
                    "@language": "Java"
                }
            ]
        },
        {
            "id": "00000137",
            "title": {
                "text": "加法等式"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "32",
                "@unit": "mb"
            },
            "description": {
                "text": "\n\t设a、b、c 均是0 到9 之间的数字，abc、bcc 是两个三位数，且有：abc+bcc=532。求\n\n\n\t满足条件的所有a、b、c 的值。\n"
            },
            "input": {
                "text": "\n\t&nbsp;无。\n"
            },
            "output": {
                "text": "\n\t&nbsp;每行输出3个数，分别表示abc的值，用一个空格隔开。\n"
            },
            "sample_input": {
                "text": "no input needed"
            },
            "sample_output": {},
            "test_input": {},
            "test_output": {
                "text": "3 2 1"
            },
            "hint": {},
            "source": {
                "text": "算法笔记 名校复试机考真题-北京理工大学"
            },
            "solution": [
                {
                    "text": "#include\n#include\nint main()\n{\n\tint a,b,c;\n\t//scanf(\"%d%d%d\",&a,&b,&c);\n\tfor(int a=0;a<=5;a++)\n\t\tfor(int b=0;b<=5;b++)\n\t\t\tfor(int c=0;c<=9;c++)\n\t\t\t\tif(((a+b)*100+(b+c)*10+c*2)==532)\n\t\t\t\t\tprintf(\"%d %d %d\\n\",a,b,c);\n\t//system(\"pause\");\n\treturn 0;\n}",
                    "@language": "C"
                },
                {
                    "text": "#include\n#include \nusing namespace std;\nint main()\n{\n    //freopen(\"data.out\", \"w\", stdout);\n    int a,b,c;\n    for(int i=100; i<1000; i++)\n    {\n        a=i/100;\n        b=i/10-a*10;\n        c=i%10;\n        if((i+b*100+c*10+c)==532)\n        {\n            cout<<a<<\" \"<<b<<\" \"<<c;\n            cout<<endl;\n        }\n    }\n    return 0;\n}",
                    "@language": "C++"
                },
                {
                    "text": "public class Main {\n    public static void main(String[] args) {\n        for (int a = 0; a < 9; a++) {\n            for (int b = 0; b < 9; b++) {\n                for (int c = 0; c < 9; c++) {\n                    if(a*100+b*10+c+b*100+c*10+c == 532){\n                        System.out.print(a+\" \");\n                        System.out.print(b+\" \");\n                        System.out.print(c+\" \");\n                    }\n                }\n            }\n        }\n    }\n}",
                    "@language": "Java"
                }
            ]
        },
        {
            "id": "00000138",
            "title": {
                "text": "完数与盈数"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "32",
                "@unit": "mb"
            },
            "description": {
                "text": "\n\t一个数如果恰好等于它的各因子（该数本身除外）子和，如：6=3+2+1，则称其为“完数”；\n\n\n\t若因子之和大于该数，则称其为“盈数”。求出2 到60 之间所有“完数”和“盈数”，并以如\n\n\n\t下形式输出： E: e1 e2 e3 ......(ei 为完数) G: g1 g2 g3 ......(gi 为盈数)\n"
            },
            "input": {
                "text": "\n\t无\n"
            },
            "output": {
                "text": "\n\t按描述要求输出（注意EG后面的冒号之后有一个空格）。\n"
            },
            "sample_input": {},
            "sample_output": {},
            "test_input": {
                "text": "nothin"
            },
            "test_output": {
                "text": "E: 6 28 G: 12 18 20 24 30 36 40 42 48 54 56 60"
            },
            "hint": {},
            "source": {
                "text": "算法笔记 名校复试机考真题-北京理工大学"
            },
            "solution": [
                {
                    "text": "#include\n\nint main()\n{\n\tint i,j;\n\tint num;\n\n\tprintf(\"E: \");\n\tfor( i=2; i i )\n\t\t{\n\t\t\tprintf(\"%d \",i);\n\t\t}\n\t}\n\tprintf(\"\\n\");\n\treturn 0;\n}",
                    "@language": "C"
                },
                {
                    "text": "#include \nusing namespace std;\n\nint main()\n{\n    coutk)\n        {\n            cout<<\" \"<<k;\n        }\n    }\n    cout<<endl;\n    return 0;\n}",
                    "@language": "C++"
                },
                {
                    "text": "public class Main {\n      \n\tpublic static void main(String[] args)\n\t{  \t\n\t\tint i,j,sum,k=0;\n\t\tint[] a=new int[60];\n\t\tSystem.out.print(\"E: \");\n\t\tfor(i=2;ii)a[k++]=i;\n\t\t    if(sum==i)System.out.print(sum+\" \");\n\t\t}\n\t\tSystem.out.print(\"G: \");\n\t\tfor(i=0;i<k-1;i++)\n\t\t\tSystem.out.print(a[i]+\" \");\n\t\tSystem.out.println(a[i]);\n\t\t}\n\n\t}",
                    "@language": "Java"
                }
            ]
        },
        {
            "id": "00000139",
            "title": {
                "text": "农夫、羊、菜和狼的故事"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "32",
                "@unit": "mb"
            },
            "description": {
                "text": "\n\t\n\n\n\t有一个农夫带一只羊、一筐菜和一只狼过河。\n如果没有农夫看管，则狼要吃羊，羊要吃菜。\n但是船很小，只够农夫带一样东西过河。\n问农夫该如何解此难题？\n\n\n\t\n"
            },
            "input": {
                "text": "\n\t\n\n\n\t题目没有任何输入。\n\n\n\t\n"
            },
            "output": {
                "text": "\n\t\n\n\n\t题目可能有种解决方法，求出步骤最少的解决方法，\n按顺序输出农夫想把羊、菜、狼全部运过河需要哪几个步骤。\n如果需要将羊带过河去则输出“sheep_go”。\n如果需要将羊带回来则输出“sheep_come”。\n如果需要将菜带过河去则输出“vegetable_go”。\n如果需要将菜带回来则输出“vegetable_come”。\n如果需要将狼带过河去则输出“wolf_go”。\n如果需要将狼带回来则输出“wolf_come”。\n如果需要空手返回则输出“nothing_come”。\n如果需要空手过河则输出“nothing_go”。\n每输出一种方案，输出一行“succeed”。\n\n\n\t\n"
            },
            "sample_input": {},
            "sample_output": {},
            "test_input": {
                "text": "no input"
            },
            "test_output": {
                "text": "sheep_go\nnothing_come\nwolf_go\nsheep_come\nvegetable_go\nnothing_come\nsheep_go\nsucceed\nsheep_go\nnothing_come\nvegetable_go\nsheep_come\nwolf_go\nnothing_come\nsheep_go\nsucceed"
            },
            "hint": {},
            "source": {
                "text": "名校复试机考真题-华中科技大学"
            },
            "solution": [
                {
                    "text": "#include\nint main()\n{\n\t    printf(\"sheep_go\\n\");\n        printf(\"nothing_come\\n\");\n        printf(\"wolf_go\\n\");\n        printf(\"sheep_come\\n\");\n        printf(\"vegetable_go\\n\");\n        printf(\"nothing_come\\n\");\n        printf(\"sheep_go\\n\");\n        printf(\"succeed\\n\");\n       // printf(\"\\n\");\n        \n        printf(\"sheep_go\\n\");\n        printf(\"nothing_come\\n\");\n        printf(\"vegetable_go\\n\");\n        printf(\"sheep_come\\n\");\n        printf(\"wolf_go\\n\");\n        printf(\"nothing_come\\n\");\n        printf(\"sheep_go\\n\");\n        printf(\"succeed\\n\");\n     //   printf(\"\\n\");\n\n        \n        return(0);\n}",
                    "@language": "C"
                },
                {
                    "text": "#include\nint main()\n{\n printf(\"sheep_go\\n\");\n printf(\"nothing_come\\n\"); \n printf(\"wolf_go\\n\"); \n printf(\"sheep_come\\n\");\n printf(\"vegetable_go\\n\");\n printf(\"nothing_come\\n\");\n printf(\"sheep_go\\n\");\n printf(\"succeed\\n\");\n\n \n\n printf(\"sheep_go\\n\");\n printf(\"nothing_come\\n\");\n printf(\"vegetable_go\\n\");  \n printf(\"sheep_come\\n\");\n printf(\"wolf_go\\n\"); \n printf(\"nothing_come\\n\");\n printf(\"sheep_go\\n\");\n printf(\"succeed\\n\");\n return 0;\n}",
                    "@language": "C++"
                },
                {
                    "text": "public class Main{\n  public static void main(String[] args){\n    System.out.println(\"sheep_go\");\n    System.out.println(\"nothing_come\");\n    System.out.println(\"wolf_go\");\n    System.out.println(\"sheep_come\");\n    System.out.println(\"vegetable_go\");\n    System.out.println(\"nothing_come\");\n    System.out.println(\"sheep_go\");\n    System.out.println(\"succeed\");\n    System.out.println(\"sheep_go\");\n    System.out.println(\"nothing_come\");\n    System.out.println(\"vegetable_go\");\n    System.out.println(\"sheep_come\");\n    System.out.println(\"wolf_go\");\n    System.out.println(\"nothing_come\");\n    System.out.println(\"sheep_go\");\n    System.out.println(\"succeed\");\n  }\n}",
                    "@language": "Java"
                }
            ]
        },
        {
            "id": "00000140",
            "title": {
                "text": "排名"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "32",
                "@unit": "mb"
            },
            "description": {
                "text": "\n\t今天的上机考试虽然有实时的Ranklist，但上面的排名只是根据完成的题数排序，没有考虑每题的分值，所以并不是最后的排名。给定录取分数线，请你写程序找出最后通过分数线的考生，并将他们的成绩按降序打印。 \n"
            },
            "input": {
                "text": "\n\t测试输入包含若干场考试的信息。每场考试信息的第1行给出考生人数N&nbsp;(&nbsp;0&nbsp;&lt;&nbsp;N&nbsp;&lt;&nbsp;1000&nbsp;)、考题数M&nbsp;(&nbsp;0&nbsp;&lt;&nbsp;M&nbsp;&lt;&nbsp;=&nbsp;10&nbsp;)、分数线（正整数）G；第2行排序给出第1题至第M题的正整数分值；以下N行，每行给出一名考生的准考证号（长度不超过20的字符串）、该生解决的题目总数m、以及这m道题的题号（题目号由1到M）。&nbsp;\n当读入的考生人数为0时，输入结束，该场考试不予处理。 \n"
            },
            "output": {
                "text": "\n\t对每场考试，首先在第1行输出不低于分数线的考生人数n，随后n行按分数从高到低输出上线考生的考号与分数，其间用1空格分隔。若有多名考生分数相同，则按他们考号的升序输出。 \n"
            },
            "sample_input": {
                "text": "3 5 32\n17 10 12 9 15\nCS22003 5 1 2 3 4 5\nCS22004 3 5 1 3\nCS22002 2 1 5\n0"
            },
            "sample_output": {
                "text": "3\nCS22003 63\nCS22004 44\nCS22002 32"
            },
            "hint": {
                "text": "\n\t\n\t\t这题比较简单，计算好每个人的分数后按题目要求排序即可。\n\t\n"
            },
            "source": {
                "text": "算法笔记 名校复试机考真题-浙江大学 洛谷"
            },
            "solution": [
                {
                    "text": "#include\n#include\ntypedef struct Record\n{\n  char no[20];\n  int source;\n}Record;\nint main()\n{\n  int N,M,G;\n  int source[20];\n  Record student[1000];\n  scanf(\"%d\",&N);\n  while(N!=0)\n  {\n    scanf(\"%d%d\",&M,&G);\n    int i=0;\n    int count=0;\n    while(i=G)\n      {\n        for(j=count-1;j>=0;j--)\n        {\n          if(student[j].source0)\n          printf(\"%d\\n\",count);\n    for(i=0;i<count;i++)\n    {\n      printf(\"%s %d\\n\",student[i].no,student[i].source);\n    }\n    scanf(\"%d\",&N);\n  }\n}",
                    "@language": "C"
                },
                {
                    "text": "#include \n#include \n#include \n#include \nusing namespace std;\n\nstruct Student {\n    int score;\n    string id;\n};\n\nStudent a[1005];\n\nbool cmp(const Student & l, const Student & r) {\n    if (l.score != r.score)\n        return l.score > r.score;\n    return l.id  0) {\n        scanf(\"%d %d\", &m, &g);\n        for (int i = 1; i  ans;\n        for (int i = 0; i = g)\n                ans.push_back(a[i]);\n        printf(\"%u\\n\", ans.size());\n        for (vector ::iterator it = ans.begin(); it != ans.end(); ++it)\n            printf(\"%s %d\\n\", it->id.c_str(), it->score);\n    }\n    return 0;\n}",
                    "@language": "C++"
                },
                {
                    "text": "import java.util.Scanner;\n\npublic class Main{\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        while(sc.hasNext()){\n            int n=sc.nextInt();\n            if(n==0){\n                return ;\n            }\n            int m = sc.nextInt();\n            int g = sc.nextInt();\n\n            int[] gm = new int[m+1];\n            for(int i=1;i=g){\n                    str[k++]=idstr[i]+\" \"+sum;\n                }\n            }\n\n            if(k==0){\n                System.out.println(0);\n                continue;\n            }\n            //System.out.println(\"aaa\");\n//          else{\n//              for(int i=0;i0){\n                            strm[i]=strm[i]^strm[j];\n                            strm[j]=strm[i]^strm[j];\n                            strm[i]=strm[i]^strm[j];\n\n                            String s=strs[i];\n                            strs[i]=strs[j];\n                            strs[j]=s;\n                        }\n                    }\n                }\n            }\n\n            System.out.println(k);\n            for(int i=0;i<k;i++){\n                System.out.print(strs[i]);\n                System.out.println(\" \"+strm[i]);\n            }\n        }\n    }\n}",
                    "@language": "Java"
                }
            ]
        },
        {
            "id": "00000141",
            "title": {
                "text": "C语言程序设计教程（第三版）课后习题3.7"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "128",
                "@unit": "mb"
            },
            "description": {
                "text": "\n\t要将\"China\"译成密码，译码规律是：用原来字母后面的第4个字母代替原来的字母．例如，字母\"A\"后面第4个字母是\"E\"．\"E\"代替\"A\"。因此，\"China\"应译为\"Glmre\"。请编一程序，用赋初值的方法使cl、c2、c3、c4、c5五个变量的值分别为，’C’、’h’、’i’、’n’、’a’，经过运算，使c1、c2、c3、c4、c5分别变为’G’、’l’、’m’、’r’、’e’，并输出。\n"
            },
            "input": {
                "text": "\n\tChina\n"
            },
            "output": {
                "text": "\n\t加密后的China\n"
            },
            "sample_input": {
                "text": "China"
            },
            "sample_output": {
                "text": "Glmre"
            },
            "hint": {
                "text": "so easy"
            },
            "source": {
                "text": "C程序课后习题"
            },
            "solution": [
                {
                    "text": "#include\nint main()\n{\n\tchar c1='C';\n\tchar c2='h';\n\tchar c3='i';\n\tchar c4='n';\n\tchar c5='a';\n\tc1=c1+4;\n\tc2=c2+4;\n\tc3=c3+4;\n\tc4=c4+4;\n\tc5=c5+4;\n\tprintf(\"%c%c%c%c%c\\n\",c1,c2,c3,c4,c5);\n\treturn 0;\n}",
                    "@language": "C"
                },
                {
                    "text": "#include\nint main()\n{\n\tchar c1='C',c2='h',c3='i',c4='n',c5='a';\n\tc1+=4;c2+=4;c3+=4;c4+=4;c5+=4;\n\tprintf(\"%c%c%c%c%c\\n\",c1,c2,c3,c4,c5);\n}",
                    "@language": "C++"
                }
            ]
        },
        {
            "id": "00000142",
            "title": {
                "text": "C语言程序设计教程（第三版）课后习题6.6"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "128",
                "@unit": "mb"
            },
            "description": {
                "text": "打印出所有\"水仙花数\"，所谓\"水仙花数\"是指一个三位数，其各位数字立方和等于该本身。\n例如：153是一个水仙花数，因为153=1^3+5^3+3^3。\nOutput:\n153\n???\n???\n??? "
            },
            "input": {
                "text": "无"
            },
            "output": {
                "text": "所有的水仙花数，从小的开始。\n每行一个"
            },
            "sample_input": {},
            "sample_output": {},
            "test_input": {
                "text": "1"
            },
            "test_output": {
                "text": "153\n370\n371\n407"
            },
            "hint": {},
            "source": {
                "text": "C程序课后习题"
            },
            "solution": [
                {
                    "text": "#include \nint main(){\nint number,a,b,c;\nfor(number=100;number<1000;number++){\na=number/100;\nb=(number-a*100)/10;\nc=number-a*100-b*10;\nif(number==a*a*a+b*b*b+c*c*c)\nprintf(\"%d\\n\",number);\n}\nreturn 0;}",
                    "@language": "C"
                },
                {
                    "text": "#include\nusing namespace std;\nint main()\n{\n\tint g,s,b;\n\tfor (int i=100; i<999; i++)\n\t{\n\t\tb=i/100;\n\t\ts=i/10%10;\n\t\tg=i%10;\n\t\tif (b*b*b+s*s*s+g*g*g==i) cout<<i<<endl;\n\t}\n\treturn 0;\n}",
                    "@language": "C++"
                },
                {
                    "text": "begin\n  writeln('153');\n  writeln('370');\n  writeln('371');\n  writeln('407');\nend.",
                    "@language": "Pascal"
                }
            ]
        },
        {
            "id": "00000143",
            "title": {
                "text": "C语言程序设计教程（第三版）课后习题8.1"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "128",
                "@unit": "mb"
            },
            "description": {
                "text": "写两个函数，分别求两个整数的最大公约数和最小公倍数，用主函数调用这两个函数，并输出结果两个整数由键盘输入。"
            },
            "input": {
                "text": "两个数"
            },
            "output": {
                "text": "最大公约数 最小公倍数"
            },
            "sample_input": {
                "text": "6 15"
            },
            "sample_output": {
                "text": "3 30"
            },
            "hint": {},
            "source": {
                "text": "C程序课后习题"
            },
            "solution": {
                "text": "#include \n#include \nint f1(int a,int b)\n{\n    int tmp;\n    if(a<b)\n    {\n        tmp=b;\n        b=a;\n        a=tmp;\n    }\n    while(a%b!=0)\n    {\n        tmp=a%b;\n        a=b;\n        b=tmp;\n    }\n    return b;\n}\n\nint f2(int a,int b)\n{\n    int t1,t2;\n    t1=f1(a,b);\n    t2=a*b/t1;\n    return t2;\n}\n\nint main(int argc, char *argv[])\n{\n    int a,b;\n    int t1,t2;\n    scanf(\"%d%d\",&a,&b);\n    t1=f1(a,b);\n    t2=f2(a,b);\n    printf(\"%d %d\",t1,t2);\n\n  return 0;\n}",
                "@language": "C++"
            }
        },
        {
            "id": "00000144",
            "title": {
                "text": "2005年春浙江省计算机等级考试二级C 编程题(2)"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "128",
                "@unit": "mb"
            },
            "description": {
                "text": "\n\nNormal\n0\n\n7.8 磅\n0\n2\n\nfalse\nfalse\nfalse\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nMicrosoftInternetExplorer4\n\n\n\n\n\n\nst1\\:*{behavior:url(#ieooui) }\n\n\n\n/* Style Definitions */\ntable.MsoNormalTable\n{mso-style-name:普通表格;\nmso-tstyle-rowband-size:0;\nmso-tstyle-colband-size:0;\nmso-style-noshow:yes;\nmso-style-parent:\"\";\nmso-padding-alt:0cm 5.4pt 0cm 5.4pt;\nmso-para-margin:0cm;\nmso-para-margin-bottom:.0001pt;\nmso-pagination:widow-orphan;\nfont-size:10.0pt;\nfont-family:\"Times New Roman\";\nmso-fareast-font-family:\"Times New Roman\";\nmso-ansi-language:#0400;\nmso-fareast-language:#0400;\nmso-bidi-language:#0400;}\n\n\n输出一张摄氏一华氏温度转换表，摄氏温度的取值区间是[-1000 C，1500C ]，温度间隔50C。要求定义和调用函数 ctof(c),将摄氏温度C转换成华氏温度F，计算公式： \nF = 32 + C* 9/5。\n例如\nc=0-&gt;f=32\nc=5-&gt;f=41\nc=10-&gt;f=50\nc=15-&gt;f=59\nc=20-&gt;f=68\nc=25-&gt;f=77\nc=30-&gt;f=86\nc=35-&gt;f=95\nc=40-&gt;f=104\nc=45-&gt;f=113\nc=50-&gt;f=122\nc=55-&gt;f=131\nc=60-&gt;f=140\nc=65-&gt;f=149"
            },
            "input": {},
            "output": {},
            "sample_input": {},
            "sample_output": {},
            "test_input": {
                "text": "?"
            },
            "test_output": {
                "text": "c=-100->f=-148\nc=-95->f=-139\nc=-90->f=-130\nc=-85->f=-121\nc=-80->f=-112\nc=-75->f=-103\nc=-70->f=-94\nc=-65->f=-85\nc=-60->f=-76\nc=-55->f=-67\nc=-50->f=-58\nc=-45->f=-49\nc=-40->f=-40\nc=-35->f=-31\nc=-30->f=-22\nc=-25->f=-13\nc=-20->f=-4\nc=-15->f=5\nc=-10->f=14\nc=-5->f=23\nc=0->f=32\nc=5->f=41\nc=10->f=50\nc=15->f=59\nc=20->f=68\nc=25->f=77\nc=30->f=86\nc=35->f=95\nc=40->f=104\nc=45->f=113\nc=50->f=122\nc=55->f=131\nc=60->f=140\nc=65->f=149\nc=70->f=158\nc=75->f=167\nc=80->f=176\nc=85->f=185\nc=90->f=194\nc=95->f=203\nc=100->f=212\nc=105->f=221\nc=110->f=230\nc=115->f=239\nc=120->f=248\nc=125->f=257\nc=130->f=266\nc=135->f=275\nc=140->f=284\nc=145->f=293\nc=150->f=302"
            },
            "hint": {},
            "source": {},
            "solution": [
                {
                    "text": "#include \n#include \n\n/* run this program using the console pauser or add your own getch, system(\"pause\") or input loop */\n\nint ctof(int c)\n{\n\tint f;\n\tf=32+c*9/5;\n\treturn f;\n} \nint main(int argc, char *argv[]) {\n\tint c,f;\n\tfor(c=-100;cf=%d\\n\",c,f);\n\t}\n\treturn 0;\n}",
                    "@language": "C"
                },
                {
                    "text": "#include\nusing namespace std;\nint ctof(int c)\n{\n\treturn 32+c*9/5;\n}\nint main()\n{\n\tfor (int c=-100; cf=\"<<ctof(c)<<endl;\n\treturn 0;\n}",
                    "@language": "C++"
                }
            ]
        },
        {
            "id": "00000145",
            "title": {
                "text": "C语言程序设计教程（第三版）课后习题1.5"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "128",
                "@unit": "mb"
            },
            "description": {
                "text": "请参照本章例题，编写一个C程序，输出以下信息：\n**************************\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Very&nbsp;&nbsp;&nbsp; Good!\n**************************\n数＊号可看出，Very前面9空格，Good前面&hellip;&hellip;\n*也是输出的一部分，别光打印Very Good!"
            },
            "input": {
                "text": "无需输入"
            },
            "output": {
                "text": "**************************\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Very&nbsp;&nbsp;&nbsp; Good!\n**************************"
            },
            "sample_input": {
                "text": "no input needed"
            },
            "sample_output": {
                "text": "**************************\n         Very    Good!\n**************************"
            },
            "test_input": {
                "text": "1234"
            },
            "test_output": {
                "text": "**************************\n         Very    Good!\n**************************"
            },
            "hint": {},
            "source": {},
            "solution": [
                {
                    "text": "#include\nint main()\n{\n    printf(\"**************************\\n\");\n    printf(\"         Very    Good!\\n\");\n    printf(\"**************************\\n\");\n    return 0;\n}",
                    "@language": "C"
                },
                {
                    "text": "#include\nint main()\n{\n    printf(\"**************************\\n\");\n    printf(\"         Very    Good!\\n\");\n    printf(\"**************************\\n\");\n    return 0;\n}",
                    "@language": "C++"
                },
                {
                    "text": "begin\n  writeln('**************************');\n  writeln('         Very    Good!');\n  writeln('**************************');\nend.",
                    "@language": "Pascal"
                }
            ]
        },
        {
            "id": "00000146",
            "title": {
                "text": "C语言程序设计教程（第三版）课后习题3.7"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "128",
                "@unit": "mb"
            },
            "description": {
                "text": "要将&quot;China&quot;译成密码，译码规律是：用原来字母后面的第4个字母代替原来的字母．例如，字母&quot;A&quot;后面第4个字母是&quot;E&quot;．&quot;E&quot;代替&quot;A&quot;。因此，&quot;China&quot;应译为&quot;Glmre&quot;。请编一程序，用赋初值的方法使cl、c2、c3、c4、c5五个变量的值分别为，&rsquo;C&rsquo;、&rsquo;h&rsquo;、&rsquo;i&rsquo;、&rsquo;n&rsquo;、&rsquo;a&rsquo;，经过运算，使c1、c2、c3、c4、c5分别变为&rsquo;G&rsquo;、&rsquo;l&rsquo;、&rsquo;m&rsquo;、&rsquo;r&rsquo;、&rsquo;e&rsquo;，并输出。"
            },
            "input": {
                "text": "China"
            },
            "output": {
                "text": "加密后的China"
            },
            "sample_input": {
                "text": "China"
            },
            "sample_output": {
                "text": "Glmre"
            },
            "hint": {
                "text": "so easy"
            },
            "source": {},
            "solution": [
                {
                    "text": "#include\nint main()\n{\n\tchar a,b,c,d,e;\n\ta='C'+4;\n\tb='h'+4;\n\tc='i'+4;\n\td='n'+4;\n\te='a'+4;\n    putchar(a);\n    putchar(b);\n\tputchar(c);\n\tputchar(d);\n\tputchar(e);\n\tputchar('\\n');\nreturn 0;\n}",
                    "@language": "C"
                },
                {
                    "text": "#include\nusing namespace std;\nint main()\n{\n\tchar c1='C',c2='h',c3='i',c4='n',c5='a';\n\tc1+=4; c2+=4; c3+=4; c4+=4; c5+=4;\n\tcout<<c1<<c2<<c3<<c4<<c5<<endl;\n\treturn 0;\n}",
                    "@language": "C++"
                }
            ]
        },
        {
            "id": "00000147",
            "title": {
                "text": "C语言程序设计教程（第三版）课后习题8.1"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "128",
                "@unit": "mb"
            },
            "description": {
                "text": "写两个函数，分别求两个整数的最大公约数和最小公倍数，用主函数调用这两个函数，并输出结果两个整数由键盘输入。"
            },
            "input": {
                "text": "两个数"
            },
            "output": {
                "text": "最大公约数 最小公倍数"
            },
            "sample_input": {
                "text": "6 15"
            },
            "sample_output": {
                "text": "3 30"
            },
            "hint": {},
            "source": {},
            "solution": {
                "text": "#include\nusing namespace std;\nint gcd(int m,int n)\n{\n\tint r=m%n;\n\twhile (r)\n\t{\n\t\tm=n;\n\t\tn=r;\n\t\tr=m%n;\n\t}\n\treturn n;\n}\nint lcd(int m,int n)\n{\n\treturn m*n/gcd(m,n);\n}\nint main()\n{\n\tint m,n;\n\tcin>>m>>n;\n\tcout<<gcd(m,n)<<\" \"<<lcd(m,n)<<endl;\n\treturn 0;\n}",
                "@language": "C++"
            }
        },
        {
            "id": "00000148",
            "title": {
                "text": "在同一行输出“Hello World! I'm a C++ program.”"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "128",
                "@unit": "mb"
            },
            "description": {
                "text": "\n\t编程输出以下内容 \n\n\n\tHello World! I'm a C++ program. \n\n\n\t这是入门练习题，要求必须用两条输出命令进行输出。 \n\n\n\t\n \n\n\n\t样例输出 \n\n\n\tHello World! I'm a C++ program.\n\n\n\t\n \n\n\n\t注意大小写、空格、感叹号，句号，单引号都必须使用英文输入法里的符号。 \n注意：Hello World! I'm a C++ program.前后不能添加空格，\n\n\n\t严格按照题目要求输出\n\n"
            },
            "input": {},
            "output": {},
            "sample_input": {},
            "sample_output": {},
            "test_input": {
                "text": "0"
            },
            "test_output": {
                "text": "Hello World! I'm a C++ program."
            },
            "hint": {},
            "source": {
                "text": "C++基础教程-程序结构"
            },
            "solution": [
                {
                    "text": "#include\nint main()\n{\n printf(\"Hello World! I'm a C++ program.\\n\");\n }",
                    "@language": "C"
                },
                {
                    "text": "#include \nusing namespace std;\nint main ()\n{\n  cout << \"Hello World!\";\n  cout << \" I'm a C++ program.\";\n  return 0;\n}",
                    "@language": "C++"
                },
                {
                    "text": "begin\nwriteln('Hello World! I''m a C++ program.');\nend.",
                    "@language": "Pascal"
                },
                {
                    "text": "# coding=utf-8\nprint(\"Hello World! I'm a C++ program.\")",
                    "@language": "Python"
                }
            ]
        },
        {
            "id": "00000149",
            "title": {
                "text": "分行输出“Hello World!”和“ I'm a C++ program.”"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "128",
                "@unit": "mb"
            },
            "description": {
                "text": "\n\t请输出以下内容 \n\n\n\tHello World! \n\n\n\tI'm a C++ program.\n\n\n\t\n \n\n\n\t提示:所有的符号是英文符号 \n\n\n\t输出回车的方法举例 \n\n\n\tcout&lt;&lt;\"First Line\"&lt;&lt;endl&lt;&lt;\"Second Line\";&nbsp; // 说明：endl能输出换行 \n\n\n\t也可以这样 cout&lt;&lt;\"First Line\"&lt;&lt;endl; cout&lt;&lt;\"Second Line\";&nbsp; \n\n\n\t还可写成 \n\n\n\tcout&lt;&lt;\"First Line\"; cout&lt;&lt;endl; cout&lt;&lt;\"Second Line\"; \n\n\n\n\t\n \n\n\n\t今后就不再重复提醒必须注意输出的大小写及英文字符，输出内容中该有的空格以及输出每行首尾不该有空格。\n\n\n\t\n\n\n\n\t\n \n"
            },
            "input": {},
            "output": {},
            "sample_input": {},
            "sample_output": {},
            "test_input": {
                "text": "0"
            },
            "test_output": {
                "text": "Hello World!\nI'm a C++ program."
            },
            "hint": {},
            "source": {
                "text": "C++基础教程-程序结构"
            },
            "solution": [
                {
                    "text": "#include\nint main()\n{\n\tprintf(\"Hello World!\\n\");\n\tprintf(\"I'm a C++ program.\\n\");\n}",
                    "@language": "C"
                },
                {
                    "text": "#include\n\nusing namespace std;\nint main()\n{\n  cout<<\"Hello World!\"<<endl<<\"I'm a C++ program.\";\n  //system(\"pause\");\n  return 0;\n   \n\n\n}",
                    "@language": "C++"
                },
                {
                    "text": "begin\nwriteln('Hello World!');\nwriteln('I''m a C++ program.')\nend.",
                    "@language": "Pascal"
                }
            ]
        },
        {
            "id": "00000150",
            "title": {
                "text": "整型变量数值范围练习"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "128",
                "@unit": "mb"
            },
            "description": {
                "text": "\n\t请按以下要求编程，体会整型变量能存放数据的大小范围 \n\n\n\t\n\t\t\n\t\t\t\n\t\t\t\t\n\t\t\t\t\t&nbsp;定义a b c d e f g 七个整形变量。（int类型） \n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\t将常数1234567890保存到变量a \n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\t将常数2147483646保存到变量b \n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\t计算b+1并将结果保存到变量c \n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\t计算c+1并将结果保存到变量d \n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\t将常数-2147483647保存到变量e \n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\t计算e-1并将结果保存到变量f \n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\t计算f-1并将结果保存到变量g \n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\t输出\"a=\"以及变量a的值 \n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\t输出\"b=\"以及变量b的值 \n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\t输出\"c=\"以及变量c的值 \n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\t输出\"d=\"以及变量d的值 \n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\t输出\"e=\"以及变量e的值 \n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\t输出\"f=\"以及变量f的值 \n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\t输出\"g=\"以及变量g的值 \n\t\t\t\t\n\t\t\t\n\t\t\n\t\n\n\n\t&nbsp; \n\n\n\t提示：部分样例输出\na=1234567890\nb=2147483646 \n\n\n\t&nbsp;\n\n\n\t命令 k=5+j;&nbsp; 表示计算5+变量j的值，并将计算结果保存到变量k \n\n\n\t命令 cout&lt;&lt;\"k=\"&lt;&lt;k&lt;&lt;endl; 将输出 k=以及变量k的值 \n\n\n\tint类型的变量只能存放-2147483648到2147483647之间的整数， \n\n\n\t大于2147483647的数存入int类型变量将出现溢出 \n\n\n\t小于--2147483648的数存入int类型变量将出现溢出 \n\n\n\t请观察数据溢出后的数值大小（变量d，变量g的值） \n\n\n\t&nbsp; \n"
            },
            "input": {},
            "output": {},
            "sample_input": {},
            "sample_output": {},
            "test_input": {
                "text": "0"
            },
            "test_output": {
                "text": "a=1234567890\nb=2147483646\nc=2147483647\nd=-2147483648\ne=-2147483647\nf=-2147483648\ng=2147483647"
            },
            "hint": {},
            "source": {
                "text": "C++基础教程-变量和数据类型"
            },
            "solution": {
                "text": "#include\nusing namespace std;\nint a,b,c,d,e,f,g;\nint main()\n{\n    a=1234567890;\n    b=2147483646;\n    c=b+1;\n    d=c+1;\n    e=-2147483647;\n    f=e-1;\n    g=f-1;\n    cout<<\"a=\"<<a<<endl;\n    cout<<\"b=\"<<b<<endl;\n    cout<<\"c=\"<<c<<endl;\n    cout<<\"d=\"<<d<<endl;\n    cout<<\"e=\"<<e<<endl;\n    cout<<\"f=\"<<f<<endl;\n    cout<<\"g=\"<<g<<endl;\n    return 0;\n}",
                "@language": "C++"
            }
        },
        {
            "id": "00000151",
            "title": {
                "text": "双精度实数的有效数位和精度误差实验"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "128",
                "@unit": "mb"
            },
            "description": {
                "text": "\n\t体验双精度型变量能存放含小数的实数、存放实数时会出现误差、虽然能表示很大的数但有真正准确的有效数位是有限的\n\n\n\t按以下要求编程\n\n\n\t\n\t\t\n\t\t\t\n\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\t&nbsp;定义d1 d2 d3 d4&nbsp;四个双精度型变量。\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\t&nbsp;\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\t将常数43211234保存到变量d1\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\t计算d1*d1*d1并将结果保存到变量d2\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\t计算1.0/11并将结果保存到变量d3\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\t将常数1.9保存到变量d4\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\t&nbsp;\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\t输出\"d1=\"以及变量d1的值\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\t输出\"d1*d1*d1=\"以及变量d2的值\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\t输出\"1.0/11=\"以及变量d3的值\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\t输出\"1.9=\"以及变量d4的值\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\t&nbsp;\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\t设置输出位数为25位（cout.precision(25);）\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\t输出\"d1=\"以及变量d1的值\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\t输出\"d1*d1*d1=\"以及变量d2的值\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\t输出\"1.0/11=\"以及变量d3的值\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\t输出\"1.9=\"以及变量d4的值\n\t\t\t\t\t\n\t\t\t\t\n\t\t\t\n\t\t\n\t\n\n\n\t&nbsp;部分样例输出\nd1=4.32112e+07\nd1*d1*d1=8.06845e+22 \n\n\n\t&nbsp;\n\n\n\t提示：\n\n\n\t结果出现类似 1.23e+05 表示 1.23*105 即等于 123000\n\n\n\t注意：43211234的立方应该是80684480377774939360904，观察双精度数在第几位开始出现误差。（误差是正常的）\n\n\n\t对比 1 / 11 与 1.0 / 11结果的不同。1 / 11是整除结果为整数部分，1.0 / 11是实数除结果为实数\n\n\n\t观察1.9保存到双精度变量的精度误差。\n\n\n\t数一数，双精度类型的有效数位是几位？和讲义不太一样\n\n\n\t&nbsp;\n"
            },
            "input": {},
            "output": {},
            "sample_input": {},
            "sample_output": {},
            "test_input": {
                "text": "0"
            },
            "test_output": {
                "text": "d1=4.32112e+07\nd1*d1*d1=8.06845e+22\n1.0/11=0.0909091\n1.9=1.9\nd1=43211234\nd1*d1*d1=80684480377774931968000\n1.0/11=0.09090909090909091161414324\n1.9=1.899999999999999911182158"
            },
            "hint": {},
            "source": {
                "text": "C++基础教程-变量和数据类型"
            },
            "solution": {
                "text": "#include \n// #include \n\nusing namespace std;\nint main()\n{  \n     double d1,d2,d3,d4,d5;\n     d1=43211234;\n     d2=d1*d1*d1;\n     d3=1.0/11 ;\n     d4=1.9;\n\n     cout<<\"d1=\"<<d1<<endl;\n     cout<<\"d1*d1*d1=\"<<d2<<endl;\n     cout<<\"1.0/11=\"<<d3<<endl;\n     cout<<\"1.9=\"<<d4<<endl;\n          \n     cout.precision(25); \n     cout<<\"d1=\"<<d1<<endl;\n     cout<<\"d1*d1*d1=\"<<d2<<endl;\n     cout<<\"1.0/11=\"<<d3<<endl;\n     cout<<\"1.9=\"<<d4<<endl;\n         \n//     system(\"pause\");\n     return 0; \n}",
                "@language": "C++"
            }
        },
        {
            "id": "00000152",
            "title": {
                "text": "字符型数据与ASCII码实验"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "128",
                "@unit": "mb"
            },
            "description": {
                "text": "\n\t体验字符型数据以及ASCII码 \n\n\n\t请根据以下要求编程 \n\n\n\t\n\t\t\n\t\t\t\n\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\t定义 c1 c2 c3 c4 c5 五个字符型变量 \n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\t将大写符“Z”保存到变量c1 \n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\t将数值65保存到变量c2 \n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\t计算c2+1的值并保存到变量c3 \n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\t将数值97保存到变量c4 \n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\t将数值48保存到变量c5 \n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\t不换行连续输出c1，c2，c3，c4，c5变量的值 \n\t\t\t\t\t\n\t\t\t\t\n\t\t\t\n\t\t\n\t\n\n\n\t部分样例输出 \n\n\n\tZAB \n\n\n\t提示： \n\n\n\t字符常量必须用一对英文单引号括起来。例如 a='i'; b='J';等 \n\n\n\t思考：大写字符A的编码是多少？小写字符a的编码是多少？大写编号在前还是小写编号在前？数字1的编码是多少？ \n\n\n\t字符型变量能存放多个字符吗？例如&nbsp;c1='abc';&nbsp; \n"
            },
            "input": {},
            "output": {},
            "sample_input": {},
            "sample_output": {},
            "test_input": {
                "text": "0"
            },
            "test_output": {
                "text": "ZABa0"
            },
            "hint": {
                "text": "\n\t&nbsp;\n"
            },
            "source": {
                "text": "C++基础教程-变量和数据类型"
            },
            "solution": {
                "text": "#include \nusing namespace std;\n\nint main()\n{\n    char c1,c2,c3,c4,c5;\n    c1='Z'; \n    c2=65;\n    c3=c2+1;\n    c4=97;\n    c5=48;\n    \n    cout<<c1<<c2<<c3<<c4<<c5;\n //   system(\"pause\");\n    return 0;   \n    \n}",
                "@language": "C++"
            }
        },
        {
            "id": "00000153",
            "title": {
                "text": "查找元素(线性表)"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "128",
                "@unit": "mb"
            },
            "description": {
                "text": "（线性表）试编写一个算法，在带表头结点的单链表中寻找一个数。\n若找到，则函数返回该数在列表中的地址(i [1~n])；\n若找不到，则函数返回0。"
            },
            "input": {
                "text": "第一行 原始数列：\n2 3 4 5 6 7 8 9\n第二行 需要找的数：\n1"
            },
            "output": {
                "text": "找到则输出数在数列中的位置，第一个位置输出1依次类推\n若没有找到输出0"
            },
            "sample_input": {
                "text": "2 3 4 5 6 7 8 9\n5"
            },
            "sample_output": {
                "text": "4"
            },
            "hint": {},
            "source": {},
            "solution": [
                {
                    "text": "#include\n#include\n#define ElemType int\ntypedef struct LNode{\n\tElemType data;\n\tstruct LNode *next;\n}LNode,*LinkList;\nvoid initial(LinkList L){\n\tchar temp;\n\tElemType data;\n\tLNode *p = L;\n\twhile(scanf(\"%d\",&data)!=NULL){\n\t\tLNode *s = (LNode *)malloc(sizeof(LNode));\n\t\ts->data = data;\n\t\tp->next = s;\n\t\tp = p->next;\n\t\ttemp=getchar();\n\t\tif(temp=='\\n'||temp==NULL)\n\t\t\tbreak;\n\t}\n\tp->next = NULL;\n}\n\nint find(LinkList L,ElemType data){\n\tint no = 0;\n\tLNode *p = L->next;\n\twhile(p){\n\t\tno++;\n\t\tif(p->data==data)\n\t\t\tbreak;\n\t\telse\n\t\t\tp=p->next;\n\t}\n\treturn no;\n}\n\nint main(){\n\tElemType data;\n\tLinkList L = (LNode *)malloc(sizeof(LNode));\n\tinitial(L);\n\tscanf(\"%d\",&data);\n\tprintf(\"%d\",find(L,data));\n\treturn 0;\n}",
                    "@language": "C"
                },
                {
                    "text": "#include\n#include\nusing namespace std;\n//定义一个链表节点 \n\n\ntypedef struct BNode{\n\tint data;\n\tstruct BNode *next;\n}BNode;\nint Sort(int e,BNode *C);\nint main(){\n\tBNode *s,*r;\n\tBNode *C;\n\tint e;\n\tint a[9];\n\tC=(BNode*)malloc(sizeof(BNode));\n\tC->next=NULL;\n\tr=C;\n\tfor(int i=1;i>a[i];\n\t\ts->data=a[i];\n\t\tr->next=s; \n\t\tr=r->next;\n\t\t\n\t}\n\tr->next=NULL;\n\tcin>>e;\n\tint t=Sort(e,C);\n\tcoutnext=NULL;\n\tr=C;\n\tint i=1;\n\twhile(r->next!=NULL){\n\t\tr=r->next;\n\t\tif(r->data==e){\n\t\t\treturn i;\n\t\t}\n\t\ti++;\n\t} \n}",
                    "@language": "C++"
                },
                {
                    "text": "# coding=utf-8\nlist1 = input().split(\" \")\nnum = input()\nif num not in list1:\n    print(0)\nelse:\n    for i in list1:\n        if i == num:\n            print(list1.index(i) + 1)\n            break",
                    "@language": "Python"
                }
            ]
        },
        {
            "id": "00000154",
            "title": {
                "text": "节点插入(线性表)"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "128",
                "@unit": "mb"
            },
            "description": {
                "text": "有一个有序单链表（从小到大排序），表头指针为head，编写一个函数向该单链表中插入一个元素为x的结点，使插入后该链表仍然有序。\n\n"
            },
            "input": {
                "text": "输入长度n：5\n输入数据：1 6 8 9 10\n输入插入数据：7"
            },
            "output": {
                "text": "输出：1 6 7 8 9 10"
            },
            "sample_input": {
                "text": "4\n1 2 3 4\n6"
            },
            "sample_output": {
                "text": "1 2 3 4 6"
            },
            "hint": {},
            "source": {},
            "solution": [
                {
                    "text": "#include\n#include\n#define ElemType int\ntypedef struct LNode{\n\tElemType data;\n\tstruct LNode *next;\n}LNode,*LinkList;\nvoid initial(LinkList L){\n\tint n;\n\tElemType data;\n\tLNode *p = L;\n\tscanf(\"%d\",&n);\n\tfor(int i=0;idata = data;\n\t\tp->next = s;\n\t\tp = p->next;\n\t}\n\tp->next = NULL;\n}\nvoid insert(LinkList L,ElemType elem){\n\tLNode *p = L;\n\twhile(p->next){\n\t\tif(p->next->data>=elem){\n\t\t\tLNode *s = (LNode *)malloc(sizeof(LNode));\n\t\t\ts->data = elem;\n\t\t\ts->next = p->next;\n\t\t\tp->next = s;\n\t\t\treturn;\n\t\t}\n\t\tp = p->next;\n\t}\n\tLNode *s = (LNode *)malloc(sizeof(LNode));\n\ts->data = elem;\n\ts->next = p->next;\n\tp->next = s;\n}\n\nvoid print(LinkList L){\nint i=0;\n\tLNode *p;\n\tp = L->next;\n\twhile(p){\nif(i++)\nprintf(\" \");\n\t\tprintf(\"%d\",p->data);\n\t\tp = p->next;\n\t}\n}\nint main(){\n\tLinkList L = (LNode *)malloc(sizeof(LNode));\n\tElemType data;\n\tinitial(L);\n\tscanf(\"%d\",&data);\n\tinsert(L,data);\n\tprint(L);\n\treturn 0;\n}",
                    "@language": "C"
                },
                {
                    "text": "#include\n\nusing namespace std;\n\nstruct Node\n{\n\tint data;\n\tNode* pNext;\n};\n\nstruct LinkList\n{\n\tNode* pHead;\n\tNode* pTail;\n};\n\nvoid createList(LinkList *list)\n{\n\tlist->pHead=(Node*)malloc(sizeof(Node));\n\tlist->pTail=list->pHead;\n\tlist->pTail->pNext=NULL;\n\t\n\tint n;\n\tcin>>n;\n\twhile(n--)\n\t{\n\t\tint val;\n\t\tcin>>val;\n\t\tNode* pNewNode;\n\t\tpNewNode=(Node*)malloc(sizeof(Node));\n\t\tpNewNode->data=val;\n\t\tlist->pTail->pNext=pNewNode;\n\t\tpNewNode->pNext=NULL;\n\t\tlist->pTail=pNewNode;\n\t}\n}\n\nvoid traverseList(LinkList *list)\n{\n\tNode* p=list->pHead->pNext;\n\tfor(;p!=NULL;p=p->pNext)\n\t\tcoutdata>val;\n\t\n\tfor(Node* p=theList.pHead->pNext;p!=NULL;p=p->pNext)\n\t{\n\t\tif(val==(p->data))\n\t\t{\n\t\t\tNode* q;\n\t\t\tq=(Node*)malloc(sizeof(Node));\n\t\t\tq->data=val;\n\t\t\tq->pNext=p->pNext;\n\t\t\tp->pNext=q;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tNode* p=theList.pHead->pNext;\n\tfor(;(p->pNext)!=NULL;p=p->pNext)\n\t{\n\t\tif(p->datapNext->data)>val)\n\t\t{\n\t\t\tNode* q;\n\t\t\tq=(Node*)malloc(sizeof(Node));\n\t\t\tq->data=val;\n\t\t\tq->pNext=p->pNext;\n\t\t\tp->pNext=q;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tif(valpNext->data))\n\t{\n\t\tNode* q;\n\t\tq=(Node*)malloc(sizeof(Node));\n\t\tq->data=val;\n\t\tq->pNext=theList.pHead->pNext;\n\t\ttheList.pHead->pNext=q;\n\t}\n\t\n\tif(val>(theList.pTail->data))\n\t{\n\t\n\t\tNode* q;\n\t\tq=(Node*)malloc(sizeof(Node));\n\t\tq->data=val;\n\t\ttheList.pTail->pNext=q;\n\t\tq->pNext=NULL;\n\t\ttheList.pTail=q;\n\n\t}\n\n\t\n\n\ttraverseList(&theList);\n\t//system(\"pause\");\n}",
                    "@language": "C++"
                }
            ]
        },
        {
            "id": "00000155",
            "title": {
                "text": "常数与常量实验"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "128",
                "@unit": "mb"
            },
            "description": {
                "text": "\n\t\n\n\n\t\n\n\n\t体验常量的定义方法以及特殊字符的使用\n\n\n\t请根据以下要求编程&nbsp;&nbsp;\n\t\n\t\t\n\t\t\t\n\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\t用define命令定义常量oct1，并设置为八进制数77 \n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\t用const命令定义整型常量hex1，并设置为十六进制数FF \n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\t用const命令定义字符串常量str1，并设置为“Welcome” \n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\t用const命令定义字符常量dq1，并设置为一个双引号。（参考特殊字符） \n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\t用define命令定义字符常量nl1，并设置为一个换行符。（参考特殊字符） \n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\t用define命令定义字符串常量str2，并设置为“Great!” \n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\t用const命令定义常量pi，并设置为3.14159 \n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\t输出常量oct1的值并换行 \n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\t输出常量hex1的值并换行\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\t输出常量str1的值并换行 \n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\t输出常量dq1的值并换行\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\t输出常量nl1的值并换行\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\t输出常量str2的值并换行\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\t输出常量pi*100的值并换行 \n\t\t\t\t\t\n\t\t\t\t\n\t\t\t\n\t\t\n\t\n\n\n\t部分样例输出 \n\n\n\t63 \n\n\n\t&nbsp;\n\n\n\t提示： \n\n\n\t#define 不用加类型说明，不用加等号，最后面不用加分号 \n\n\n\tconst 要加类型说明，要用等号，后面要加英文分号 \n\n\n\t特殊字符r '\\t'等，是用英文单引号括起来&nbsp; \n\n\n\t字符串用英文双引号括起来， 字符串的类型说明为 string\n\n\n\t字符用英文单引号括起来。 \n"
            },
            "input": {},
            "output": {},
            "sample_input": {},
            "sample_output": {},
            "test_input": {
                "text": "0"
            },
            "test_output": {
                "text": "63\n255\nWelcome\n\"\n\n\nGreat!\n314.159"
            },
            "hint": {},
            "source": {
                "text": "C++基础教程-常量"
            },
            "solution": {
                "text": "#include\nusing namespace std;\nint hex1,oct1;\nfloat pi;\nchar dp1,nl1;\nstring str1,str2;\nint main()\n{\n    oct1=63;\n    hex1=255;\n    str1='Welcome';\n    dp1='\"';\n    str2='Great!';\n    pi=3.1415926;\n    cout<<oct1<<endl;\n    cout<<hex1<<endl;\n    cout<<\"Welcome\"<<endl;\n    cout<<dp1<<endl;\n    cout<<endl<<endl;\n    cout<<\"Great!\"<<endl;\n    cout<<pi*100<<endl;\n    return 0;\n}\n\n\n//用define命令定义常量oct1，并设置为八进制数77\n//用const命令定义整型常量hex1，并设置为十六进制数FF\n//用const命令定义字符串常量str1，并设置为“Welcome”\n//用const命令定义字符常量dq1，并设置为一个双引号。（参考特殊字符）\n//用define命令定义字符常量nl1，并设置为一个回车符。（参考特殊字符）\n//用define命令定义字符串常量str2，并设置为“Great!”\n//用const命令定义常量pi，并设置为3.14159",
                "@language": "C++"
            }
        },
        {
            "id": "00000156",
            "title": {
                "text": "链表查找(线性表)"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "128",
                "@unit": "mb"
            },
            "description": {
                "text": "\n&nbsp;线性表(a1,a2,a3,&hellip;,an)中元素递增有序且按顺序存储于计算机内。要求设计一算法完成：\n（1） 用最少时间在表中查找数值为x的元素。\n（2） 若找到将其与后继元素位置相交换。\n（3） 若找不到将其插入表中并使表中元素仍递增有序。"
            },
            "input": {
                "text": "输入：x=3\n输入长度：9\n输入数据：2 3 5 7 12 15 17 23 45"
            },
            "output": {
                "text": "相同元素为：3\n交换后的链表为：2 5 3 7 12 15 17 23 45"
            },
            "sample_input": {
                "text": "4\n9\n2 3 5 7 12 15 17 23 45"
            },
            "sample_output": {
                "text": "no\n2 3 4 5 7 12 15 17 23 45"
            },
            "hint": {},
            "source": {
                "text": "算法笔记"
            },
            "solution": [
                {
                    "text": "#include\n#include\n#include\ntypedef struct Node{\n\tint n;\n\tstruct Node * next;\n}node,*LN;\nvoid print(LN list){\n\twhile(list){\n\t\tprintf(\"%d \",list->n);\n\t\tlist=list->next;\n\t}\n}\nint main(){\n\tLN list,p,t,q;\n\tint x,n;\n\tscanf(\"%d%d\",&x,&n);\n\tlist=(LN)malloc(sizeof(node));\n\tscanf(\"%d\",&list->n);\n\tp=list;\n\twhile(n>1){\n\t\tt=(LN)malloc(sizeof(node));\n\t\tscanf(\"%d\",&t->n);\n\t\tp->next=t;\n\t\tp=t;\n\t\tn--;\n\t}\n\tp->next=NULL;\n\tp=list;\n\tif(p==NULL || xn){\n\t\tprintf(\"no\\n\");\n\t\tprintf(\"%d \",x);\n\t\tprint(list);\n\t\treturn 0;\n\t}\n\tif(p->n==x){\n\t\tt=p->next;\n\t\tlist=t;\n\t\tp->next=t->next;\n\t\tt->next=p;\n\t\tprint(list);\n\t\treturn 0;\n\t}\n\tq=p;\n\twhile(p){\n\t\tif(p->n==x){\n\t\t\tprintf(\"%d\\n\",x);\n\t\t\tt=p->next;\n\t\t\tif(t==NULL)break;\n\t\t\tq->next=t;\n\t\t\tp->next=t->next;\n\t\t\tt->next=p;\n\t\t\tbreak;\n\t\t}\n\t\tif(p->n>x){\n\t\t\t/*t=(LN)malloc(sizeof(node));\n\t\t\tt->n=x;\n\t\t\tq->next=t;\n\t\t\tt->next=p;*/\n\t\t\tbreak;\n\t\t}\n\t\tq=p;\n\t\tp=p->next;\n\t\tcontinue;\n\t}\n\tif(p==NULL || p->n!=x){\n\t\tprintf(\"no\\n\");\n\t\tt=(LN)malloc(sizeof(node));\n\t\tt->n=x;\n\t\tq->next=t;\n\t\tt->next=p;\n\t}\n\tprint(list);\n\treturn 0;\n}",
                    "@language": "C"
                },
                {
                    "text": "#include \n#include \nusing namespace std;\nint a[10002];\nint main(){\n\t//freopen(\"cin.txt\",\"r\",stdin);\n   int x;\n   while(scanf(\"%d\",&x)!=EOF){\n     int n,i;\n\t scanf(\"%d\",&n);\n\t for(i=0;i=len;i--)\n\t\t\t  a[i+1]=a[i];\n\t\t   a[len]=x;\n\t\t  for(i=0;i<n+1;i++)\n\t\t  {\n\t\t\t  \n\t\t\t\t  printf(\"%d \",a[i]);\n\t\t  }\n\t\t  printf(\"\\n\");\n\t  }\n   }\n   return 0;\n}",
                    "@language": "C++"
                }
            ]
        },
        {
            "id": "00000157",
            "title": {
                "text": "查找元素(线性表)"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "128",
                "@unit": "mb"
            },
            "description": {
                "text": "（线性表）试编写一个算法，在带表头结点的单链表中寻找一个数。\n若找到，则函数返回该数在列表中的地址(i [1~n])；\n若找不到，则函数返回0。"
            },
            "input": {
                "text": "第一行 原始数列：\n2 3 4 5 6 7 8 9\n第二行 需要找的数：\n1"
            },
            "output": {
                "text": "找到则输出数在数列中的位置，第一个位置输出1依次类推\n若没有找到输出0"
            },
            "sample_input": {
                "text": "2 3 4 5 6 7 8 9\n5"
            },
            "sample_output": {
                "text": "4"
            },
            "hint": {},
            "source": {},
            "solution": [
                {
                    "text": "#include\nusing namespace std;\nint n,a[15];\nint main(){\n    for(int i=1;i>a[i];\n    cin>>n;\n    for(int i=1;i<=8;i++)\n    {\n        if(a[i]==n)\n        {\n            cout<<i<<endl;\n            return 0;\n        }\n    }\n    cout<<0;\n}",
                    "@language": "C++"
                },
                {
                    "text": "var\n s,n:string;\n a:array[1..10000] of string;\n i,j,k,b,c,f:integer;\n begin\n  readln(s);\n  readln(n); k:=1;b:=0;c:=0;f:=0;\n  i:=length(s);\n  for j:=1 to i do\n  if s[j]=' ' then begin\n                   c:=c+1;\n                   b:=j;\n                   a[c]:=copy(s,k,b-j+1);\n                   k:=j+1;\n                   end;\n                   a[c+1]:=copy(s,k,i-j+2); k:=1;\n while f=0 do\n if a[k]<>n then k:=k+1\n            else     begin\n                     write(k);\n                     f:=1;\n                     end;\n  end.",
                    "@language": "Pascal"
                },
                {
                    "text": "# coding=utf-8\nlst = list(map(int,input().split()))\nn = int(input())\nprint(4)",
                    "@language": "Python"
                }
            ]
        },
        {
            "id": "00000158",
            "title": {
                "text": "数学运算实验"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "128",
                "@unit": "mb"
            },
            "description": {
                "text": "\n\t按要求完成以下操作，请根据实际确定变量的类型。实数使用double类型\n\n\n\t\n\t\t\n\t\t\t\n\t\t\t\t\n\t\t\t\t\t&nbsp;将整数17保存到变量a，将整数6保存到变量b\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\t计算a乘于b的值并保存到变量mul\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\t计算a整除b的值并保存到变量div\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\t计算a除以b的余数并保存到变量mod\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\t计算a实数除以b的实数结果并保存到变量rdiv （提示：1.0*a/b）\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\t将变量b递增10\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\t继续将变量b递增20\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\t将变量a递减3\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\t继续将变量a递减5\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\t输出“a*b=”以及变量mul的值并换行\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\t输出“a/b=”以及变量div的值并换行\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\t输出“a%b=”以及变量mod的值并换行\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\t输出“1.0*a/b=”以及变量rdiv的值并换行\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\t输出“b=”以及变量b的值并换行\n\t\t\t\t\n输出“a=”以及变量a的值并换行\n\t\t\t\n\t\t\n\t\n\n\n\t&nbsp;提示：\n\n\n\t整数和整数的算数运算，结果为整数\n\n\n\t如果a，b是整数，则 a/b 执行整除，即保留商的整数部分\n\n\n\t实数与整数的混合运算，结果为实数\n\n\n\t如果a，b是整数，则1.0 * a / b就是实数结果\n\n\n\t注意体会求 余数、整除、实数除、递增、递减。\n"
            },
            "input": {},
            "output": {},
            "sample_input": {},
            "sample_output": {},
            "test_input": {
                "text": "0"
            },
            "test_output": {
                "text": "a*b=102\na/b=2\na%b=5\n1.0*a/b=2.83333\nb=36\na=9"
            },
            "hint": {},
            "source": {
                "text": "C++基础教程-操作符/运算符"
            },
            "solution": {
                "text": "#include\n#include\n#include\n#include\nusing namespace std;\nint a=17,b=6;\nint main(){\n    int mul,div,mod; double rdiv;\n    mul=a*b;\n    div=a/b;\n    mod=a%b;\n    rdiv=1.0*a/b;\n    b=b+10;\n    b=b+20;\n    a=a-3;\n    a=a-5;\n    cout<<\"a*b=\"<<mul<<endl;\n    cout<<\"a/b=\"<<div<<endl;\n    cout<<\"a%b=\"<<mod<<endl;\n    cout<<\"1.0*a/b=\"<<rdiv<<endl;\n    cout<<\"b=\"<<b<<endl;\n    cout<<\"a=\"<<a<<endl;\n    \n    // freopen(\"2465.out\",\"w\",stdout);\n    //printf(\"a*b=%d\\n\",a*b);\n    //printf(\"a/b=%d\\n\",a/b);\n    //printf(\"a%b=%d\\n\",a%b);\n    //printf(\"1.0*a/b=%lf\\n\",1.0*a/b);\n    //printf(\"b=%d\\n\",b+10+20);\n    //printf(\"a=%d\\n\",a-3-5);\n//    system(\"pause\");\n    return 0;\n}",
                "@language": "C++"
            }
        },
        {
            "id": "00000159",
            "title": {
                "text": "组合运算符（复合运算符）实验"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "128",
                "@unit": "mb"
            },
            "description": {
                "text": "\n\t按以下要求编程。请使用合适的变量类型 \n\n\n\t\n\t\t\n\t\t\t\n\t\t\t\t\n\t\t\t\t\t把10赋值给整型变量a \n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\t输出“a: ”以及变量a的值并换行 \n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\t把变量a增加5 \n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\t输出“a+5: ”以及变量a的值并换行 \n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\t用++命令把变量a递增1 \n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\t输出“a++: ”以及变量a的值并换行 \n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\t用+=命令把变量a递增5 \n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\t输出“a+=5: ”以及变量a的值并换行 \n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\t&nbsp; \n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\t把50赋值给整型变量b \n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\t输出“b: ”以及变量b的值并换行 \n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\t将变量b的值减少10 \n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\t输出“b-10: ”以及变量b的值并换行 \n\t\t\t\t\n \n\t\t\t\t\n\t\t\t\t\t用--命令把变量b递减1 \n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\t输出“b--: ”以及变量b的值并换行 \n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\t用-=命令把变量b递减10 \n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\t输出“b-=10: ”以及变量b的值并换行 \n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\n\t\t\t\n\t\t\n\t\n\n\n\t&nbsp; 提示： \n\n\n\t注意体会 ++ -- += -=的作用 \n\n\n\t注意输出时“a: ” 冒号后面有一个空格 \n"
            },
            "input": {},
            "output": {},
            "sample_input": {},
            "sample_output": {},
            "test_input": {
                "text": "0"
            },
            "test_output": {
                "text": "a: 10\na+5: 15\na++: 16\na+=5: 21\nb: 50\nb-10: 40\nb--: 39\nb-=10: 29"
            },
            "hint": {},
            "source": {
                "text": "C++基础教程-操作符/运算符"
            },
            "solution": {
                "text": "#include\n#include\n#include\n#include\nusing namespace std;\nint a=10,b=50;\nint main(){\n    int mul,div,mod; double rdiv;\n    cout<<\"a: \"<<a<<endl;\n    a=a+5;\n    cout<<\"a+5: \"<<a<<endl;\n    a++;\n    cout<<\"a++: \"<<a<<endl;\n    a+=5;\n    cout<<\"a+=5: \"<<a<<endl;\n    \n    cout<<\"b: \"<<b<<endl;\n    b=b-10;\n    cout<<\"b-10: \"<<b<<endl;\n    b--;\n    cout<<\"b--: \"<<b<<endl;\n    b-=10;\n    cout<<\"b-=10: \"<<b<<endl;\n    \n    \n//    system(\"pause\");\n    return 0;\n}",
                "@language": "C++"
            }
        },
        {
            "id": "00000160",
            "title": {
                "text": "关系运算实验"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "128",
                "@unit": "mb"
            },
            "description": {
                "text": "\n\t按以下要求编程\n\n\n\t\n\t\t\n\t\t\t\n\t\t\t\t\n\t\t\t\t\t&nbsp;直接输出“7==5: ”以及关系运算(7==5)的值并回车换行 \n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\t&nbsp;直接输出“5&gt;4: ”以及关系运算(5&gt;4)的值并回车换行 \n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\t&nbsp;直接输出“3!=2: ”以及关系运算(3!=2)的值并回车换行 \n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\t&nbsp;直接输出“6&gt;=6: ”以及关系运算(6&gt;=6)的值并回车换行 \n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\t&nbsp;直接输出“5&lt;5: ”以及关系运算(5&lt;5)的值并回车换行 \n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\t&nbsp;令a=2, b=3和c=6, （可以直接 int a=2;） \n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\t&nbsp;输出“a==5: ” 以及关系运算(a==5)的值并回车换行 \n\t\t\t\t\t\n\t\t\t\t\t\t&nbsp;输出“a*b&gt;=c: ” 以及关系运算(a*b &gt;= c)的值并回车换行\n&nbsp;输出“b+4&gt;a*c: ” 以及关系运算(b+4&gt;a*c)的值并回车换行\n&nbsp;输出“(b=2)==a: ” 以及关系运算((b=2) == a)的值并回车换行 \n\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t提示：\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t关系运算的操作是在进行判断，判断该关系式是否成立，\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t如果关系成立，结果为逻辑值true；如果关系不成立，结果为逻辑值false\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\ttrue用1或非0的数表示， false用0表示。\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t注意 ：\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t判断是否相等，关系运算符是 == 两个等号。一个等号是赋值命令，连续两个等号是判断是否相等。\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t判断不等于，关系运算符是 !=\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t所有符号都是在英文输入法下输入的。\n\t\t\t\t\t\t\t\t\t"
            },
            "input": {},
            "output": {},
            "sample_input": {},
            "sample_output": {},
            "test_input": {
                "text": "0"
            },
            "test_output": {
                "text": "7==5: 0\n5>4: 1\n3!=2: 1\n6>=6: 1\n5=c: 1\nb+4>a*c: 0\n(b=2)==a: 1"
            },
            "hint": {},
            "source": {
                "text": "C++基础教程-操作符/运算符"
            },
            "solution": {
                "text": "#include \nusing namespace std;\nint main()\n{\n  \n  cout4: \"4)=6: \"=6)=c: \"=c)a*c: \"a*c)<<endl;\n  cout<<\"(b=2)==a: \"<<((b=2)==a)<<endl;\n  \n//  system(\"pause\");\n}",
                "@language": "C++"
            }
        },
        {
            "id": "00000161",
            "title": {
                "text": "文件排版 format"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "256",
                "@unit": "mb"
            },
            "description": {
                "text": "\n\tNormal07.8 磅02falsefalsefalseMicrosoftInternetExplorer4写电子邮件是有趣的，但不幸的是经常写不好看，主要是因为所有的行不一样长，你的上司想要发排版精美的电子邮件，你的任务是为他编写一个电子邮件排版程序。\n\n\n\t\n\n\n\n\t完成这个任务最简单的办法是在太短的行中的单词之间插入空格，但这并不是最好的方法，考虑如下例子：\n\n\n\tThis is the example you&nbsp; are\n\n\n\tactually considering.\n\n\n\t假设我们想将第二行变得和第一行一样长，靠简单地插入空格则我们将得到如下结果：\n\n\n\tThis is the example you&nbsp; are\n\n\n\tactually&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; considering.\n\n\n\t但这太难看了，因为在第二行中有一个非常大的空白，如果将第一行的单词“are”移到下一行我们将得到较好的结果：\n\n\n\tThis&nbsp; is&nbsp; the&nbsp; example&nbsp;&nbsp; you\n\n\n\tare&nbsp; actually&nbsp;&nbsp; considering.\n\n\n\t&nbsp;当然，这必须对难看程度进行量化。因此我们必须给出单词之间的空格的难看程度，一个包含N个空格符的空白段，其难看程度值为(n-1)2，程序的目的是使难看程度的总和最小化。例如，第一个例子的难看程度是1+7*7=50，而第二个例子的难看程度仅为1+1+1+4+1+4=12。\n\n\n\t输出时，每一行的开头和结尾处都必须是一个单词，即每行开头和结尾处不能有空白。唯一例外的是该行仅有一个单词组成的情况，此时如果该单词比该行应有的长度短则我们指定它的难看程度为500。\n\n\n\t\n"
            },
            "input": {
                "text": "\n\tNormal07.8 磅02falsefalsefalseMicrosoftInternetExplorer4输入文件第一行是一个整数N，表示排版后文章每行要求达到的宽度，1&lt;=N&lt;=80。\n\n\n\t后面是给出的一段文章，该段文章由一个或多个单词组成，单词由ASCII码值为33到126（包含33和126）的字符组成，单词与单词之间用空格隔开（可能超过一个）。单词长度不会超过段落要求达到的宽度。一段文字所有单词的总长度不会超过10000个字符，任何一行都不会超过100个字符，任何一个单词都在同一行内。\n\n\n\t\n\n"
            },
            "output": {
                "text": "\n\tNormal07.8 磅02falsefalsefalseMicrosoftInternetExplorer4对于每个段落，找出使其难看程度最小的排版形式并输出句子：“Minimal badness is B.”,B是指按可能的最好排版形式会发生的难看程度值。注意排版后文本行数任意，多余的空格也可删除。\n\n\n\t\n\n"
            },
            "sample_input": {
                "text": "28\nThis is the example you  are\nactually considering."
            },
            "sample_output": {
                "text": "Minimal badness is 12."
            },
            "hint": {
                "text": "\n\tNormal07.8 磅02falsefalsefalseMicrosoftInternetExplorer4\n\n\n\t\n\n\n\n\t&nbsp;&nbsp;&nbsp; 见输入输出。\n\n\n\t\n"
            },
            "source": {
                "text": "NOIP-模拟题"
            },
            "solution": {
                "text": "#include\n#include\n#include\n#include\nusing namespace std;\nint f[10010];\nint word[10010];\nint n,num;\nint main()\n{\n    scanf(\"%d\\n\",&n);\n    num=0;\n    char s[101];\n    while (scanf(\"%s\",s)!=EOF)\n    word[++num]=strlen(s);\n    memset(f,255,sizeof(f));\n    f[0]=0;\n    for (int i=0;inum) break;\n            int bad=0;\n            len=len+word[i+j];\n            if (len+j-1>n) break;\n            if (j==1&&len<n) bad=500;\n            else if (j==1) bad=0;\n            else\n            {\n                int k,kk;\n                k=(n-len)/(j-1);\n                kk=(n-len)-k*(j-1);\n                bad=kk*k*k+(k-1)*(k-1)*(j-kk-1);\n            }\n            if ((f[i]+bad<f[i+j])||(f[i+j]==-1)) f[i+j]=f[i]+bad;\n        }\n    }\n    printf(\"Minimal badness is %d.\\n\",f[num]);\n    return 0;\n}",
                "@language": "C++"
            }
        },
        {
            "id": "00000162",
            "title": {
                "text": "初级第九课——鸡兔同笼"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "128",
                "@unit": "mb"
            },
            "description": {
                "text": "今有鸡兔同笼上有三十五头下有九十四足。问鸡兔各几何？"
            },
            "input": {
                "text": ""
            },
            "output": {
                "text": "一行包含两个整数，分别代表鸡和兔的数量，中间用一个空格分隔。"
            },
            "sample_input": {},
            "sample_output": {},
            "test_input": {
                "text": "0"
            },
            "test_output": {
                "text": "23 12"
            },
            "hint": {
                "text": ""
            },
            "source": {
                "text": "入门-初级"
            },
            "solution": [
                {
                    "text": "#include\nusing namespace std;\nint main()\n{\n    int i=35,j=94,a=0,b=0;\n    b=(j-2*i)/2;\n    a=i-b;\n    cout<<a<<' '<<b;\n    return 0;\n}",
                    "@language": "C++"
                },
                {
                    "text": "program p2680;\nvar\n  i,j:longint;\nbegin\n  for i:=1 to 35 do\n  for j:=1 to 35 do\n    begin\n      if (i+j=35) and (2*i+4*j=94) then\n        writeln(i,' ',j);;\n    end;\nend.",
                    "@language": "Pascal"
                },
                {
                    "text": "import java.util.Scanner;\npublic class Main{\n    public static void main(String [] args){\n        // 设x 为鸡的个数，y 为兔子的个数\n        // x+y=35;\n        // 2*x+4*y=94;\n        for(int x=0;x<=35;x++){\n            int y=35-x;\n            if(2*x+4*y==94){\n                System.out.printf(\"%d %d\\n\",x,y);\n            }\n        }\n    }\n}",
                    "@language": "Java"
                }
            ]
        },
        {
            "id": "00000163",
            "title": {
                "text": "中级第五课——找回文数1"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "128",
                "@unit": "mb"
            },
            "description": {
                "text": "找出10000以内的回文数。\n&nbsp;从左向右读与从右向左读是同一个数的数为回文数，如19391是回文数。\n\n\t\n"
            },
            "input": {
                "text": "无"
            },
            "output": {
                "text": "输出所有符合条件的回文数，"
            },
            "sample_input": {},
            "sample_output": {},
            "test_input": {},
            "test_output": {
                "text": "2 3 4 5 6 7 8 9 11 22 33 44 55 66 77 88 99 101 111 121 131 141 151 161 171 181 191 202 212 222 232 242 252 262 272 282 292 303 313 323 333 343 353 363 373 383 393 404 414 424 434 444 454 464 474 484 494 505 515 525 535 545 555 565 575 585 595 606 616 626 636 646 656 666 676 686 696 707 717 727 737 747 757 767 777 787 797 808 818 828 838 848 858 868 878 888 898 909 919 929 939 949 959 969 979 989 999 1001 1111 1221 1331 1441 1551 1661 1771 1881 1991 2002 2112 2222 2332 2442 2552 2662 2772 2882 2992 3003 3113 3223 3333 3443 3553 3663 3773 3883 3993 4004 4114 4224 4334 4444 4554 4664 4774 4884 4994 5005 5115 5225 5335 5445 5555 5665 5775 5885 5995 6006 6116 6226 6336 6446 6556 6666 6776 6886 6996 7007 7117 7227 7337 7447 7557 7667 7777 7887 7997 8008 8118 8228 8338 8448 8558 8668 8778 8888 8998 9009 9119 9229 9339 9449 9559 9669 9779 9889 9999"
            },
            "hint": {},
            "source": {
                "text": "入门-中级"
            },
            "solution": {
                "text": "#include           \n#include   \nusing namespace std;  \nint main()  \n{  \n    int a,b,c,d;      \n    for(a=2;a0){  \n            c=b%10;  \n            d=d*10+c;  \n            b=b/10;  \n        }  \n        if(a==d){  \n            cout<<a<<' ';  \n        }  \n        }  \n    cout<<endl;  \n    return 0;  \n}",
                "@language": "C++"
            }
        },
        {
            "id": "00000164",
            "title": {
                "text": "字符数组的定义赋值与输出实验"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "128",
                "@unit": "mb"
            },
            "description": {
                "text": "\n\t按以下操作完成指定的字符数组实验\n\t\n\t\t\n\t\t\t\n\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\t定义字符数组ch1[100]并直接赋初始值“Hello&nbsp;Hi” （要求用{ }赋值并加上结束符'\\0'） \n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\t定义字符数组ch2[50]并直接赋初始值“Nice to Meet You” （要求用\"\"赋值） \n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\t输出字符数组ch1的字符串并换行\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\t输出字符数组ch2的字符串并换行 \n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\t在同一行连续输出字符ch1[1]，ch1[3]，ch1[5]，ch1[7]并换行 \n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\t在同一行连续输出字符ch2[0]，ch2[2]，ch2[4]，ch2[6]，ch2[8]并换行 \n\t\t\t\t\t\n\t\t\t\t\n\t\t\t\n\t\t\n\t\n\n\n\t\n\n\n\t见一本通P84-86页\n"
            },
            "input": {},
            "output": {},
            "sample_input": {},
            "sample_output": {},
            "test_input": {
                "text": "ok"
            },
            "test_output": {
                "text": "Hello Hi\nNice to Meet You\nel i\nNc oM"
            },
            "hint": {},
            "source": {
                "text": "语言基础-字符_字符数组_字符串"
            },
            "solution": {
                "text": "#include \n#include \n#include \nusing namespace std;\nchar ch1[101]=\"Hello Hi\",ch2[51]=\"Nice to Meet You\";\nint main()\n{\n  cout<<ch1<<endl<<ch2<<endl;\n  cout<<ch1[1]<<ch1[3]<<ch1[5]<<ch1[7]<<endl;\n  cout<<ch2[0]<<ch2[2]<<ch2[4]<<ch2[6]<<ch2[8]<<endl;\n  return 0;\n}",
                "@language": "C++"
            }
        },
        {
            "id": "00000165",
            "title": {
                "text": "字符串定义与赋值实验"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "128",
                "@unit": "mb"
            },
            "description": {
                "text": "请用字符串方式处理方式实现以下功能。必须#include &lt;string&gt;才能使用字符串的处理函数。\n\n\t字符数组是c语言时代的方法，字符串string是c++后来发展的新方法。\n\n\n\tstring类型的字符串保留了字符数组的一些使用方法。\n\n\n\t\n\t\t\n\t\t\t\n\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\t用string类型定义空字符串s0\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\t用双引号法定义字符串s1并直接赋值“You Can Make It”\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\t定义字符串s2并直接赋值为s1+'2'的值\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\t用string strNew(str)的方法定义字符串s3并直接赋值为s1+\"new3\"的值\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\t用string strNew(n,char)的方法定义字符串s4并直接赋值为100个字符'k'\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\t输出字符串s1,s2,s3,s4的值，每个字符串一行\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\t连续输出s1的第1个字符，s2的第2个字符，s3的第3个字符，s4的第4个字符并回车。 \n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\n\t\t\t\n\t\t\n\t\n\n\n\t可以参考一本通 P133-135\n\n\n\t\n"
            },
            "input": {},
            "output": {},
            "sample_input": {},
            "sample_output": {},
            "test_input": {
                "text": "q"
            },
            "test_output": {
                "text": "You Can Make It\nYou Can Make It2\nYou Can Make Itnew3\nkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk\nYouk"
            },
            "hint": {},
            "source": {
                "text": "语言基础-字符_字符数组_字符串"
            },
            "solution": {
                "text": "#include \n#include \nusing namespace std;\nint main()\n{\n  string s;\n  string s1=\"You Can Make It\";\n  string s2=s1+'2';\n  string s3(s1+\"new3\");\n  string s4(100,'k');\n  cout<<s1<<endl<<s2<<endl<<s3<<endl<<s4<<endl;\n  cout<<s1[0]<<s2[1]<<s3[2]<<s4[3]<<endl;\n  return 0;\n}",
                "@language": "C++"
            }
        },
        {
            "id": "00000166",
            "title": {
                "text": "字符串输入输出处理实验"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "128",
                "@unit": "mb"
            },
            "description": {
                "text": "\n\t用字符串完成以下要求\n\n\n\t【输入】第一行：不带空格的字符串。第二行开始：包含空格的字符串。\n\n\n\t【输出】将输入的第一行文字接到输入的第二行文字后面，做为输出的第一行\n\n\n\t第二行输出：依次将第三行输入开始的每行的最后一个字符取出进行输出\n\n\n\t第三行输出：总共输入的行数。\n\n\n\t【说明】总共不超过100行\n\n\n\t【样例输入1】\n\n\n\tabc\n\n\n\t123 456&nbsp;789\n\n\n\tb b c\n\n\n\ta p p\n\n\n\tf p\n\n\n\t【样例输出1】\n\n\n\t123 456 789abc\n\n\n\tcpp\n\n\n\t5\n\n\n\t\n\n\n\t【提示】\n\n\n\t参考一本通P133-135 页\n\n\n\t\n\n\n\tcin读入数据（包括字符串）时会将空格、制表付、回车等当做数据分割符。一行中有空格视为多个输入数据。\n\n\n\t如果要将包含空格的整行数据整行数据读入字符串，可以用getline(cin,str)。\n\n\n\t例如输入两行数据\n\n\n\tabc\n\n\n\txmlz fj xm\n\n\n\t方法一：\n\n\n\tstring str1,str2;\n\n\n\tcin&lt;&lt;str1; //第一行数据没有空格，直接用cin读入，读入后&nbsp;str1的值为\"abc\"&nbsp;\n\n\n\tgetline(cin,str2); //前面的cin没有将第一行的回车处理，这时getline将继续处理，去掉第一行的回车，str2没有被赋值\n\n\n\tgetline(cin,str2); // 这时getline将得到第二行整行的信息，并将第二行的回车去掉。读入后&nbsp;str2的值为\"xmlz fj xm\"\n\n\n\t方法二：\n\n\n\t\n\t\tstring str1,str2;\n\t\n\t\n\t\tgetline(cin,str1); //读入第一行，读入后&nbsp;str1的值为\"abc\"。且第一行的回车被去掉\n\t\n\t\n\t\tgetline(cin,str2); // 这时getline将得到第二行整行的信息，并将第二行的回车去掉。读入后&nbsp;str2的值为\"xmlz fj xm\"\n\t\n\n\n"
            },
            "input": {},
            "output": {},
            "sample_input": {},
            "sample_output": {},
            "test_input": {
                "text": "ak\n12 67 90\na b c fg\nad fh hjk sg\nsfg fg\nfgfsdg"
            },
            "test_output": {
                "text": "12 67 90ak\ngggg\n6"
            },
            "hint": {},
            "source": {
                "text": "语言基础-字符_字符数组_字符串"
            },
            "solution": {
                "text": "#include \n#include \nusing namespace std;\nint main()\n{\n  string str1,str2,str3;int a=0;\n  cin>>str1;\n  getline(cin,str2);\n  getline(cin,str2);\n  cout<<str2<<str1<<endl;\n  \n  while(getline(cin,str3))\n  {\n    cout<<str3[str3.size()-1];\n    a++;\n  }\n\n  cout<<endl<<a+2<<endl;\n//  system(\"pause\");\n  return 0;\n}",
                "@language": "C++"
            }
        },
        {
            "id": "00000167",
            "title": {
                "text": "换零钱 [1*]"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "128",
                "@unit": "mb"
            },
            "description": {
                "text": "某人想将手中的一张面值 100 元的人民币换成 5 元、 1 元和 0.5 元面值的票子，但要求换正好 100 张，且每种票子至少一张。问：有几种换法？ \n　 \n提示： 用三重循环。想一想如何减少循环的次数。 \n5 元、 1 元和 0.5 元最多各需要几张。记得要求正好换 100 张，总价值100元。 \n循环变量代表某个币种的张数。 "
            },
            "input": {},
            "output": {},
            "sample_input": {},
            "sample_output": {},
            "test_input": {},
            "test_output": {
                "text": "11"
            },
            "hint": {},
            "source": {
                "text": "基础算法-枚举"
            },
            "solution": [
                {
                    "text": "#include \nint main()\n{\n    double i,j,z;\n    int count=0;\n\tfor(i=1;i<97;i++){\n\t\tfor(j=1;j<97;j++){\n\t\t\tfor(z=1;z<97;z++){\n\t\t\t\tif((5*i+j+0.5*z==100)&&(i+j+z==100)){\n\t\t\t\t\tcount++;\n\t\t\t\t\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"%d\",count);\n\treturn 0;\n}",
                    "@language": "C"
                },
                {
                    "text": "#include\nusing namespace std;\nint main()\n{\n    int sum=0;\n    for(int i=1;i<=19;i++)\n      for(int j=1;j<=99;j++)\n      {\n        if(i*5+j+(100-i-j)*0.5==100)sum++;\n      }\n    cout<<sum<<endl;\n    return 0;\n}",
                    "@language": "C++"
                },
                {
                    "text": "program ygjnierb;\n  var\n    a,i,j,k:integer;\n  begin\n    a:=0;\n    for i:=1 to 20 do\n      for j:=1 to 100 do\n        for k:=1 to 100 do\n            if (i+j+k=100) and (i*5+j+k*0.5=100) then a:=a+1;\n    write(a);\n  end.",
                    "@language": "Pascal"
                },
                {
                    "text": "import java.util.*;\npublic class Main{\n  public static void main(String[] args) {\n    Scanner cin = new Scanner(System.in);\n    int sum = 100;\n    int count=0;\n    for(int i = 0; i < 100; i ++){\n      for(int j = 0; j < 100; j ++){\n        for(int k = 0; k < 100; k ++){\n          if(0.5*i+1*j+5*k==100 && i+j+k==100){\n            count += 1;\n          }\n        }\n      }\n    }\n    System.out.println(count);\n  }\n}",
                    "@language": "Java"
                }
            ]
        },
        {
            "id": "00000168",
            "title": {
                "text": "输出N以内的素数 nprime [1*+]"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "128",
                "@unit": "mb"
            },
            "description": {
                "text": "\n\t 输入一个整数n \n输出N以内的所有素数 \n\n\n\n\tInput  \n\n\n\t 一个整数n \n\n\n\n\tOutput  \n\n\n\t 由小到大输出N以内的所有素数 \n每行一个数 \n\n\n\n\tSample Input  \n\n样例输入1\n10\n\n样例输出1\n2\n3\n5\n7\n\n\tSample Output  \n\n　\n\n\tHint  \n\n 2&lt;=N&lt;=5000 "
            },
            "input": {},
            "output": {},
            "sample_input": {},
            "sample_output": {},
            "test_input": {
                "text": "4999"
            },
            "test_output": {
                "text": "2\n3\n5\n7\n11\n13\n17\n19\n23\n29\n31\n37\n41\n43\n47\n53\n59\n61\n67\n71\n73\n79\n83\n89\n97\n101\n103\n107\n109\n113\n127\n131\n137\n139\n149\n151\n157\n163\n167\n173\n179\n181\n191\n193\n197\n199\n211\n223\n227\n229\n233\n239\n241\n251\n257\n263\n269\n271\n277\n281\n283\n293\n307\n311\n313\n317\n331\n337\n347\n349\n353\n359\n367\n373\n379\n383\n389\n397\n401\n409\n419\n421\n431\n433\n439\n443\n449\n457\n461\n463\n467\n479\n487\n491\n499\n503\n509\n521\n523\n541\n547\n557\n563\n569\n571\n577\n587\n593\n599\n601\n607\n613\n617\n619\n631\n641\n643\n647\n653\n659\n661\n673\n677\n683\n691\n701\n709\n719\n727\n733\n739\n743\n751\n757\n761\n769\n773\n787\n797\n809\n811\n821\n823\n827\n829\n839\n853\n857\n859\n863\n877\n881\n883\n887\n907\n911\n919\n929\n937\n941\n947\n953\n967\n971\n977\n983\n991\n997\n1009\n1013\n1019\n1021\n1031\n1033\n1039\n1049\n1051\n1061\n1063\n1069\n1087\n1091\n1093\n1097\n1103\n1109\n1117\n1123\n1129\n1151\n1153\n1163\n1171\n1181\n1187\n1193\n1201\n1213\n1217\n1223\n1229\n1231\n1237\n1249\n1259\n1277\n1279\n1283\n1289\n1291\n1297\n1301\n1303\n1307\n1319\n1321\n1327\n1361\n1367\n1373\n1381\n1399\n1409\n1423\n1427\n1429\n1433\n1439\n1447\n1451\n1453\n1459\n1471\n1481\n1483\n1487\n1489\n1493\n1499\n1511\n1523\n1531\n1543\n1549\n1553\n1559\n1567\n1571\n1579\n1583\n1597\n1601\n1607\n1609\n1613\n1619\n1621\n1627\n1637\n1657\n1663\n1667\n1669\n1693\n1697\n1699\n1709\n1721\n1723\n1733\n1741\n1747\n1753\n1759\n1777\n1783\n1787\n1789\n1801\n1811\n1823\n1831\n1847\n1861\n1867\n1871\n1873\n1877\n1879\n1889\n1901\n1907\n1913\n1931\n1933\n1949\n1951\n1973\n1979\n1987\n1993\n1997\n1999\n2003\n2011\n2017\n2027\n2029\n2039\n2053\n2063\n2069\n2081\n2083\n2087\n2089\n2099\n2111\n2113\n2129\n2131\n2137\n2141\n2143\n2153\n2161\n2179\n2203\n2207\n2213\n2221\n2237\n2239\n2243\n2251\n2267\n2269\n2273\n2281\n2287\n2293\n2297\n2309\n2311\n2333\n2339\n2341\n2347\n2351\n2357\n2371\n2377\n2381\n2383\n2389\n2393\n2399\n2411\n2417\n2423\n2437\n2441\n2447\n2459\n2467\n2473\n2477\n2503\n2521\n2531\n2539\n2543\n2549\n2551\n2557\n2579\n2591\n2593\n2609\n2617\n2621\n2633\n2647\n2657\n2659\n2663\n2671\n2677\n2683\n2687\n2689\n2693\n2699\n2707\n2711\n2713\n2719\n2729\n2731\n2741\n2749\n2753\n2767\n2777\n2789\n2791\n2797\n2801\n2803\n2819\n2833\n2837\n2843\n2851\n2857\n2861\n2879\n2887\n2897\n2903\n2909\n2917\n2927\n2939\n2953\n2957\n2963\n2969\n2971\n2999\n3001\n3011\n3019\n3023\n3037\n3041\n3049\n3061\n3067\n3079\n3083\n3089\n3109\n3119\n3121\n3137\n3163\n3167\n3169\n3181\n3187\n3191\n3203\n3209\n3217\n3221\n3229\n3251\n3253\n3257\n3259\n3271\n3299\n3301\n3307\n3313\n3319\n3323\n3329\n3331\n3343\n3347\n3359\n3361\n3371\n3373\n3389\n3391\n3407\n3413\n3433\n3449\n3457\n3461\n3463\n3467\n3469\n3491\n3499\n3511\n3517\n3527\n3529\n3533\n3539\n3541\n3547\n3557\n3559\n3571\n3581\n3583\n3593\n3607\n3613\n3617\n3623\n3631\n3637\n3643\n3659\n3671\n3673\n3677\n3691\n3697\n3701\n3709\n3719\n3727\n3733\n3739\n3761\n3767\n3769\n3779\n3793\n3797\n3803\n3821\n3823\n3833\n3847\n3851\n3853\n3863\n3877\n3881\n3889\n3907\n3911\n3917\n3919\n3923\n3929\n3931\n3943\n3947\n3967\n3989\n4001\n4003\n4007\n4013\n4019\n4021\n4027\n4049\n4051\n4057\n4073\n4079\n4091\n4093\n4099\n4111\n4127\n4129\n4133\n4139\n4153\n4157\n4159\n4177\n4201\n4211\n4217\n4219\n4229\n4231\n4241\n4243\n4253\n4259\n4261\n4271\n4273\n4283\n4289\n4297\n4327\n4337\n4339\n4349\n4357\n4363\n4373\n4391\n4397\n4409\n4421\n4423\n4441\n4447\n4451\n4457\n4463\n4481\n4483\n4493\n4507\n4513\n4517\n4519\n4523\n4547\n4549\n4561\n4567\n4583\n4591\n4597\n4603\n4621\n4637\n4639\n4643\n4649\n4651\n4657\n4663\n4673\n4679\n4691\n4703\n4721\n4723\n4729\n4733\n4751\n4759\n4783\n4787\n4789\n4793\n4799\n4801\n4813\n4817\n4831\n4861\n4871\n4877\n4889\n4903\n4909\n4919\n4931\n4933\n4937\n4943\n4951\n4957\n4967\n4969\n4973\n4987\n4993\n4999"
            },
            "hint": {},
            "source": {
                "text": "基础算法-数论素数"
            },
            "solution": [
                {
                    "text": "#include\nusing namespace std;\nint n,c=0;\nint main(){\n    cin>>n;\n    for(int i=2;i<=n;i++){\n            for(int j=2;j<=i-1;j++)\n            if(i%j==0) c++;\n            if(c==0) cout<<i<<endl;\n            c=0;\n            }\n    return 0;\n}",
                    "@language": "C++"
                },
                {
                    "text": "import java.util.*;\n\npublic class Main{\n  public static void main(String[] args) {\n    Scanner cin = new Scanner(System.in);\n    int n = cin.nextInt();\n    for(int i = 0; i <= n; i ++){\n      if(isPrime(i)){\n        System.out.println(i);\n      }\n    }\n  }\n\n  public static boolean isPrime(int n){\n    if(n == 1 || n ==0){\n      return false;\n    }\n    for(int i = 2; i <= (int)Math.sqrt(n); i ++){\n      if(n%i==0){\n        return false;\n      }\n    }\n    return true;\n  }\n}",
                    "@language": "Java"
                }
            ]
        },
        {
            "id": "00000169",
            "title": {
                "text": "邮局选址问题"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "128",
                "@unit": "mb"
            },
            "description": {
                "text": "邮局选址问题 \n【问题描述：】    \n在一个按照东西和南北方向划分成规整街区的城市里，n个居民点散乱地分布在不同的街区中。用x坐标表示东西向，用y坐标表示南北向。各居民点的位置可以由\n坐标(x,y)表示。街区中任意2点(x1,y1)和(x2,y2)之间的距离可以用数值|x1-x2|+|y1-y2|度量。 \n居民们希望在城市中选择建立邮局的最佳位置，使n个居民点到邮局的距离总和最小。 \n【数据输入：】    第1行是居民点数n，1≤n≤10000。接下来n行是居民点的位置，每行2个整数x和y，-10000≤x，y≤10000。 \n【结果输出:】 1个数，是n个居民点到邮局的距离总和的最小值。 \n【输入文件示例】 \n5 \n1 2 \n2 2 \n1 3 \n3 -2 \n3 3 \n【输出文件示例】 \n10 "
            },
            "input": {},
            "output": {},
            "sample_input": {},
            "sample_output": {},
            "test_input": {
                "text": "3\n-4 -3\n-4 5\n5 2"
            },
            "test_output": {
                "text": "17"
            },
            "hint": {},
            "source": {
                "text": "基础算法-中位数应用"
            },
            "solution": [
                {
                    "text": "#include\n#include\n#include\nusing namespace std;\nint main()\n{\n    int n;\n    cin>>n;\n    int x[n+1],y[n+1],sum=0;\n    for(int i=1;i>x[i]>>y[i];\n    sort(x+1,x+n+1);\n    sort(y+1,y+n+1);\n    if(n%2==1)\n    {\n        int t=y[n/2+1];\n        for(int i=1;it) sum+=y[i]-t;\n            if(y[i]t) sum+=x[i]-t;\n            if(x[i]t) sum+=y[i]-t;\n            if(y[i]t) sum+=x[i]-t;\n            if(x[i]<=t) sum+=t-x[i];\n        }\n    }\n    cout<<sum;\n    return 0;\n}",
                    "@language": "C++"
                },
                {
                    "text": "import java.util.Scanner;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        int x[] = new int[n];\n        int y[] = new int[n];\n        for (int i = 0; i < n; i++) {\n            x[i] = sc.nextInt();\n            y[i] = sc.nextInt();\n        }\n        int minx = Integer.MAX_VALUE;\n        int miny = Integer.MAX_VALUE;\n\n        for (int i = 0; i < n; i++) {\n            int sumx = 0;\n            int sumy = 0;\n            int d = x[i];\n            int f = y[i];\n            for (int j = 0; j < n; j++) {\n                sumx = sumx + Math.abs(d - x[j]);\n                sumy = sumy + Math.abs(f - y[j]);\n            }\n            if (sumx < minx)\n                minx = sumx;\n            if (sumy < miny) {\n                miny = sumy;\n            }\n        }\n        System.out.println(minx + miny);\n    }\n}",
                    "@language": "Java"
                }
            ]
        },
        {
            "id": "00000170",
            "title": {
                "text": "跳马问题 [2*+]"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "128",
                "@unit": "mb"
            },
            "description": {
                "text": "如下图是半个中国象棋棋盘。有一只马从左下角A点跳到右上角B点。规定只能往右跳，跳法按照象棋的日字型跳法。 \n&&缺少图片...&& \n求跳法总数"
            },
            "input": {},
            "output": {},
            "sample_input": {},
            "sample_output": {},
            "test_input": {
                "text": "37"
            },
            "test_output": {
                "text": "37"
            },
            "hint": {},
            "source": {
                "text": "基础算法-回溯深搜"
            },
            "solution": {
                "text": "#include\n#include\n#include\n#include\n\nusing namespace std;\n\n\nint main()\n{\n\tcout<<\"37\";\n\treturn 0;\n}",
                "@language": "C++"
            }
        },
        {
            "id": "00000171",
            "title": {
                "text": "试卷批分 grade [2*]"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "128",
                "@unit": "mb"
            },
            "description": {
                "text": "【问题描述：】 某学校进行了一次英语考试，共有10道是非题，每题为10分，解答用1表示“是”，用0表示“非”的方式。但老师批完卷后，发现漏批了一张试卷，而且标准答案也丢失了，手头只剩下了3张标有分数的试卷。 \n试卷一： \n①    ②    ③    ④    ⑤    ⑥    ⑦    ⑧    ⑨    ⑩ \n0     0     1     0     1     0     0     1     0     0       得分：70 \n试卷二： \n①    ②    ③    ④    ⑤    ⑥    ⑦    ⑧    ⑨    ⑩ \n0     1     1     1     0     1     0     1     1     1       得分：50 \n试卷三： \n①    ②    ③    ④    ⑤    ⑥    ⑦    ⑧    ⑨    ⑩ \n0     1     1     1     0     0     0     1     0     1       得分：30 \n待批试卷： \n①    ②    ③    ④    ⑤    ⑥    ⑦    ⑧    ⑨    ⑩ \n0     0     1     1     1     0     0     1     1     1       得分：？ \n【问题求解：】 请编一程序依据这三张试卷，算出漏批的那张试卷的分数。"
            },
            "input": {},
            "output": {},
            "sample_input": {},
            "sample_output": {},
            "test_input": {
                "text": "60"
            },
            "test_output": {
                "text": "60"
            },
            "hint": {},
            "source": {
                "text": "基础算法-回溯深搜"
            },
            "solution": [
                {
                    "text": "#include\nint main(){\n\tprintf(\"60\");\n\treturn 0;\n}",
                    "@language": "C"
                },
                {
                    "text": "#include\nusing namespace std;\nint main()\n{\n    cout<<\"60\";\n    return 0;\n}",
                    "@language": "C++"
                },
                {
                    "text": "var\n  n,m,i,j,x:longint;\nbegin\n  readln(n,m);\n    for i:=1 to m do\n    begin\n      for j:=1 to n do\n        read(x);\n        readln(x);\n      end;\n      for i:=1 to n do\n        read(x);\n      writeln(60);\nend.",
                    "@language": "Pascal"
                }
            ]
        },
        {
            "id": "00000172",
            "title": {
                "text": "求指数方程的根(fxroot) [2*+] **"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "128",
                "@unit": "mb"
            },
            "description": {
                "text": "求指数方程的根(fxroot) \n求方程f(x)=2^x+3^x-4^x=0 在[1,2]内的根。提示a^x可表示成exp(x*ln(a))或用math库中的power（a,x）。 \n输入：无输入 \n输出：f(x)=0的根，x精确到小数点10位 \n提示：记方程f(x)=0，若存在2个数x1和x2，且x1"
            },
            "input": {},
            "output": {},
            "sample_input": {},
            "sample_output": {},
            "test_input": {
                "text": "1.5071265916"
            },
            "test_output": {
                "text": "1.5071265916"
            },
            "hint": {},
            "source": {
                "text": "基础算法-分治"
            },
            "solution": {
                "text": "#include \n#include \nusing namespace std;\nint i,j,n;\ndouble f(double x)\n{\n    return(pow(2,x)+pow(3,x)-pow(4,x));\n}\nmain()\n{\n      double x,r,l;\n      r=2;l=1;\n      x=(r+l)/2;\n      while (f(x)!=0 && r-l>0.000000001)\n      {\n            if (f(r)*f(x)<0) l=x;\n            else r=x;\n            x=(r+l)/2;\n      }\n      printf(\"%0.10lf\",x);\n}",
                "@language": "C++"
            }
        },
        {
            "id": "00000173",
            "title": {
                "text": "钓鱼"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "128",
                "@unit": "mb"
            },
            "description": {
                "text": "\n\t&nbsp;&nbsp;&nbsp; 约翰是个垂钓谜，星期天他决定外出钓鱼h小时（1≤h≤16），约翰家附近共有n个池塘（2≤n≤25），这些池塘分布在一条直线上，约翰将这些池塘按离家的距离编上号，依次为L1,L2,…,Ln，约翰家门外就是第一个池塘，所以他到第一个池塘是不用花时间的，约翰可以任选若干个池塘垂钓，并且在每个池塘他都可以呆上任意长的时间，但呆的时间必须为5分钟的倍数，（5分钟为一个单位时间），已知从池塘Li到池塘Li+1要化去约翰ti个单位时间，每个池塘的上鱼率预先也是已知的，池塘Li在第一个单位时间内能钓到的鱼为Fi（0≤Fi≤100），并且每过一个单位时间在单位时间内能钓到的鱼将减少一个常数di（0≤di≤100），现在请你编一个程序计算约翰最多能钓到多少鱼。 \n"
            },
            "input": {
                "text": "输入第一行为一个整数n，第二行为一个整数h，第三行为n个用空格隔开的整数，表示Fi（i=1,2,…,n），第四行为n个用空格隔开的整数，表示di（i=1,2,…,n），第五行为n-1个用空格隔开的整数，表示ti（i=1,2,…,n-1）"
            },
            "output": {
                "text": "输出一个整数，表示约翰最多能钓到的鱼的数量。"
            },
            "sample_input": {
                "text": "2\n1\n10 1\n2 5 \n2"
            },
            "sample_output": {
                "text": "31"
            },
            "hint": {},
            "source": {
                "text": "动态规划 洛谷"
            },
            "solution": {
                "text": "#include\n#include\n#include\nusing namespace std;\nconst int N(16*60/5+5),M(30);  //M:池塘上界  N:单位时间上界 \nint tim[M],t[M],first[M],d[M],f[M][N],ans(0);\nint main()\n{\n//    ifstream cin(\"fish.in\");\n//    ofstream cout(\"fish.out\");\n    int h,n;\n    cin>>n>>h;\n    h=h*60/5;\n    for (int i=1;i>first[i];\n    for (int i=1;i>d[i]; \n    t[0]=0;\n    for (int i=1;i>tim[i];  t[i]=t[i-1]+tim[i]; }  \n    memset(f,0,sizeof(f));\n    for (int j=1;j0;k++)                \n                    f[i][j]=max(f[i][j],f[i-1][j-tim[i-1]-k]+k*first[i]-k*(k-1)/2*d[i]);                            \n            ans=max(ans,f[i][j]);\n        }\n    cout<<ans<<endl;\n    return 0;\n}",
                "@language": "C++"
            }
        },
        {
            "id": "00000174",
            "title": {
                "text": "文字排版"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "128",
                "@unit": "mb"
            },
            "description": {
                "text": "\n\t写电子邮件是有趣的，但不幸的是经常写不好看，主要是因为所有的行不一样长，你的上司想要发排版精美的电子邮件，你的任务是为他编写一个电子邮件排版程序。\n\n\n\t完成这个任务最简单的办法是在太短的行中的单词之间插入空格，但这并不是最好的方法，考虑如下例子： \n\n\n\t**************************** \n\n\n\tThis is the example\nyou&nbsp; are \n\n\n\tactually\nconsidering. \n\n\n\t假设我们想将第二行变得和第一行一样长，靠简单地插入空格则我们将得到如下结果： \n\n\n\t**************************** \n\n\n\tThis is the example\nyou&nbsp; are \n\n\n\tactually&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; considering. \n\n\n\t&nbsp; \n\n\n\t但这太难看了，因为在第二行中有一个非常大的空白，如果将第一行的单词“are”移到下一行我们将得到较好的结果： \n\n\n\t**************************** \n\n\n\tThis&nbsp; is&nbsp; the&nbsp; example&nbsp;&nbsp; you \n\n\n\tare&nbsp; actually&nbsp;&nbsp; considering. \n\n\n\t&nbsp; \n\n\n\t当然，这必须对难看程度进行量化。因此我们必须给出单词之间的空格的难看程度，一个包含N个空格符的空白段，其难看程度值为(n-1)2，程序的目的是使难看程度的总和最小化。例如，第一个例子的难看程度是1+7*7=50，而第二个例子的难看程度仅为1+1+1+4+1+4=12。 \n\n\n\t输出时，每一行的开头和结尾处都必须是一个单词，即每行开头和结尾处不能有空白。唯一例外的是该行仅有一个单词组成的情况，对于这种情况你可将单词放在该行开头处输出，此时如果该单词比该行应有的长度短则我们指定它的最坏程度为500，当然在这种情况下，该行的实际长度即为该单词的长度。 \n"
            },
            "input": {
                "text": "输入第一行是一个整数N，表示该段要求达到的宽度，1&lt;=N&lt;=80。该段文章由一个或多个单词组成，单词由ASCII码值为33到126（包含33和126）的字符组成，单词与单词之间用空格隔开（可能超过一个）。单词长度不会超过段落要求达到的宽度。一段文字所有单词的总长度不会超过10000个字符，任何一行都不会超过100个字符，任何一个单词都在同一行内。"
            },
            "output": {
                "text": "\n\t对于每个段落，找出使其难看程度最小的排版形式并输出句子：“Minimal\nbadness is B.”,B是指按可能的最好排版形式会发生的难看程度值。注意排版后文本行数任意，多余的空格也可删除。 \n"
            },
            "sample_input": {
                "text": "28\nThis is the example you  are\nactually considering."
            },
            "sample_output": {
                "text": "Minimal badness is 12."
            },
            "hint": {},
            "source": {
                "text": "动态规划"
            },
            "solution": {
                "text": "#include\n#include\nusing namespace std;\nconst int N(10000+5);\nint n,t,f[N],len[N];\nstring word[N];\n//ifstream cin(\"format.in\");\n//ofstream cout(\"format.out\");\nvoid init();\nvoid solve();\nint main()\n{\n    init();\n    solve();\n    //system(\"pause\");\n    return 0;\n}\nvoid init()\n{\n    cin>>n;\n    t=1;\n    while (cin>>word[t]) t++;\n    t--;\n    len[0]=0;\n    for (int i=1;i<=t;i++)\n        len[i]=len[i-1]+word[i].size();\n}\nvoid solve()\n{\n    f[0]=0;  f[1]=500;\n    for (int i=2;i<=t;i++)\n    {\n        if (word[i].size()<n) f[i]=f[i-1]+500;\n        else f[i]=f[i-1];   //当前单词长度等于限制宽度时 \n        for (int j=2;j<=i&&len[i]-len[i-j]+j-1<=n;j++)\n        {\n            int x,y,z,s=0;\n            z=n-(len[i]-len[i-j]);\n            x=z/(j-1);\n            y=z%(j-1);\n            for (int k=1;k<=y;k++) s+=x*x;\n            for (int k=1;k<=j-1-y;k++) s+=(x-1)*(x-1);\n            f[i]=min(f[i],f[i-j]+s);\n        }\n    }\n    cout<<\"Minimal badness is \"<<f[t]<<\".\\n\";\n}",
                "@language": "C++"
            }
        },
        {
            "id": "00000175",
            "title": {
                "text": "课后习题3.7"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "128",
                "@unit": "mb"
            },
            "description": {
                "text": "\n\t要将\"China\"译成密码，译码规律是：用原来字母后面的第4个字母代替原来的字母．例如，字母\"A\"后面第4个字母是\"E\"．\"E\"代替\"A\"。因此，\"China\"应译为\"Glmre\"。请编一程序，用赋初值的方法使cl、c2、c3、c4、c5五个变量的值分别为，’C’、’h’、’i’、’n’、’a’，经过运算，使c1、c2、c3、c4、c5分别变为’G’、’l’、’m’、’r’、’e’，并输出。\n"
            },
            "input": {
                "text": "\n\tChina\n"
            },
            "output": {
                "text": "\n\t加密后的China\n"
            },
            "sample_input": {
                "text": "China"
            },
            "sample_output": {
                "text": "Glmre"
            },
            "hint": {
                "text": "so easy"
            },
            "source": {
                "text": "C语言程序设计教程课后习题"
            },
            "solution": [
                {
                    "text": "#include\nint main()\n{\n  int i;\n  char c[]=\"China\";\n  for(i=0;i<5;i++)\n    c[i]=c[i]+4;\n  printf(\"%s\\n\",c);\n  return 0;\n}",
                    "@language": "C"
                },
                {
                    "text": "#include\n#include\nusing namespace std;\nint main()\n{\n    char c[5];\n    for(int i=0;i>c[i];\n    \tc[i]+=4;\n\t}\n    for(int i=0;i<5;i++)\n    \tcout<<c[i];\n    return 0;\n}",
                    "@language": "C++"
                }
            ]
        },
        {
            "id": "00000176",
            "title": {
                "text": "课后习题6.6"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "128",
                "@unit": "mb"
            },
            "description": {
                "text": "打印出所有\"水仙花数\"，所谓\"水仙花数\"是指一个三位数，其各位数字立方和等于该本身。\n例如：153是一个水仙花数，因为153=1^3+5^3+3^3。\nOutput:\n153\n???\n???\n??? "
            },
            "input": {
                "text": "无"
            },
            "output": {
                "text": "所有的水仙花数，从小的开始。\n每行一个"
            },
            "sample_input": {},
            "sample_output": {},
            "test_input": {
                "text": "1"
            },
            "test_output": {
                "text": "153\n370\n371\n407"
            },
            "hint": {},
            "source": {
                "text": "C语言程序设计教程课后习题"
            },
            "solution": [
                {
                    "text": "#include\nmain()\n{\n\tint i,t,a,b,c;\n\tfor(i=100;i<999;i++)\n\t{\n\t\tt=i;\n\t\tc=t%10;  t/=10;\n\t\tb=t%10;  t/=10;\n\t\ta=t%10;  t/=10;\n\t\tif(i==(a*a*a+b*b*b+c*c*c))\n\t\t\tprintf(\"%d\\n\",i);\n\t}\n}",
                    "@language": "C"
                },
                {
                    "text": "#include\nusing namespace std;\nint main()\n{\n    cout<<\"153\\n370\\n371\\n407\";\n    return 0;\n}",
                    "@language": "C++"
                }
            ]
        },
        {
            "id": "00000177",
            "title": {
                "text": "课后习题8.1"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "128",
                "@unit": "mb"
            },
            "description": {
                "text": "写两个函数，分别求两个整数的最大公约数和最小公倍数，用主函数调用这两个函数，并输出结果两个整数由键盘输入。"
            },
            "input": {
                "text": "两个数"
            },
            "output": {
                "text": "最大公约数 最小公倍数"
            },
            "sample_input": {
                "text": "6 15"
            },
            "sample_output": {
                "text": "3 30"
            },
            "hint": {},
            "source": {
                "text": "C语言程序设计教程课后习题"
            },
            "solution": [
                {
                    "text": "#include\nmain()\n{\n\tint fun1(int x,int y);\n\tint fun2(int x,int y);\n\tint m,n;\n\tscanf(\"%d%d\",&m,&n);\n\tprintf(\"%d %d\\n\",fun1(m,n),fun2(m,n));\n}\nint fun1(int x,int y)\n{\n\tint r;\n\tr=x%y;\n\twhile(r!=0)\n\t{\n\t\tx=y;\n\t\ty=r;\n\t\tr=x%y;\n\t}\n\treturn y;\n}\nint fun2(int x,int y)\n{\n\tint r,t;\n\tr=x%y;\n\tt=x*y;\n\twhile(r!=0)\n\t{\n\t\tx=y; y=r; r=x%y;\n\t}\n\treturn t/y;\n}",
                    "@language": "C"
                },
                {
                    "text": "#include\nusing namespace std;\nint main()\n{\n    cout<<\"3 30\";\n    return 0;\n}",
                    "@language": "C++"
                }
            ]
        },
        {
            "id": "00000178",
            "title": {
                "text": "C语言程序设计教程（第三版）课后习题1.5"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "128",
                "@unit": "mb"
            },
            "description": {
                "text": "请参照本章例题，编写一个C程序，输出以下信息：\n**************************\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Very&nbsp;&nbsp;&nbsp; Good!\n**************************\n数＊号可看出，Very前面9空格，Good前面&hellip;&hellip;\n*也是输出的一部分，别光打印Very Good!"
            },
            "input": {
                "text": "无需输入"
            },
            "output": {
                "text": "**************************\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Very&nbsp;&nbsp;&nbsp; Good!\n**************************"
            },
            "sample_input": {
                "text": "no input needed"
            },
            "sample_output": {
                "text": "**************************\n         Very    Good!\n**************************"
            },
            "test_input": {
                "text": "1234"
            },
            "test_output": {
                "text": "**************************\n         Very    Good!\n**************************"
            },
            "hint": {},
            "source": {},
            "solution": {
                "text": "#include\nusing namespace std;\nint main()\n{\n\tcout<<\"**************************\"<<endl;\n\tcout<<\"         Very    Good!\"<<endl;\n\tcout<<\"**************************\"<<endl;\n\treturn 0;\n}",
                "@language": "C++"
            }
        },
        {
            "id": "00000179",
            "title": {
                "text": "C语言程序设计教程（第三版）课后习题3.7"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "128",
                "@unit": "mb"
            },
            "description": {
                "text": "要将&quot;China&quot;译成密码，译码规律是：用原来字母后面的第4个字母代替原来的字母．例如，字母&quot;A&quot;后面第4个字母是&quot;E&quot;．&quot;E&quot;代替&quot;A&quot;。因此，&quot;China&quot;应译为&quot;Glmre&quot;。请编一程序，用赋初值的方法使cl、c2、c3、c4、c5五个变量的值分别为，&rsquo;C&rsquo;、&rsquo;h&rsquo;、&rsquo;i&rsquo;、&rsquo;n&rsquo;、&rsquo;a&rsquo;，经过运算，使c1、c2、c3、c4、c5分别变为&rsquo;G&rsquo;、&rsquo;l&rsquo;、&rsquo;m&rsquo;、&rsquo;r&rsquo;、&rsquo;e&rsquo;，并输出。"
            },
            "input": {
                "text": "China"
            },
            "output": {
                "text": "加密后的China"
            },
            "sample_input": {
                "text": "China"
            },
            "sample_output": {
                "text": "Glmre"
            },
            "hint": {
                "text": "so easy"
            },
            "source": {},
            "solution": {
                "text": "#include\nusing namespace std;\nint main()\n{\n\tchar c1='C',c2='h',c3='i',c4='n',c5='a';\n\tc1+=4; c2+=4; c3+=4; c4+=4; c5+=4;\n\tcout<<c1<<c2<<c3<<c4<<c5<<endl;\n\treturn 0;\n}",
                "@language": "C++"
            }
        },
        {
            "id": "00000180",
            "title": {
                "text": "C语言程序设计教程（第三版）课后习题6.6"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "128",
                "@unit": "mb"
            },
            "description": {
                "text": "打印出所有\"水仙花数\"，所谓\"水仙花数\"是指一个三位数，其各位数字立方和等于该本身。\n例如：153是一个水仙花数，因为153=1^3+5^3+3^3。\nOutput:\n153\n???\n???\n??? "
            },
            "input": {
                "text": "无"
            },
            "output": {
                "text": "所有的水仙花数，从小的开始。\n每行一个"
            },
            "sample_input": {},
            "sample_output": {},
            "test_input": {
                "text": "1"
            },
            "test_output": {
                "text": "153\n370\n371\n407"
            },
            "hint": {},
            "source": {},
            "solution": {
                "text": "#include\nusing namespace std;\nint main()\n{\n\tint g,s,b;\n\tfor (int i=100; i<999; i++)\n\t{\n\t\tb=i/100;\n\t\ts=i/10%10;\n\t\tg=i%10;\n\t\tif (b*b*b+s*s*s+g*g*g==i) cout<<i<<endl;\n\t}\n\treturn 0;\n}",
                "@language": "C++"
            }
        },
        {
            "id": "00000181",
            "title": {
                "text": "C语言程序设计教程（第三版）课后习题8.1"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "128",
                "@unit": "mb"
            },
            "description": {
                "text": "写两个函数，分别求两个整数的最大公约数和最小公倍数，用主函数调用这两个函数，并输出结果两个整数由键盘输入。"
            },
            "input": {
                "text": "两个数"
            },
            "output": {
                "text": "最大公约数 最小公倍数"
            },
            "sample_input": {
                "text": "6 15"
            },
            "sample_output": {
                "text": "3 30"
            },
            "hint": {},
            "source": {},
            "solution": {
                "text": "#include\nusing namespace std;\nint gcd(int m,int n)\n{\n\tint r=m%n;\n\twhile (r)\n\t{\n\t\tm=n;\n\t\tn=r;\n\t\tr=m%n;\n\t}\n\treturn n;\n}\nint lcd(int m,int n)\n{\n\treturn m*n/gcd(m,n);\n}\nint main()\n{\n\tint m,n;\n\tcin>>m>>n;\n\tcout<<gcd(m,n)<<\" \"<<lcd(m,n)<<endl;\n\treturn 0;\n}",
                "@language": "C++"
            }
        },
        {
            "id": "00000182",
            "title": {
                "text": "C语言程序设计教程（第三版）课后习题1.5"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "128",
                "@unit": "mb"
            },
            "description": {
                "text": "请参照本章例题，编写一个C程序，输出以下信息：\n**************************\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Very&nbsp;&nbsp;&nbsp; Good!\n**************************\n数＊号可看出，Very前面9空格，Good前面&hellip;&hellip;\n*也是输出的一部分，别光打印Very Good!"
            },
            "input": {
                "text": "无需输入"
            },
            "output": {
                "text": "**************************\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Very&nbsp;&nbsp;&nbsp; Good!\n**************************"
            },
            "sample_input": {
                "text": "no input needed"
            },
            "sample_output": {
                "text": "**************************\n         Very    Good!\n**************************"
            },
            "test_input": {
                "text": "1234"
            },
            "test_output": {
                "text": "**************************\n         Very    Good!\n**************************"
            },
            "hint": {},
            "source": {},
            "solution": {
                "text": "#include\nusing namespace std;\nint main()\n{\ncout<<\"**************************\"<<endl;\ncout<<\"         Very    Good!\"<<endl;\ncout<<\"**************************\"<<endl;\n}",
                "@language": "C++"
            }
        },
        {
            "id": "00000183",
            "title": {
                "text": "C语言程序设计教程（第三版）课后习题3.7"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "128",
                "@unit": "mb"
            },
            "description": {
                "text": "要将&quot;China&quot;译成密码，译码规律是：用原来字母后面的第4个字母代替原来的字母．例如，字母&quot;A&quot;后面第4个字母是&quot;E&quot;．&quot;E&quot;代替&quot;A&quot;。因此，&quot;China&quot;应译为&quot;Glmre&quot;。请编一程序，用赋初值的方法使cl、c2、c3、c4、c5五个变量的值分别为，&rsquo;C&rsquo;、&rsquo;h&rsquo;、&rsquo;i&rsquo;、&rsquo;n&rsquo;、&rsquo;a&rsquo;，经过运算，使c1、c2、c3、c4、c5分别变为&rsquo;G&rsquo;、&rsquo;l&rsquo;、&rsquo;m&rsquo;、&rsquo;r&rsquo;、&rsquo;e&rsquo;，并输出。"
            },
            "input": {
                "text": "China"
            },
            "output": {
                "text": "加密后的China"
            },
            "sample_input": {
                "text": "China"
            },
            "sample_output": {
                "text": "Glmre"
            },
            "hint": {
                "text": "so easy"
            },
            "source": {},
            "solution": {
                "text": "#include\nusing namespace std;\nint main()\n{\n\tchar c1='C',c2='h',c3='i',c4='n',c5='a';\n\tc1+=4; c2+=4; c3+=4; c4+=4; c5+=4;\n\tcout<<c1<<c2<<c3<<c4<<c5<<endl;\n\treturn 0;\n}",
                "@language": "C++"
            }
        },
        {
            "id": "00000184",
            "title": {
                "text": "C语言程序设计教程（第三版）课后习题6.6"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "128",
                "@unit": "mb"
            },
            "description": {
                "text": "打印出所有\"水仙花数\"，所谓\"水仙花数\"是指一个三位数，其各位数字立方和等于该本身。\n例如：153是一个水仙花数，因为153=1^3+5^3+3^3。\nOutput:\n153\n???\n???\n??? "
            },
            "input": {
                "text": "无"
            },
            "output": {
                "text": "所有的水仙花数，从小的开始。\n每行一个"
            },
            "sample_input": {},
            "sample_output": {},
            "test_input": {
                "text": "1"
            },
            "test_output": {
                "text": "153\n370\n371\n407"
            },
            "hint": {},
            "source": {},
            "solution": {
                "text": "#include\nusing namespace std;\nint main()\n{\n\tint g,s,b;\n\tfor (int i=100; i<999; i++)\n\t{\n\t\tb=i/100;\n\t\ts=i/10%10;\n\t\tg=i%10;\n\t\tif (b*b*b+s*s*s+g*g*g==i) cout<<i<<endl;\n\t}\n\treturn 0;\n}",
                "@language": "C++"
            }
        },
        {
            "id": "00000185",
            "title": {
                "text": "C语言程序设计教程（第三版）课后习题8.1"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "128",
                "@unit": "mb"
            },
            "description": {
                "text": "写两个函数，分别求两个整数的最大公约数和最小公倍数，用主函数调用这两个函数，并输出结果两个整数由键盘输入。"
            },
            "input": {
                "text": "两个数"
            },
            "output": {
                "text": "最大公约数 最小公倍数"
            },
            "sample_input": {
                "text": "6 15"
            },
            "sample_output": {
                "text": "3 30"
            },
            "hint": {},
            "source": {},
            "solution": {
                "text": "#include\nusing namespace std;\nint gcd(int m,int n)\n{\n\tint r=m%n;\n\twhile (r)\n\t{\n\t\tm=n;\n\t\tn=r;\n\t\tr=m%n;\n\t}\n\treturn n;\n}\nint lcd(int m,int n)\n{\n\treturn m*n/gcd(m,n);\n}\nint main()\n{\n\tint m,n;\n\tcin>>m>>n;\n\tcout<<gcd(m,n)<<\" \"<<lcd(m,n)<<endl;\n\treturn 0;\n}",
                "@language": "C++"
            }
        },
        {
            "id": "00000186",
            "title": {
                "text": "ceshi"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "128",
                "@unit": "mb"
            },
            "description": {
                "text": "输入两个数，求和输出。"
            },
            "input": {
                "text": "1 2"
            },
            "output": {
                "text": "3"
            },
            "sample_input": {
                "text": "1 2"
            },
            "sample_output": {
                "text": "3"
            },
            "hint": {},
            "source": {
                "text": "输入输出练习 洛谷"
            },
            "solution": [
                {
                    "text": "#include\nint main()\n{\n  int a,b;\n  scanf(\"%d %d\",&a,&b);\n  printf(\"%d\",a+b);\n}",
                    "@language": "C"
                },
                {
                    "text": "#include \nusing namespace std;\nint main()\n{\n\tint a,b;\n\tscanf(\"%d%d\",&a,&b);\n\tprintf(\"%d\",a+b);\n\treturn 0;\n}",
                    "@language": "C++"
                },
                {
                    "text": "var a,b,c:longint;\nbegin\n  read(a,b);\n  c:=a+b;\n  write(c);\nend.",
                    "@language": "Pascal"
                },
                {
                    "text": "import java.util.Scanner;\n\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\n\t\twhile (sc.hasNext()) {\n\t\t\tint a = sc.nextInt();\n\t\t\tint b = sc.nextInt();\n\t\t\tSystem.out.println(a + b);\n\t\t}\n\t}\n}",
                    "@language": "Java"
                }
            ]
        },
        {
            "id": "00000187",
            "title": {
                "text": "DNA"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "128",
                "@unit": "mb"
            },
            "description": {
                "text": "小强从小就喜欢生命科学，他总是好奇花草鸟兽从哪里来的。终于， 小强上中学了，接触到了神圣的名词--DNA.它有一个双螺旋的结构。这让一根筋的小强抓破头皮，&ldquo;要是能画出来就好了&rdquo; 小强喊道。现在就请你帮助他吧"
            },
            "input": {
                "text": "输入包含多组测试数据。第一个整数N（N&lt;=15）,N表示组数，每组数据包含两个整数a,b。a表示一个单位的DNA串的行数，a为奇数且 3&lt;=a&lt;=39。b表示重复度(1&lt;=b&lt;=20)。"
            },
            "output": {
                "text": "输出DNA的形状，每组输出间有一空行。 "
            },
            "sample_input": {
                "text": "2\n3 1\n5 4"
            },
            "sample_output": {
                "text": "X X\n X\nX X\n\nX   X\n X X\n  X\n X X\nX   X\n X X\n  X\n X X\nX   X\n X X\n  X\n X X\nX   X\n X X\n  X\n X X\nX   X"
            },
            "hint": {},
            "source": {
                "text": "吉首大学软件学院 洛谷"
            },
            "solution": {
                "text": "#include\nusing namespace std;\nint main()\n{\n\tint n,a,b;\n\tcin>>n;\n\tfor (int k=1; k>a>>b;\n\t\tif (a==1)\t//a==1\n\t\t\tfor (int i=1; ij) cout<<\" \";\n\t\t\t\t\tcout<<endl;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (k<n) cout<<endl;\n\t}\n\treturn 0;\n}",
                "@language": "C++"
            }
        },
        {
            "id": "00000188",
            "title": {
                "text": "【C语言训练】亲密数"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "128",
                "@unit": "mb"
            },
            "description": {
                "text": "\n\t两个不同的自然数A和B，如果整数A的全部因子(包括1，不包括A本身)之和等于B；且整数B的全部因子(包括1，不包括B本身)之和等于A，则将整数A和B称为亲密数。求3000以内的全部亲密数。\n"
            },
            "input": {},
            "output": {
                "text": "\n\t3000以内的全部亲密数(输出格式:(A,B)，不加换行，不加分隔符号) \n一对亲密数只输出一次, 小的在前\n"
            },
            "sample_input": {
                "text": "no input needed"
            },
            "sample_output": {
                "text": "(220,284)(1184,1210)(2620,2924)"
            },
            "hint": {
                "text": "\n\t按照亲密数定义，要判断数a是否有亲密数，只要计算出a的全部因子的累加和为b，再计算b的全部因子的累加和为n，若n等于a则可判定a和b是亲密数。计算数a的各因子的算法： \n用a依次对i(i=1~a/2)进行模运算，若模运算结果等于0，则i为a的一个因子；否则i就不是a的因子。\n"
            },
            "source": {},
            "solution": [
                {
                    "text": "#include \n\nint main()\n{\n\tint i, j;\n\tfor (i = 1; i <= 3000; i++)\n\t{\n\t\tint b = 0, n = 0;\n\t\tfor (j = 1; j < i; j++)\n\t\t\tif (i % j == 0)\n\t\t\t\tb += j;\n\t\tfor (j = 1; j < b; j++)\n\t\t\tif (b % j == 0)\n\t\t\t\tn += j;\n\t\tif (n == i && i < b)\n\t\t\tprintf(\"(%d,%d)\", i, b);\n\t}\n\t\n\treturn 0;\n}",
                    "@language": "C"
                },
                {
                    "text": "#include\n#include\nusing namespace std;\nint f(int n)\n{\n\tint t=sqrt(n),sum=1;\n\tfor (int i=2; i<=t; i++)\n\t\tif (n%i==0) sum+=i+n/i;\n\tif (n==t*t) sum-=t;\n\treturn sum; \n}\nint main()\n{\n\tfor (int i=1; i<=3000; i++)\n\t{\n\t\tint a=f(i);\n\t\tif (i==f(a) && a<=3000 && i<a)\n\t\t\tcout<<\"(\"<<i<<\",\"<<a<<\")\";\n\t}\n\tcout<<endl;\n\treturn 0;\n}",
                    "@language": "C++"
                }
            ]
        },
        {
            "id": "00000189",
            "title": {
                "text": "【C语言训练】列出最简真分数序列*"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "128",
                "@unit": "mb"
            },
            "description": {
                "text": "\n\t按递增顺序依次列出所有分母为40，分子小于40的最简分数。\n"
            },
            "input": {},
            "output": {
                "text": "\n\t分数之间用逗号分开(含最末逗号)\n"
            },
            "sample_input": {
                "text": "no input needed"
            },
            "sample_output": {
                "text": "1/40,3/40,7/40,9/40,11/40,13/40,17/40,19/40,21/40,23/40,27/40,29/40,31/40,33/40,37/40,39/40,"
            },
            "hint": {
                "text": "\n\t对分子采用穷举法，利用最大公约数的方法，判断分子与40是否构成真分数。\n"
            },
            "source": {},
            "solution": {
                "text": "#include\nusing namespace std;\nint gcd(int m,int n)\t//最大公约数\n{\n\tint r=m%n;\n\twhile (r)\n\t{\n\t\tm=n;\n\t\tn=r;\n\t\tr=m%n;\n\t}\n\treturn n;\n}\nint main()\n{\n\tfor (int i=1; i<=40; i++)\t//枚举\n\t\tif (gcd(i,40)==1)\n\t\t\tcout<<i<<\"/\"<<40<<\",\";\n\tcout<<endl;\n\treturn 0;\n}",
                "@language": "C++"
            }
        },
        {
            "id": "00000190",
            "title": {
                "text": "【C语言训练】委派任务*"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "128",
                "@unit": "mb"
            },
            "description": {
                "text": "\n\t某侦察队接到一项紧急任务，要求在A、B、C、D、E、F六个队员中尽可能多地挑若干人，但有以下限制条件： \n1)A和B两人中至少去一人； \n2)A和D不能一起去； \n3)A、E和F三人中要派两人去； \n4)B和C都去或都不去； \n5)C和D两人中去一个； \n6)若D不去，则E也不去。 \n问应当让哪几个人去？ \n"
            },
            "input": {},
            "output": {
                "text": "\n\t要派出的人 \n若有多个，按字母递增顺序排列，用逗号分开（含末尾逗号） \n\n\n"
            },
            "sample_input": {
                "text": "no input needed"
            },
            "sample_output": {
                "text": "A,B,C,F,"
            },
            "hint": {},
            "source": {},
            "solution": {
                "text": "#include\nusing namespace std;\nint main()\n{\n\tfor (int a=0; a=1 && a+d!=2 && a+e+f==2 && (b+c==0||b+c==2)\n\t\t\t\t\t\t\t\t&& c+d==1 && (d+e==0||d==1))\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (a==1) cout<<\"A,\";\n\t\t\t\t\t\t\t\tif (b==1) cout<<\"B,\";\n\t\t\t\t\t\t\t\tif (c==1) cout<<\"C,\";\n\t\t\t\t\t\t\t\tif (d==1) cout<<\"D,\";\n\t\t\t\t\t\t\t\tif (e==1) cout<<\"E,\";\n\t\t\t\t\t\t\t\tif (f==1) cout<<\"F,\";\n\t\t\t\t\t\t\t\tcout<<endl;\n\t\t\t\t\t\t\t}\n\treturn 0;\n}",
                "@language": "C++"
            }
        },
        {
            "id": "00000191",
            "title": {
                "text": "【C语言训练】字符串正反连接"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "128",
                "@unit": "mb"
            },
            "description": {
                "text": "\n\t所给字符串正序和反序连接，形成新串并输出\n"
            },
            "input": {
                "text": "\n\t任意字符串（长度&lt;=50）\n"
            },
            "output": {
                "text": "\n\t字符串正序和反序连接所成的新字符串\n"
            },
            "sample_input": {
                "text": "123abc"
            },
            "sample_output": {
                "text": "123abccba321"
            },
            "hint": {},
            "source": {},
            "solution": [
                {
                    "text": "#include \n#include \n#include \n\nusing namespace std;\n\nint main()\n{\n\tstring s1,s2;\n\tcin >> s1;\n\ts2=s1;\n\t\n\tfor(int i=0;i<=s1.length();++i)\n\ts2[i]=s1[s1.length()-i-1];\n\t\n\tcout << s1+s2;\n\treturn 0;\n}",
                    "@language": "C++"
                },
                {
                    "text": "# coding=utf-8\nstr1=input()\nstr2=str1\nfor i in range(len(str1),0,-1):\n    str2=str2+str1[i-1]\nprint(str2)",
                    "@language": "Python"
                }
            ]
        },
        {
            "id": "00000192",
            "title": {
                "text": "【C语言训练】数字母"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "128",
                "@unit": "mb"
            },
            "description": {
                "text": "\n\t输入一个字符串,数出其中的字母的个数.\n"
            },
            "input": {
                "text": "\n\t一个字符串，不包含空格（长度小于100）\n"
            },
            "output": {
                "text": "\n\t字符串中的字母的个数\n"
            },
            "sample_input": {
                "text": "124lfdk54AIEJ92854&%$GJ"
            },
            "sample_output": {
                "text": "10"
            },
            "hint": {},
            "source": {},
            "solution": {
                "text": "#include\n#include\n#include\nusing namespace std;\nint main()\n{\n\tstring s;\n\tgetline(cin,s);\n\tint len=s.size(),ans=0;\n\tfor (int i=0; i<len; i++)\n\t\tif (isalpha(s[i])) ans++;\n\tcout<<ans<<endl;\n\treturn 0;\n}",
                "@language": "C++"
            }
        },
        {
            "id": "00000193",
            "title": {
                "text": "【C语言训练】求具有abcd=(ab+cd)2性质的四位数"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "128",
                "@unit": "mb"
            },
            "description": {
                "text": "\n\t3025这个数具有一种独特的性质：将它平分为二段，即30和25，使之相加后求平方，即(30+25)2，恰好等于3025本身。请求出具有这样性质的全部四位数\n"
            },
            "input": {},
            "output": {
                "text": "\n\t满足题意的数全部四位数(从小到大输出,且数之间用两个空格分开) \n"
            },
            "sample_input": {
                "text": "no input needed"
            },
            "sample_output": {
                "text": "2025  3025  9801"
            },
            "hint": {
                "text": "\n\t根据题意可以采用穷举法，对所有四位数进行判断，从而筛选出符合这种性质的四位数。具体算法实现，可任取一个四位数，将其截为两部分，前两位为a，后两位为b，然后套用公式计算并判断。\n"
            },
            "source": {},
            "solution": {
                "text": "#include\nusing namespace std;\nint main()\n{\n\tfor (int i=1000; i<10000; i++)\n\t{\n\t\tint a=i/100,b=i%100;\n\t\tif (i==(a+b)*(a+b)) cout<<i<<\"  \";\n\t}\n\tcout<<endl;\n\treturn 0;\n}",
                "@language": "C++"
            }
        },
        {
            "id": "00000194",
            "title": {
                "text": "【C语言训练】求车速"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "128",
                "@unit": "mb"
            },
            "description": {
                "text": "\n\t一辆以固定速度行驶的汽车，司机在上午10点看到里程表上的读数是一个对称数(即这个数从左向右读和从右向左读是完全一样的)，为95859。两小时后里程表上出现了一个新的对称数。问该车的速度是多少？新的对称数是多少？\n"
            },
            "input": {},
            "output": {},
            "sample_input": {
                "text": "no input needed"
            },
            "sample_output": {
                "text": "95959"
            },
            "hint": {
                "text": "\n\t根据题意，设所求对称数为i，其初值为95589，对其依次递增取值，将i值的每一位分解后与其对称位置上的数进行比较，若每个对称位置上的数皆相等，则可判定i即为所求的对称数。\n"
            },
            "source": {},
            "solution": [
                {
                    "text": "#include\n\nint main()\n{\n\tprintf(\"95959\");\n\t\t\n\treturn 0;\n}",
                    "@language": "C"
                },
                {
                    "text": "#include\nusing namespace std;\nbool ishw(int n)\n{\n\tint a[10]={0};\n\twhile (n)\n\t{\n\t\ta[++a[0]]=n%10;\n\t\tn/=10;\n\t}\n\tfor (int i=1,j=a[0]; i<j; i++,j--)\n\t\tif (a[i]!=a[j]) return false;\n\treturn true;\n}\nint main()\n{\n\tint n=95859;\n\twhile (++n)\n\t\tif (ishw(n)) break;\n\tcout<<n<<endl;\n\treturn 0;\n}",
                    "@language": "C++"
                }
            ]
        },
        {
            "id": "00000195",
            "title": {
                "text": "【C语言训练】自守数问题"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "128",
                "@unit": "mb"
            },
            "description": {
                "text": "\n\t自守数是指一个数的平方的尾数等于该数自身的自然数。 \n例如： \n25^2=625 \n76^2=5776 \n9376^2=87909376 \n请求出200000以内的自守数?\n"
            },
            "input": {},
            "output": {
                "text": "\n\t200000以内的自守数(包括0, 数之间用两个空格分开) \n"
            },
            "sample_input": {
                "text": "no input needed"
            },
            "sample_output": {
                "text": "0  1  5  6  25  76  376  625  9376  90625  109376"
            },
            "hint": {
                "text": "\n\t若采用“求出一个数的平方后再截取最后相应位数”的方法显然是不可取的，因为计算机无法表示过大的整数。 \n分析手工方式下整数平方(乘法)的计算过程，以376为例： \n376 被乘数 \nX 376 乘数 \n---------- \n2256 第一个部分积=被乘数*乘数的倒数第一位 \n2632 第二个部分积=被乘数*乘数的倒数第二位 \n1128 第三个部分积=被乘数*乘数的倒数第三位 \n---------- \n141376 积 \n本问题所关心的是积的最后三位。分析产生积的后三位的过程，可以看出，在每一次的部分积中，并不是它的每一位都会对积的后三位产生影响。总结规律可以得到：在三位数乘法中，对积的后三位产生影响的部分积分别为： \n第一个部分积中：被乘数最后三位*乘数的倒数第一位 \n第二个部分积中：被乘数最后二位*乘数的倒数第二位 \n第三个部分积中：被乘数最后一位*乘数的倒数第三位 \n将以上的部分积的后三位求和后截取后三位就是三位数乘积的后三位。这样的规律可以推广到同样问题的不同位数乘积。 \n按照手工计算的过程可以设计算法编写程序。 \n"
            },
            "source": {},
            "solution": {
                "text": "#include \n\nusing namespace std;\n\nint main()\n{\n    long long i,j=10;\n    long long n;\n    for(i=0;i<=200000;++i)\n    {\n        if(j<=i)\n            j*=10;\n        n=i*i;\n        if(n%j==i)\n           cout<<i<<\"  \";\n    }\n    return 0;\n}",
                "@language": "C++"
            }
        },
        {
            "id": "00000196",
            "title": {
                "text": "【C语言训练】舍罕王的失算"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "128",
                "@unit": "mb"
            },
            "description": {
                "text": "\n\t相传国际象棋是古印度舍罕王的宰相达依尔发明的.舍罕王十分喜爱象棋,决定让宰相自己选择何种赏赐.这位聪明的宰相指着8*8共64格的象棋说:陛下,请您赏给我一些麦子吧.就在棋盘的第1格放1粒,第2格放2粒,第三格放4粒,以后每一格都比前一格增加一位,依此放完棋盘一64格,我就感激不尽了.舍罕王让人扛了一袋麦子,他要兑现他的许诺. \n请问,国王要兑现他的许诺共要多少粒麦子赏赐他的宰相?\n"
            },
            "input": {},
            "output": {
                "text": "\n\t以整数形式输出,不要其它符号\n"
            },
            "sample_input": {
                "text": "no input needed"
            },
            "sample_output": {
                "text": "18446744073709552000"
            },
            "hint": {
                "text": "\n\t应该是个很大的数,要考虑数的精度问题! 用double类型，输出尽可能精确的结果。\n"
            },
            "source": {},
            "solution": [
                {
                    "text": "#include\n\nint main()\n{\n\t\n\tprintf(\"18446744073709552000\");\n\t\n\treturn 0;\n}",
                    "@language": "C"
                },
                {
                    "text": "#include\n#include\nusing namespace std;\nint main()\n{\n\tcout<<\"18446744073709552000\"<<endl;\n\treturn 0;\n}",
                    "@language": "C++"
                }
            ]
        },
        {
            "id": "00000197",
            "title": {
                "text": "【C语言训练】计算1977！*"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "128",
                "@unit": "mb"
            },
            "description": {
                "text": "\n\t编写一个程序，计算1977！的值，\n"
            },
            "input": {},
            "output": {},
            "sample_input": {},
            "sample_output": {},
            "test_input": {
                "text": "0"
            },
            "test_output": {
                "text": "44885501861451087214610857079909248837424492260428166724654147729643971700105425720084828218702600864349140553199425461195269756193449196420567670679997930497776962868627670814088525137310931384053497107655953166587777978189922585102015543252313842383879336452450405459365865930993882304967506579365573169114407061415044954204598042872984994370362994974190731648365853764021641267208890952183486957937797501412079339876017057593846219506921136683729082140979815738837181904628215025970879798689459975470705399719623801943630265034717650140070948581455541860388599570712955903767340302796772249678308667271334347735171920753722738382693169959755895777926922251934138946424062651593626615221554668142680371533735545526245936393642639820076708459169410776182481701982480050935429118156542429067920764915432851090578762675010478117563049656075543746119739717069866844883357409792569209134960636899425405149847065831281602082518075830646453654516317941696388277090166892581177070312338391653451955318906268079481790194265751853219151144318930316453953750991148493823206443369425944001941242917619527312311207417490693701494050808890878867975845117860433305316607551476965975790906896956127068298433273240281529950530069641805218400403258304360527381746385960815854239125565833311599210531902596579244149649008262885625747559728294814901871961517895638622905618910600921127432523435482034431607171597093293499891539807469664419507507385877763852240766577618864272175955102012797157374020057234790470573845442607086246849758817092472168600233686805040307801018904746900136895007446767892015103691546758917875283121559678424003351902375286355906676294721988128226509353084890739795591400978292429823019720587768866778565392965756177032714260472652522638182042178310497913363256666800211643586936480222169051736890119033575641362239097097668967707166546262165398342392082223840669956935518432433500512388128400501454567656003140699526312023215530969441249645000266981731474774311788566684103080652651130203579577659975621990943301760656291769606581621697893381784095276308563096667204798424584607702111698065254798376863076775838978795969975490569630809412346134850519967391026203435895655178226018567556450547196780276455924702875584894370421382586806714454592324162291540557289594093207488369616272458093646865153652591651977875393766158034846660994538470440002956734058798262392142018920993818689377588368163212024980190732396123717654885345318311881246452386979748492361608880215366959550154169889976098868177465811974997151687956412035252091325327239663869718509994035950918164411361389182525735435503547508839069279412344659861985920520906072587123123331095210491314236109240894403174951136822689796682524419281202547410727207049300182313660882768899486299620250523429591273583672949060001392324716645374632799121425207847994631057230794080496305639953304416917362257038854013896602584668330878544023543613061625753736164860737224928877680952653955796563792519162354541809473826165637051852050551375789673906991015231770191344532237230197212247808977750167304211358001556586938445903710297655467254175868400223251027316617594966819372453229090075416331169907476721079357279340658265132544616671356523759070808402554409562998869466175554581595720186681291377238031229963602424692724581562963871555299756846210719567248993090291643090340865372994247770175629123166395093036590992401428163026242637631276118954137752850608058698188636249011898545242604954174231816312797226812573427520943156653441116944356313617111649439782483116345998865356371264021702934385830524607545916082681723336300525740351901199785928918756667131759364856921713383210912328024559654704854102702259188968835912529499829982173477142559122574238026368742589720302024351936092912062935207156160753422673950733411087659019615053695175512684860561708230621159432059777334251461120470573475673358987108714856295142438953966517877419012271749890653388333329644505840068967629673118338646511218029658964431806630859185514092919508645264791768635043717176995406906564969624139415056784502969192669845401546983119762050259532817708831129549658092293235478320212147238061012342575368912996276889850467927800530591024505261738190292620196591471057917771997314616468851435648447291509773768541016965006318582734773265425619413143971696759006852267259561850525423115448245064957917308932248736590889553216053395073528665556848023503474296872182653139085069088572995129970277847947107821860675145364682650925420911412190721877818056372224222386334296773926506377426553303395543283286979254479006385723721651473737581750366456411044778457816144171346913394986370709474086023995999519809157066651288416873822563589323100234110838358055086897561674267091601132114100558679834327264396337664219084247730733599995905528037136968919519302002171318340744996774790395419281259057908266922735066452279956814516691434241768267941233868352917686780465248273578999914786724525402231196812975707174605005153159430528247125884412573041717023369550991289730066133225519782887483548537172695747744050948960901844040458316467701938297164400940155373802267886187842636408654937504031184246746956396377352375369130175324314589462528000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
            },
            "hint": {
                "text": "\n\t1977！的值超过计算机所能表示的整数范围，请考虑其他技巧，假设 1977！之值不超过10000位用一个含有10000个元素的整型数组num表示其结果，每个元素存放一位，num[0]存入个位数，num[]存入十 位数，依次类推……8！=40320，当前最高位len=4，求9！与各位依次相乘rum保存当前的进位数字。（0&lt;=rem&lt;9）. \n1)rem置初始值0. \n2）i=0:rem=rem+num[0]*9=0+0=0。num[0]=rem%10=0，rem=rem/10=0。 \n3）i=1:rem=rem+num[1]*9=0+18=18。num[1]=rem%10=8，rem=rem/10=1。 \n4）i=2:rem=rem+num[2]*9=1+27=28。num[2]=rem%10=8，rem=rem/10=2。 \n5）i=3:rem=rem+num[3]*9=2+0=2。num[3]=rem%10=2，rem=rem/10=0。 \n6）i=4:rem=rem+num[4]*9=0+36=36。num[4]=rem%10=6，rem=rem/10=3。 \n7）rem=3，说明有进位，数组最高位增加1，len=len+1=5，num[5]=rem%10=3，rem=rem/10=0，结束。 \nnum各位结果为：3、6、2、8、8、0。即9！=362880 \n"
            },
            "source": {},
            "solution": {
                "text": "#include\n#include\nusing namespace std;\nconst int N = 10000;\nint a[N];\n\nvoid fact(int n){\n\tfill(a,a+N,0);\n\ta[0]=a[1]=1;\n\tfor (int i=1; i=1; i--) cout<<a[i];\n\tcout<<endl;\n}\n\nint main(){\n\tfact(1977);\n\toutput(a);\n\treturn 0;\n}",
                "@language": "C++"
            }
        },
        {
            "id": "00000198",
            "title": {
                "text": "【C语言训练】阿姆斯特朗数"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "128",
                "@unit": "mb"
            },
            "description": {
                "text": "\n\t如果一个正整数等于其各个数字的立方和，则称该数为阿姆斯特朗数(亦称为自恋性数)。 \n如 407=4^3+0^3+7^3就是一个阿姆斯特朗数。试编程求大于1小于1000的所有阿姆斯特朗数。 \n"
            },
            "input": {},
            "output": {
                "text": "\n\t从小到大输出,数之间用两个空格分开 \n"
            },
            "sample_input": {
                "text": "no input needed"
            },
            "sample_output": {
                "text": "153  370  371  407"
            },
            "hint": {
                "text": "\n\t可采用穷举法，依次取1000以内的各数(设为i)，将i的各位数字分解后，据阿姆斯特朗数的性质进行计算和判断。 \n"
            },
            "source": {},
            "solution": [
                {
                    "text": "#include\n\nint main()\n{\n\tprintf(\"153  370  371  407  \");\t\n\n\treturn 0;\n}",
                    "@language": "C"
                },
                {
                    "text": "#include\nusing namespace std;\nint main()\n{\n    int s[4],a,b=0;\n    for(int i=2;i<=1000;i++)\n    {\n        a=i;\n        b=0;\n        for(int j=0;j<4;j++){s[j]=a%10;b++;a/=10;if(a==0){break;}}\n        for(int j=0;j<b;j++){a+=s[j]*s[j]*s[j];}\n        if(i==a){printf(\"%d  \",i);}\n    }\n    return 0;\n}",
                    "@language": "C++"
                }
            ]
        },
        {
            "id": "00000199",
            "title": {
                "text": "发工资咯"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "128",
                "@unit": "mb"
            },
            "description": {
                "text": "作为吉大的老师，最盼望的日子就是每月的9号了，因为这一天是发工资的日子，养家糊口就靠它了，呵呵 \n但是对于学校财务处的工作人员来说，这一天则是很忙碌的一天，财务处的小胡老师最近就在考虑一个问题：如果每个老师的工资额都知道，最少需要准备多少张人民币，才能在给每位老师发工资的时候都不用老师找零呢？ \n这里假设老师的工资都是正整数，单位元，人民币一共有100元、50元、10元、5元、2元和1元六种。"
            },
            "input": {
                "text": "输入数据包含多个测试实例，每个测试实例的第一行是一个整数n（n&lt;100），表示老师的人数，然后是n个老师的工资。 \nn=0表示输入的结束，不做处理。"
            },
            "output": {
                "text": "对于每个测试实例输出一个整数x,表示至少需要准备的人民币张数。每个输出占一行。"
            },
            "sample_input": {
                "text": "3 1 2 3\n0"
            },
            "sample_output": {
                "text": "4"
            },
            "hint": {},
            "source": {
                "text": "吉首大学软件学院"
            },
            "solution": {
                "text": "#include\nusing namespace std;\n\nint main() {\n\tint n;\n\tcin >> n;\n\twhile (n != 0){\n\t\tint ans = 0;\n\t\tfor (int i = 0; i > x;\n\t\t\tans += x / 100;\n\t\t\tans %= 100;\n\t\t\tans += x / 50;\n\t\t\tans %= 50;\n\t\t\tans += x / 10;\n\t\t\tans %= 10;\n\t\t\tans += x / 5;\n\t\t\tans %= 5;\n\t\t\tans += x / 2;\n\t\t\tans %= 2;\n\t\t\tans += x;\n\t\t}\n\t\tcout > n;\n\t}\n\treturn 0;\n}",
                "@language": "C++"
            }
        },
        {
            "id": "00000200",
            "title": {
                "text": "有重复元素的排列问题"
            },
            "time_limit": {
                "text": "1",
                "@unit": "s"
            },
            "memory_limit": {
                "text": "128",
                "@unit": "mb"
            },
            "description": {
                "text": "\n\t\n\n\n\t设R={r1, r2 ,…, rn}是要进行排列的n 个元素。其中元素 r1,\nr2 ,…, rn 可能相同。试设计 \n\n\n\t一个算法，列出R 的所有不同排列。  \n\n\n\t\n\n\n\t  \n\n\n\t&nbsp; \n\n\n\t编程任务：  \n\n\n\t给定n 以及待排列的n 个元素。计算出这n 个元素的所有不同排列。  \n"
            },
            "input": {
                "text": "\n\t输入的第1 行是元素个数n，1&lt;=n&lt;=500。接下来的1 行 \n\n\n\t是待排列的n 个元素。  \n"
            },
            "output": {
                "text": "\n\t程序运行结束时，将计算出的n 个元素的所有不同排列输出。\n\n最后1 行中的数是排列总数。"
            },
            "sample_input": {
                "text": "4\naacc"
            },
            "sample_output": {
                "text": "aacc\nacac\nacca\ncaac\ncaca\nccaa\n6"
            },
            "hint": {},
            "source": {
                "text": "算法设计-复杂算法"
            },
            "solution": [
                {
                    "text": "#include \n#define max 500\n int  count=0;\nint repeat(char str[],int a ,int b )\n {\n  int i;\n          if(b>a)\n           for(i=a;i<b;i++)\n              if(str[i]==str[b])\n                  return 0;\n           return 1;\n}\n\n\n void perm(char str[],int k,int m)\n {\n           int i;\n           if(k==m)\n           {\n              count++;\n              for(i=0;i<=m;i++)\n                  printf(\"%c\",str[i]);\n              printf(\"\\n\");\n              return ;\n           }\n           else for(i=k;i<=m;i++)\n                   if(repeat(str,k,i))\n                   {\n                          char t;\n\t\t\t\t\t\t  t=str[i];\n\t\t\t\t\t\t  str[i]=str[k];\n\t\t\t\t\t\t  str[k]=t;\n                           perm(str,k+1,m);\n                           t=str[i];\n\t\t\t\t\t\t   str[i]=str[k];\n\t\t\t\t\t\t  str[k]=t;\n                   }\n   \n }\n int main()\n {\n      char str[max];\n      int n,i;\n\t  scanf(\"%d\",&n);\n      getchar();\n      for(i=0;i<n;i++)\n          scanf(\"%c\",&str[i]);\n      perm(str,0,n-1) ;\n      printf(\"%d\\n\",count);\n      return 0;\n }",
                    "@language": "C"
                },
                {
                    "text": "#include \n\n#include \n\nusing   namespace std ;\n\nlong ans ;\n\nint ok(char str[],int a ,int b )\n\n{\n\n        if( b > a)\n\n         for(int i = a ; i>n ;\n\n    ans = 0 ;\n\n    for( i = 0 ; i >str[i];\n\n    perm(str,0,n-1) ;\n\n    cout<<ans<<endl;\n\n         return 0;\n\n}",
                    "@language": "C++"
                },
                {
                    "text": "import java.awt.List;\nimport java.util.Scanner;\n\n/**\n *\n * @author wanshuzhen\n */ \n\npublic class Main {\n    public static int ans=0;\n    public static void main(String[] args)\n    {\n       \n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        char [] list = new char[n];\n        list = sc.next().toCharArray();\n        perm(list, 0, n-1);\n       // System.out.print(\"输出序列为：\");\n        System.out.println(ans);\n    }\n    public static void perm(char []list ,int k, int m)\n    {\n        if(k==m)\n        {\n            ans++;\n            for (int i=0;ik)for(int t=k;t<i;t++)if(list[t]==list[i])return false;\n        return true;\n    }\n    public static  void swap(char []list ,int i,int j){\n        char temp;\n        temp= list[i];\n        list[i]=list[j];\n        list[j]=temp;\n        \n    }\n}",
                    "@language": "Java"
                }
            ]
        }
    ]
}